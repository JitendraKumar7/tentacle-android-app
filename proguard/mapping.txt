android.support.annotation.Keep -> android.support.annotation.Keep:
android.support.v4.app.NotificationBuilderWithActions -> android.support.a.a.a:
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> a
android.support.v4.app.NotificationBuilderWithBuilderAccessor -> android.support.a.a.b:
    android.app.Notification$Builder getBuilder() -> a
    android.app.Notification build() -> b
android.support.v4.app.NotificationCompat -> android.support.a.a.c:
    android.support.v4.app.NotificationCompat$NotificationCompatImpl IMPL -> a
    void addActionsToBuilder(android.support.v4.app.NotificationBuilderWithActions,java.util.ArrayList) -> b
    void addStyleToBuilderJellybean(android.support.v4.app.NotificationBuilderWithBuilderAccessor,android.support.v4.app.NotificationCompat$Style) -> b
    void access$000(android.support.v4.app.NotificationBuilderWithActions,java.util.ArrayList) -> a
    void access$100(android.support.v4.app.NotificationBuilderWithBuilderAccessor,android.support.v4.app.NotificationCompat$Style) -> a
    android.support.v4.app.NotificationCompat$NotificationCompatImpl access$200() -> a
android.support.v4.app.NotificationCompat$Action -> android.support.a.a.d:
    android.os.Bundle mExtras -> e
    android.support.v4.app.RemoteInput[] mRemoteInputs -> f
    int icon -> a
    java.lang.CharSequence title -> b
    android.app.PendingIntent actionIntent -> c
    android.support.v4.app.NotificationCompatBase$Action$Factory FACTORY -> d
    int getIcon() -> a
    java.lang.CharSequence getTitle() -> b
    android.app.PendingIntent getActionIntent() -> c
    android.os.Bundle getExtras() -> d
    android.support.v4.app.RemoteInput[] getRemoteInputs() -> e
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] getRemoteInputs() -> f
android.support.v4.app.NotificationCompat$Action$1 -> android.support.a.a.e:
android.support.v4.app.NotificationCompat$BigPictureStyle -> android.support.a.a.f:
    android.graphics.Bitmap mPicture -> a
    android.graphics.Bitmap mBigLargeIcon -> b
    boolean mBigLargeIconSet -> c
android.support.v4.app.NotificationCompat$BigTextStyle -> android.support.a.a.g:
    java.lang.CharSequence mBigText -> a
android.support.v4.app.NotificationCompat$Builder -> android.support.a.a.h:
    android.content.Context mContext -> a
    java.lang.CharSequence mContentTitle -> b
    java.lang.CharSequence mContentText -> c
    android.app.PendingIntent mContentIntent -> d
    android.app.PendingIntent mFullScreenIntent -> e
    android.widget.RemoteViews mTickerView -> f
    android.graphics.Bitmap mLargeIcon -> g
    java.lang.CharSequence mContentInfo -> h
    int mNumber -> i
    int mPriority -> j
    boolean mShowWhen -> k
    boolean mUseChronometer -> l
    android.support.v4.app.NotificationCompat$Style mStyle -> m
    java.lang.CharSequence mSubText -> n
    int mProgressMax -> o
    int mProgress -> p
    boolean mProgressIndeterminate -> q
    java.lang.String mGroupKey -> r
    boolean mGroupSummary -> s
    java.lang.String mSortKey -> t
    java.util.ArrayList mActions -> u
    boolean mLocalOnly -> v
    java.lang.String mCategory -> w
    android.os.Bundle mExtras -> x
    int mColor -> y
    int mVisibility -> z
    android.app.Notification mPublicVersion -> A
    android.app.Notification mNotification -> B
    java.util.ArrayList mPeople -> C
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int) -> a
    android.support.v4.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence) -> a
    android.support.v4.app.NotificationCompat$Builder setContentText(java.lang.CharSequence) -> b
    android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent) -> a
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri) -> a
    android.support.v4.app.NotificationCompat$Builder setLights(int,int,int) -> a
    android.support.v4.app.NotificationCompat$Builder setAutoCancel(boolean) -> a
    void setFlag(int,boolean) -> a
    android.app.Notification build() -> a
    android.support.v4.app.NotificationCompat$BuilderExtender getExtender() -> b
    java.lang.CharSequence limitCharSequenceLength(java.lang.CharSequence) -> c
android.support.v4.app.NotificationCompat$BuilderExtender -> android.support.a.a.i:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationBuilderWithBuilderAccessor) -> a
android.support.v4.app.NotificationCompat$InboxStyle -> android.support.a.a.j:
    java.util.ArrayList mTexts -> a
android.support.v4.app.NotificationCompat$NotificationCompatImpl -> android.support.a.a.k:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplApi20 -> android.support.a.a.l:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplApi21 -> android.support.a.a.m:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplBase -> android.support.a.a.n:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplGingerbread -> android.support.a.a.o:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb -> android.support.a.a.p:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich -> android.support.a.a.q:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean -> android.support.a.a.r:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplKitKat -> android.support.a.a.s:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender) -> a
android.support.v4.app.NotificationCompat$Style -> android.support.a.a.t:
    java.lang.CharSequence mBigContentTitle -> d
    java.lang.CharSequence mSummaryText -> e
    boolean mSummaryTextSet -> f
android.support.v4.app.NotificationCompatApi20 -> android.support.a.a.u:
    void addAction(android.app.Notification$Builder,android.support.v4.app.NotificationCompatBase$Action) -> a
android.support.v4.app.NotificationCompatApi20$Builder -> android.support.a.a.v:
    android.app.Notification$Builder b -> a
    android.os.Bundle mExtras -> b
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> a
    android.app.Notification$Builder getBuilder() -> a
    android.app.Notification build() -> b
android.support.v4.app.NotificationCompatApi21 -> android.support.a.a.w:
android.support.v4.app.NotificationCompatApi21$Builder -> android.support.a.a.x:
    android.app.Notification$Builder b -> a
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> a
    android.app.Notification$Builder getBuilder() -> a
    android.app.Notification build() -> b
android.support.v4.app.NotificationCompatBase -> android.support.a.a.y:
android.support.v4.app.NotificationCompatBase$Action -> android.support.a.a.z:
    int getIcon() -> a
    java.lang.CharSequence getTitle() -> b
    android.app.PendingIntent getActionIntent() -> c
    android.os.Bundle getExtras() -> d
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] getRemoteInputs() -> f
android.support.v4.app.NotificationCompatBase$Action$Factory -> android.support.a.a.aa:
android.support.v4.app.NotificationCompatGingerbread -> android.support.a.a.ab:
    android.app.Notification add(android.app.Notification,android.content.Context,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent,android.app.PendingIntent) -> a
android.support.v4.app.NotificationCompatHoneycomb -> android.support.a.a.ac:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap) -> a
android.support.v4.app.NotificationCompatIceCreamSandwich -> android.support.a.a.ad:
android.support.v4.app.NotificationCompatIceCreamSandwich$Builder -> android.support.a.a.ae:
    android.app.Notification$Builder b -> a
    android.app.Notification$Builder getBuilder() -> a
    android.app.Notification build() -> b
android.support.v4.app.NotificationCompatJellybean -> android.support.a.a.af:
    java.lang.Object sExtrasLock -> a
    java.lang.reflect.Field sExtrasField -> b
    boolean sExtrasFieldAccessFailed -> c
    java.lang.Object sActionsLock -> d
    void addBigTextStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,java.lang.CharSequence,boolean,java.lang.CharSequence,java.lang.CharSequence) -> a
    void addBigPictureStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,java.lang.CharSequence,boolean,java.lang.CharSequence,android.graphics.Bitmap,android.graphics.Bitmap,boolean) -> a
    void addInboxStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,java.lang.CharSequence,boolean,java.lang.CharSequence,java.util.ArrayList) -> a
    android.util.SparseArray buildActionExtrasMap(java.util.List) -> a
    android.os.Bundle getExtras(android.app.Notification) -> a
    android.os.Bundle writeActionAndGetExtras(android.app.Notification$Builder,android.support.v4.app.NotificationCompatBase$Action) -> a
android.support.v4.app.NotificationCompatJellybean$Builder -> android.support.a.a.ag:
    android.app.Notification$Builder b -> a
    android.os.Bundle mExtras -> b
    java.util.List mActionExtrasList -> c
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> a
    android.app.Notification$Builder getBuilder() -> a
    android.app.Notification build() -> b
android.support.v4.app.NotificationCompatKitKat -> android.support.a.a.ah:
android.support.v4.app.NotificationCompatKitKat$Builder -> android.support.a.a.ai:
    android.app.Notification$Builder b -> a
    android.os.Bundle mExtras -> b
    java.util.List mActionExtrasList -> c
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> a
    android.app.Notification$Builder getBuilder() -> a
    android.app.Notification build() -> b
android.support.v4.app.RemoteInput -> android.support.a.a.aj:
    java.lang.String mResultKey -> b
    java.lang.CharSequence mLabel -> c
    java.lang.CharSequence[] mChoices -> d
    boolean mAllowFreeFormInput -> e
    android.os.Bundle mExtras -> f
    android.support.v4.app.RemoteInput$Impl IMPL -> g
    android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory FACTORY -> a
    java.lang.String getResultKey() -> a
    java.lang.CharSequence getLabel() -> b
    java.lang.CharSequence[] getChoices() -> c
    boolean getAllowFreeFormInput() -> d
    android.os.Bundle getExtras() -> e
android.support.v4.app.RemoteInput$1 -> android.support.a.a.ak:
android.support.v4.app.RemoteInput$Impl -> android.support.a.a.al:
android.support.v4.app.RemoteInput$ImplApi20 -> android.support.a.a.am:
android.support.v4.app.RemoteInput$ImplBase -> android.support.a.a.an:
android.support.v4.app.RemoteInput$ImplJellybean -> android.support.a.a.ao:
android.support.v4.app.RemoteInputCompatApi20 -> android.support.a.a.ap:
    android.app.RemoteInput[] fromCompat(android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> a
android.support.v4.app.RemoteInputCompatBase -> android.support.a.a.aq:
android.support.v4.app.RemoteInputCompatBase$RemoteInput -> android.support.a.a.ar:
    java.lang.String getResultKey() -> a
    java.lang.CharSequence getLabel() -> b
    java.lang.CharSequence[] getChoices() -> c
    boolean getAllowFreeFormInput() -> d
    android.os.Bundle getExtras() -> e
android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory -> android.support.a.a.as:
android.support.v4.app.RemoteInputCompatJellybean -> android.support.a.a.at:
    android.os.Bundle toBundle(android.support.v4.app.RemoteInputCompatBase$RemoteInput) -> a
    android.os.Bundle[] toBundleArray(android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> a
android.support.v4.content.WakefulBroadcastReceiver -> android.support.a.b.a:
    android.util.SparseArray mActiveWakeLocks -> a
    int mNextId -> b
android.support.v4.view.MotionEventCompat -> android.support.a.c.a:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionMasked(android.view.MotionEvent) -> a
    int getActionIndex(android.view.MotionEvent) -> b
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getY(android.view.MotionEvent,int) -> c
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.a.c.b:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getY(android.view.MotionEvent,int) -> c
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.a.c.c:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getY(android.view.MotionEvent,int) -> c
android.support.v4.view.MotionEventCompat$GingerbreadMotionEventVersionImpl -> android.support.a.c.d:
android.support.v4.view.MotionEventCompat$HoneycombMr1MotionEventVersionImpl -> android.support.a.c.e:
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.a.c.f:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getY(android.view.MotionEvent,int) -> c
android.support.v4.view.MotionEventCompatEclair -> android.support.a.c.g:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getY(android.view.MotionEvent,int) -> c
android.support.v4.view.ScrollingView -> android.support.a.c.h:
    int computeVerticalScrollRange() -> a
    int computeVerticalScrollOffset() -> b
    int computeVerticalScrollExtent() -> c
android.support.v4.view.ViewCompat -> android.support.a.c.i:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollVertically(android.view.View,int) -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    void setScaleX(android.view.View,float) -> a
    void setScaleY(android.view.View,float) -> b
    float getScaleX(android.view.View) -> a
    void setElevation(android.view.View,float) -> c
    void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.a.c.j:
    java.util.WeakHashMap mViewPropertyAnimatorCompatMap -> a
    boolean canScrollVertically(android.view.View,int) -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    float getScaleX(android.view.View) -> a
    void setScaleX(android.view.View,float) -> a
    void setScaleY(android.view.View,float) -> b
    void setElevation(android.view.View,float) -> c
    void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean) -> a
    boolean canScrollingViewScrollVertically(android.support.v4.view.ScrollingView,int) -> a
android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl -> android.support.a.c.k:
    void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.a.c.l:
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.a.c.m:
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    void setScaleX(android.view.View,float) -> a
    void setScaleY(android.view.View,float) -> b
    float getScaleX(android.view.View) -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.a.c.n:
    boolean accessibilityDelegateCheckFailed -> b
    boolean canScrollVertically(android.view.View,int) -> a
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.a.c.o:
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.a.c.p:
android.support.v4.view.ViewCompat$KitKatViewCompatImpl -> android.support.a.c.q:
android.support.v4.view.ViewCompat$LollipopViewCompatImpl -> android.support.a.c.r:
    void setElevation(android.view.View,float) -> c
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.a.c.s:
    boolean canScrollVertically(android.view.View,int) -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    float getScaleX(android.view.View) -> a
    void setScaleX(android.view.View,float) -> a
    void setScaleY(android.view.View,float) -> b
    void setElevation(android.view.View,float) -> c
    void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewCompatEclairMr1 -> android.support.a.c.t:
    java.lang.reflect.Method sChildrenDrawingOrderMethod -> a
    void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewCompatHC -> android.support.a.c.u:
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    float getScaleX(android.view.View) -> a
    void setScaleX(android.view.View,float) -> a
    void setScaleY(android.view.View,float) -> b
android.support.v4.view.ViewCompatICS -> android.support.a.c.v:
    boolean canScrollVertically(android.view.View,int) -> a
android.support.v4.view.ViewCompatLollipop -> android.support.a.c.w:
    void setElevation(android.view.View,float) -> a
android.support.v4.view.animation.FastOutSlowInInterpolator -> android.support.a.c.a.a:
    float[] VALUES -> a
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.animation.LookupTableInterpolator -> android.support.a.c.a.b:
    float[] mValues -> a
    float mStepSize -> b
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.CircleImageView -> android.support.a.d.a:
    android.view.animation.Animation$AnimationListener mListener -> a
    int mShadowRadius -> b
    boolean elevationSupported() -> a
    void onMeasure(int,int) -> onMeasure
    void setAnimationListener(android.view.animation.Animation$AnimationListener) -> a
    void onAnimationStart() -> onAnimationStart
    void onAnimationEnd() -> onAnimationEnd
    void setBackgroundColor(int) -> setBackgroundColor
    int access$002(android.support.v4.widget.CircleImageView,int) -> a
    int access$000(android.support.v4.widget.CircleImageView) -> a
android.support.v4.widget.CircleImageView$OvalShadow -> android.support.a.d.b:
    android.graphics.RadialGradient mRadialGradient -> b
    android.graphics.Paint mShadowPaint -> c
    int mCircleDiameter -> d
    android.support.v4.widget.CircleImageView this$0 -> a
    void draw(android.graphics.Canvas,android.graphics.Paint) -> draw
android.support.v4.widget.MaterialProgressDrawable -> android.support.a.d.c:
    android.view.animation.Interpolator LINEAR_INTERPOLATOR -> b
    android.view.animation.Interpolator MATERIAL_INTERPOLATOR -> c
    int[] COLORS -> d
    java.util.ArrayList mAnimators -> e
    android.support.v4.widget.MaterialProgressDrawable$Ring mRing -> f
    float mRotation -> g
    android.content.res.Resources mResources -> h
    android.view.View mParent -> i
    android.view.animation.Animation mAnimation -> j
    float mRotationCount -> k
    double mWidth -> l
    double mHeight -> m
    boolean mFinishing -> a
    android.graphics.drawable.Drawable$Callback mCallback -> n
    void setSizeParameters(double,double,double,double,float,float) -> a
    void updateSizes(int) -> a
    void showArrow(boolean) -> a
    void setArrowScale(float) -> a
    void setStartEndTrim(float,float) -> a
    void setProgressRotation(float) -> b
    void setBackgroundColor(int) -> b
    void setColorSchemeColors(int[]) -> a
    int getIntrinsicHeight() -> getIntrinsicHeight
    int getIntrinsicWidth() -> getIntrinsicWidth
    void draw(android.graphics.Canvas) -> draw
    void setAlpha(int) -> setAlpha
    int getAlpha() -> getAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    void setRotation(float) -> c
    int getOpacity() -> getOpacity
    boolean isRunning() -> isRunning
    void start() -> start
    void stop() -> stop
    float getMinProgressArc(android.support.v4.widget.MaterialProgressDrawable$Ring) -> a
    int evaluateColorChange(float,int,int) -> a
    void updateRingColor(float,android.support.v4.widget.MaterialProgressDrawable$Ring) -> a
    void applyFinishTranslation(float,android.support.v4.widget.MaterialProgressDrawable$Ring) -> b
    void setupAnimators() -> b
    void access$000(android.support.v4.widget.MaterialProgressDrawable,float,android.support.v4.widget.MaterialProgressDrawable$Ring) -> a
    float access$100(android.support.v4.widget.MaterialProgressDrawable,android.support.v4.widget.MaterialProgressDrawable$Ring) -> a
    void access$200(android.support.v4.widget.MaterialProgressDrawable,float,android.support.v4.widget.MaterialProgressDrawable$Ring) -> b
    android.view.animation.Interpolator access$300() -> a
    float access$400(android.support.v4.widget.MaterialProgressDrawable) -> a
    float access$402(android.support.v4.widget.MaterialProgressDrawable,float) -> a
android.support.v4.widget.MaterialProgressDrawable$1 -> android.support.a.d.d:
    android.support.v4.widget.MaterialProgressDrawable$Ring val$ring -> a
    android.support.v4.widget.MaterialProgressDrawable this$0 -> b
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.MaterialProgressDrawable$2 -> android.support.a.d.e:
    android.support.v4.widget.MaterialProgressDrawable$Ring val$ring -> a
    android.support.v4.widget.MaterialProgressDrawable this$0 -> b
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
android.support.v4.widget.MaterialProgressDrawable$3 -> android.support.a.d.f:
    android.support.v4.widget.MaterialProgressDrawable this$0 -> a
    void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
android.support.v4.widget.MaterialProgressDrawable$Ring -> android.support.a.d.g:
    android.graphics.RectF mTempBounds -> a
    android.graphics.Paint mPaint -> b
    android.graphics.Paint mArrowPaint -> c
    android.graphics.drawable.Drawable$Callback mCallback -> d
    float mStartTrim -> e
    float mEndTrim -> f
    float mRotation -> g
    float mStrokeWidth -> h
    float mStrokeInset -> i
    int[] mColors -> j
    int mColorIndex -> k
    float mStartingStartTrim -> l
    float mStartingEndTrim -> m
    float mStartingRotation -> n
    boolean mShowArrow -> o
    android.graphics.Path mArrow -> p
    float mArrowScale -> q
    double mRingCenterRadius -> r
    int mArrowWidth -> s
    int mArrowHeight -> t
    int mAlpha -> u
    android.graphics.Paint mCirclePaint -> v
    int mBackgroundColor -> w
    int mCurrentColor -> x
    void setBackgroundColor(int) -> a
    void setArrowDimensions(float,float) -> a
    void draw(android.graphics.Canvas,android.graphics.Rect) -> a
    void drawTriangle(android.graphics.Canvas,float,float,android.graphics.Rect) -> a
    void setColors(int[]) -> a
    void setColor(int) -> b
    void setColorIndex(int) -> c
    int getNextColor() -> a
    int getNextColorIndex() -> n
    void goToNextColor() -> b
    void setColorFilter(android.graphics.ColorFilter) -> a
    void setAlpha(int) -> d
    int getAlpha() -> c
    void setStrokeWidth(float) -> a
    float getStrokeWidth() -> d
    void setStartTrim(float) -> b
    float getStartTrim() -> e
    float getStartingStartTrim() -> f
    float getStartingEndTrim() -> g
    int getStartingColor() -> h
    void setEndTrim(float) -> c
    float getEndTrim() -> i
    void setRotation(float) -> d
    void setInsets(int,int) -> a
    void setCenterRadius(double) -> a
    double getCenterRadius() -> j
    void setShowArrow(boolean) -> a
    void setArrowScale(float) -> e
    float getStartingRotation() -> k
    void storeOriginals() -> l
    void resetOriginals() -> m
    void invalidateSelf() -> o
android.support.v4.widget.SwipeRefreshLayout -> android.support.a.d.h:
    java.lang.String LOG_TAG -> c
    android.view.View mTarget -> d
    android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener mListener -> e
    boolean mRefreshing -> f
    int mTouchSlop -> g
    float mTotalDragDistance -> h
    int mMediumAnimationDuration -> i
    int mCurrentTargetOffsetTop -> j
    boolean mOriginalOffsetCalculated -> k
    float mInitialMotionY -> l
    float mInitialDownY -> m
    boolean mIsBeingDragged -> n
    int mActivePointerId -> o
    boolean mScale -> p
    boolean mReturningToStart -> q
    android.view.animation.DecelerateInterpolator mDecelerateInterpolator -> r
    int[] LAYOUT_ATTRS -> s
    android.support.v4.widget.CircleImageView mCircleView -> t
    int mCircleViewIndex -> u
    int mFrom -> a
    float mStartingScale -> v
    int mOriginalOffsetTop -> b
    android.support.v4.widget.MaterialProgressDrawable mProgress -> w
    android.view.animation.Animation mScaleAnimation -> x
    android.view.animation.Animation mScaleDownAnimation -> y
    android.view.animation.Animation mAlphaStartAnimation -> z
    android.view.animation.Animation mAlphaMaxAnimation -> A
    android.view.animation.Animation mScaleDownToStartAnimation -> B
    float mSpinnerFinalOffset -> C
    boolean mNotify -> D
    int mCircleWidth -> E
    int mCircleHeight -> F
    boolean mUsingCustomStart -> G
    android.view.animation.Animation$AnimationListener mRefreshListener -> H
    android.view.animation.Animation mAnimateToCorrectPosition -> I
    android.view.animation.Animation mAnimateToStartPosition -> J
    void setColorViewAlpha(int) -> setColorViewAlpha
    void setSize(int) -> setSize
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    void createProgressView() -> b
    void setOnRefreshListener(android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener) -> setOnRefreshListener
    boolean isAlphaUsedForScale() -> c
    void setRefreshing(boolean) -> setRefreshing
    void startScaleUpAnimation(android.view.animation.Animation$AnimationListener) -> a
    void setAnimationProgress(float) -> setAnimationProgress
    void setRefreshing(boolean,boolean) -> a
    void startScaleDownAnimation(android.view.animation.Animation$AnimationListener) -> b
    void startProgressAlphaStartAnimation() -> d
    void startProgressAlphaMaxAnimation() -> e
    android.view.animation.Animation startAlphaAnimation(int,int) -> a
    void setProgressBackgroundColor(int) -> setProgressBackgroundColor
    void setProgressBackgroundColorSchemeResource(int) -> setProgressBackgroundColorSchemeResource
    void setProgressBackgroundColorSchemeColor(int) -> setProgressBackgroundColorSchemeColor
    void setColorScheme(int[]) -> setColorScheme
    void setColorSchemeResources(int[]) -> setColorSchemeResources
    void setColorSchemeColors(int[]) -> setColorSchemeColors
    void ensureTarget() -> f
    void setDistanceToTriggerSync(int) -> setDistanceToTriggerSync
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    int getProgressCircleDiameter() -> getProgressCircleDiameter
    boolean canChildScrollUp() -> a
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    float getMotionEventY(android.view.MotionEvent,int) -> a
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    boolean isAnimationRunning(android.view.animation.Animation) -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void animateOffsetToCorrectPosition(int,android.view.animation.Animation$AnimationListener) -> a
    void animateOffsetToStartPosition(int,android.view.animation.Animation$AnimationListener) -> b
    void moveToStart(float) -> a
    void startScaleDownReturnToStartAnimation(int,android.view.animation.Animation$AnimationListener) -> c
    void setTargetOffsetTopAndBottom(int,boolean) -> a
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    boolean access$000(android.support.v4.widget.SwipeRefreshLayout) -> a
    android.support.v4.widget.MaterialProgressDrawable access$100(android.support.v4.widget.SwipeRefreshLayout) -> b
    boolean access$200(android.support.v4.widget.SwipeRefreshLayout) -> c
    android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener access$300(android.support.v4.widget.SwipeRefreshLayout) -> d
    android.support.v4.widget.CircleImageView access$400(android.support.v4.widget.SwipeRefreshLayout) -> e
    void access$500(android.support.v4.widget.SwipeRefreshLayout,int) -> a
    boolean access$600(android.support.v4.widget.SwipeRefreshLayout) -> f
    void access$700(android.support.v4.widget.SwipeRefreshLayout,float) -> a
    int access$800(android.support.v4.widget.SwipeRefreshLayout) -> g
    void access$900(android.support.v4.widget.SwipeRefreshLayout,int,boolean) -> a
    int access$802(android.support.v4.widget.SwipeRefreshLayout,int) -> b
    void access$1000(android.support.v4.widget.SwipeRefreshLayout,android.view.animation.Animation$AnimationListener) -> a
    boolean access$1100(android.support.v4.widget.SwipeRefreshLayout) -> h
    float access$1200(android.support.v4.widget.SwipeRefreshLayout) -> i
    void access$1300(android.support.v4.widget.SwipeRefreshLayout,float) -> b
    float access$1400(android.support.v4.widget.SwipeRefreshLayout) -> j
android.support.v4.widget.SwipeRefreshLayout$1 -> android.support.a.d.i:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
android.support.v4.widget.SwipeRefreshLayout$2 -> android.support.a.d.j:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> a
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$3 -> android.support.a.d.k:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> a
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$4 -> android.support.a.d.l:
    int val$startingAlpha -> a
    int val$endingAlpha -> b
    android.support.v4.widget.SwipeRefreshLayout this$0 -> c
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$5 -> android.support.a.d.m:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
android.support.v4.widget.SwipeRefreshLayout$6 -> android.support.a.d.n:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> a
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$7 -> android.support.a.d.o:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> a
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$8 -> android.support.a.d.p:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> a
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener -> android.support.a.d.q:
    void onRefresh() -> a
ch.qos.logback.classic.AsyncAppender -> ch.qos.logback.classic.AsyncAppender:
    boolean includeCallerData -> includeCallerData
    boolean isDiscardable(ch.qos.logback.classic.spi.ILoggingEvent) -> isDiscardable
    void preprocess(ch.qos.logback.classic.spi.ILoggingEvent) -> preprocess
    boolean isIncludeCallerData() -> isIncludeCallerData
    void setIncludeCallerData(boolean) -> setIncludeCallerData
    void preprocess(java.lang.Object) -> preprocess
    boolean isDiscardable(java.lang.Object) -> isDiscardable
ch.qos.logback.classic.BasicConfigurator -> ch.qos.logback.classic.BasicConfigurator:
    ch.qos.logback.classic.BasicConfigurator hiddenSingleton -> hiddenSingleton
    void configure(ch.qos.logback.classic.LoggerContext) -> configure
    void configureDefaultContext() -> configureDefaultContext
ch.qos.logback.classic.ClassicConstants -> ch.qos.logback.classic.ClassicConstants:
    java.lang.String LOGBACK_CONTEXT_SELECTOR -> LOGBACK_CONTEXT_SELECTOR
    int MAX_DOTS -> MAX_DOTS
    int DEFAULT_MAX_CALLEDER_DATA_DEPTH -> DEFAULT_MAX_CALLEDER_DATA_DEPTH
    java.lang.String FINALIZE_SESSION -> FINALIZE_SESSION
    org.slf4j.Marker FINALIZE_SESSION_MARKER -> FINALIZE_SESSION_MARKER
ch.qos.logback.classic.Level -> ch.qos.logback.classic.Level:
    long serialVersionUID -> serialVersionUID
    int OFF_INT -> OFF_INT
    int ERROR_INT -> ERROR_INT
    int WARN_INT -> WARN_INT
    int INFO_INT -> INFO_INT
    int DEBUG_INT -> DEBUG_INT
    int TRACE_INT -> TRACE_INT
    int ALL_INT -> ALL_INT
    java.lang.Integer OFF_INTEGER -> OFF_INTEGER
    java.lang.Integer ERROR_INTEGER -> ERROR_INTEGER
    java.lang.Integer WARN_INTEGER -> WARN_INTEGER
    java.lang.Integer INFO_INTEGER -> INFO_INTEGER
    java.lang.Integer DEBUG_INTEGER -> DEBUG_INTEGER
    java.lang.Integer TRACE_INTEGER -> TRACE_INTEGER
    java.lang.Integer ALL_INTEGER -> ALL_INTEGER
    ch.qos.logback.classic.Level OFF -> OFF
    ch.qos.logback.classic.Level ERROR -> ERROR
    ch.qos.logback.classic.Level WARN -> WARN
    ch.qos.logback.classic.Level INFO -> INFO
    ch.qos.logback.classic.Level DEBUG -> DEBUG
    ch.qos.logback.classic.Level TRACE -> TRACE
    ch.qos.logback.classic.Level ALL -> ALL
    int levelInt -> levelInt
    java.lang.String levelStr -> levelStr
    java.lang.String toString() -> toString
    int toInt() -> toInt
    java.lang.Integer toInteger() -> toInteger
    boolean isGreaterOrEqual(ch.qos.logback.classic.Level) -> isGreaterOrEqual
    ch.qos.logback.classic.Level toLevel(java.lang.String) -> toLevel
    ch.qos.logback.classic.Level valueOf(java.lang.String) -> valueOf
    ch.qos.logback.classic.Level toLevel(int) -> toLevel
    ch.qos.logback.classic.Level toLevel(int,ch.qos.logback.classic.Level) -> toLevel
    ch.qos.logback.classic.Level toLevel(java.lang.String,ch.qos.logback.classic.Level) -> toLevel
    java.lang.Object readResolve() -> readResolve
    ch.qos.logback.classic.Level fromLocationAwareLoggerInteger(int) -> fromLocationAwareLoggerInteger
    int toLocationAwareLoggerInteger(ch.qos.logback.classic.Level) -> toLocationAwareLoggerInteger
ch.qos.logback.classic.Logger -> ch.qos.logback.classic.Logger:
    long serialVersionUID -> serialVersionUID
    java.lang.String FQCN -> FQCN
    java.lang.String name -> name
    ch.qos.logback.classic.Level level -> level
    int effectiveLevelInt -> effectiveLevelInt
    ch.qos.logback.classic.Logger parent -> parent
    java.util.List childrenList -> childrenList
    ch.qos.logback.core.spi.AppenderAttachableImpl aai -> aai
    boolean additive -> additive
    ch.qos.logback.classic.LoggerContext loggerContext -> loggerContext
    int DEFAULT_CHILD_ARRAY_SIZE -> DEFAULT_CHILD_ARRAY_SIZE
    ch.qos.logback.classic.Level getEffectiveLevel() -> getEffectiveLevel
    int getEffectiveLevelInt() -> getEffectiveLevelInt
    ch.qos.logback.classic.Level getLevel() -> getLevel
    java.lang.String getName() -> getName
    boolean isRootLogger() -> isRootLogger
    ch.qos.logback.classic.Logger getChildByName(java.lang.String) -> getChildByName
    void setLevel(ch.qos.logback.classic.Level) -> setLevel
    void handleParentLevelChange(int) -> handleParentLevelChange
    void detachAndStopAllAppenders() -> detachAndStopAllAppenders
    boolean detachAppender(java.lang.String) -> detachAppender
    void addAppender(ch.qos.logback.core.Appender) -> addAppender
    boolean isAttached(ch.qos.logback.core.Appender) -> isAttached
    java.util.Iterator iteratorForAppenders() -> iteratorForAppenders
    ch.qos.logback.core.Appender getAppender(java.lang.String) -> getAppender
    void callAppenders(ch.qos.logback.classic.spi.ILoggingEvent) -> callAppenders
    int appendLoopOnAppenders(ch.qos.logback.classic.spi.ILoggingEvent) -> appendLoopOnAppenders
    boolean detachAppender(ch.qos.logback.core.Appender) -> detachAppender
    ch.qos.logback.classic.Logger createChildByLastNamePart(java.lang.String) -> createChildByLastNamePart
    void localLevelReset() -> localLevelReset
    void recursiveReset() -> recursiveReset
    ch.qos.logback.classic.Logger createChildByName(java.lang.String) -> createChildByName
    void filterAndLog_0_Or3Plus(java.lang.String,org.slf4j.Marker,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object[],java.lang.Throwable) -> filterAndLog_0_Or3Plus
    void filterAndLog_1(java.lang.String,org.slf4j.Marker,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object,java.lang.Throwable) -> filterAndLog_1
    void filterAndLog_2(java.lang.String,org.slf4j.Marker,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Throwable) -> filterAndLog_2
    void buildLoggingEventAndAppend(java.lang.String,org.slf4j.Marker,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object[],java.lang.Throwable) -> buildLoggingEventAndAppend
    void trace(java.lang.String) -> trace
    void trace(java.lang.String,java.lang.Object) -> trace
    void trace(java.lang.String,java.lang.Object,java.lang.Object) -> trace
    void trace(java.lang.String,java.lang.Object[]) -> trace
    void trace(java.lang.String,java.lang.Throwable) -> trace
    void trace(org.slf4j.Marker,java.lang.String) -> trace
    void trace(org.slf4j.Marker,java.lang.String,java.lang.Object) -> trace
    void trace(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object) -> trace
    void trace(org.slf4j.Marker,java.lang.String,java.lang.Object[]) -> trace
    void trace(org.slf4j.Marker,java.lang.String,java.lang.Throwable) -> trace
    boolean isDebugEnabled() -> isDebugEnabled
    boolean isDebugEnabled(org.slf4j.Marker) -> isDebugEnabled
    void debug(java.lang.String) -> debug
    void debug(java.lang.String,java.lang.Object) -> debug
    void debug(java.lang.String,java.lang.Object,java.lang.Object) -> debug
    void debug(java.lang.String,java.lang.Object[]) -> debug
    void debug(java.lang.String,java.lang.Throwable) -> debug
    void debug(org.slf4j.Marker,java.lang.String) -> debug
    void debug(org.slf4j.Marker,java.lang.String,java.lang.Object) -> debug
    void debug(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object) -> debug
    void debug(org.slf4j.Marker,java.lang.String,java.lang.Object[]) -> debug
    void debug(org.slf4j.Marker,java.lang.String,java.lang.Throwable) -> debug
    void error(java.lang.String) -> error
    void error(java.lang.String,java.lang.Object) -> error
    void error(java.lang.String,java.lang.Object,java.lang.Object) -> error
    void error(java.lang.String,java.lang.Object[]) -> error
    void error(java.lang.String,java.lang.Throwable) -> error
    void error(org.slf4j.Marker,java.lang.String) -> error
    void error(org.slf4j.Marker,java.lang.String,java.lang.Object) -> error
    void error(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object) -> error
    void error(org.slf4j.Marker,java.lang.String,java.lang.Object[]) -> error
    void error(org.slf4j.Marker,java.lang.String,java.lang.Throwable) -> error
    boolean isInfoEnabled() -> isInfoEnabled
    boolean isInfoEnabled(org.slf4j.Marker) -> isInfoEnabled
    void info(java.lang.String) -> info
    void info(java.lang.String,java.lang.Object) -> info
    void info(java.lang.String,java.lang.Object,java.lang.Object) -> info
    void info(java.lang.String,java.lang.Object[]) -> info
    void info(java.lang.String,java.lang.Throwable) -> info
    void info(org.slf4j.Marker,java.lang.String) -> info
    void info(org.slf4j.Marker,java.lang.String,java.lang.Object) -> info
    void info(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object) -> info
    void info(org.slf4j.Marker,java.lang.String,java.lang.Object[]) -> info
    void info(org.slf4j.Marker,java.lang.String,java.lang.Throwable) -> info
    boolean isTraceEnabled() -> isTraceEnabled
    boolean isTraceEnabled(org.slf4j.Marker) -> isTraceEnabled
    boolean isErrorEnabled() -> isErrorEnabled
    boolean isErrorEnabled(org.slf4j.Marker) -> isErrorEnabled
    boolean isWarnEnabled() -> isWarnEnabled
    boolean isWarnEnabled(org.slf4j.Marker) -> isWarnEnabled
    boolean isEnabledFor(org.slf4j.Marker,ch.qos.logback.classic.Level) -> isEnabledFor
    boolean isEnabledFor(ch.qos.logback.classic.Level) -> isEnabledFor
    void warn(java.lang.String) -> warn
    void warn(java.lang.String,java.lang.Throwable) -> warn
    void warn(java.lang.String,java.lang.Object) -> warn
    void warn(java.lang.String,java.lang.Object,java.lang.Object) -> warn
    void warn(java.lang.String,java.lang.Object[]) -> warn
    void warn(org.slf4j.Marker,java.lang.String) -> warn
    void warn(org.slf4j.Marker,java.lang.String,java.lang.Object) -> warn
    void warn(org.slf4j.Marker,java.lang.String,java.lang.Object[]) -> warn
    void warn(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object) -> warn
    void warn(org.slf4j.Marker,java.lang.String,java.lang.Throwable) -> warn
    boolean isAdditive() -> isAdditive
    void setAdditive(boolean) -> setAdditive
    java.lang.String toString() -> toString
    ch.qos.logback.core.spi.FilterReply callTurboFilters(org.slf4j.Marker,ch.qos.logback.classic.Level) -> callTurboFilters
    ch.qos.logback.classic.LoggerContext getLoggerContext() -> getLoggerContext
    void log(org.slf4j.Marker,java.lang.String,int,java.lang.String,java.lang.Object[],java.lang.Throwable) -> log
    java.lang.Object readResolve() -> readResolve
ch.qos.logback.classic.LoggerContext -> ch.qos.logback.classic.LoggerContext:
    ch.qos.logback.classic.Logger root -> root
    int size -> size
    int noAppenderWarning -> noAppenderWarning
    java.util.List loggerContextListenerList -> loggerContextListenerList
    java.util.Map loggerCache -> loggerCache
    ch.qos.logback.classic.spi.LoggerContextVO loggerContextRemoteView -> loggerContextRemoteView
    ch.qos.logback.classic.spi.TurboFilterList turboFilterList -> turboFilterList
    boolean packagingDataEnabled -> packagingDataEnabled
    boolean androidPropsInitialized -> androidPropsInitialized
    int maxCallerDataDepth -> maxCallerDataDepth
    int resetCount -> resetCount
    java.util.List frameworkPackages -> frameworkPackages
    void initEvaluatorMap() -> initEvaluatorMap
    void updateLoggerContextVO() -> updateLoggerContextVO
    boolean isSpecialKey(java.lang.String) -> isSpecialKey
    java.lang.String getProperty(java.lang.String) -> getProperty
    void putProperty(java.lang.String,java.lang.String) -> putProperty
    void setName(java.lang.String) -> setName
    ch.qos.logback.classic.Logger getLogger(java.lang.Class) -> getLogger
    ch.qos.logback.classic.Logger getLogger(java.lang.String) -> getLogger
    void incSize() -> incSize
    int size() -> size
    ch.qos.logback.classic.Logger exists(java.lang.String) -> exists
    void noAppenderDefinedWarning(ch.qos.logback.classic.Logger) -> noAppenderDefinedWarning
    java.util.List getLoggerList() -> getLoggerList
    ch.qos.logback.classic.spi.LoggerContextVO getLoggerContextRemoteView() -> getLoggerContextRemoteView
    void setPackagingDataEnabled(boolean) -> setPackagingDataEnabled
    boolean isPackagingDataEnabled() -> isPackagingDataEnabled
    void reset() -> reset
    void resetStatusListeners() -> resetStatusListeners
    ch.qos.logback.classic.spi.TurboFilterList getTurboFilterList() -> getTurboFilterList
    void addTurboFilter(ch.qos.logback.classic.turbo.TurboFilter) -> addTurboFilter
    void resetTurboFilterList() -> resetTurboFilterList
    ch.qos.logback.core.spi.FilterReply getTurboFilterChainDecision_0_3OrMore(org.slf4j.Marker,ch.qos.logback.classic.Logger,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object[],java.lang.Throwable) -> getTurboFilterChainDecision_0_3OrMore
    ch.qos.logback.core.spi.FilterReply getTurboFilterChainDecision_1(org.slf4j.Marker,ch.qos.logback.classic.Logger,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object,java.lang.Throwable) -> getTurboFilterChainDecision_1
    ch.qos.logback.core.spi.FilterReply getTurboFilterChainDecision_2(org.slf4j.Marker,ch.qos.logback.classic.Logger,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Throwable) -> getTurboFilterChainDecision_2
    void addListener(ch.qos.logback.classic.spi.LoggerContextListener) -> addListener
    void removeListener(ch.qos.logback.classic.spi.LoggerContextListener) -> removeListener
    void resetListenersExceptResetResistant() -> resetListenersExceptResetResistant
    void resetAllListeners() -> resetAllListeners
    java.util.List getCopyOfListenerList() -> getCopyOfListenerList
    void fireOnLevelChange(ch.qos.logback.classic.Logger,ch.qos.logback.classic.Level) -> fireOnLevelChange
    void fireOnReset() -> fireOnReset
    void fireOnStart() -> fireOnStart
    void fireOnStop() -> fireOnStop
    void start() -> start
    void stop() -> stop
    java.lang.String toString() -> toString
    int getMaxCallerDataDepth() -> getMaxCallerDataDepth
    void setMaxCallerDataDepth(int) -> setMaxCallerDataDepth
    java.util.List getFrameworkPackages() -> getFrameworkPackages
    org.slf4j.Logger getLogger(java.lang.String) -> getLogger
ch.qos.logback.classic.PatternLayout -> ch.qos.logback.classic.PatternLayout:
    java.util.Map defaultConverterMap -> defaultConverterMap
    java.util.Map getDefaultConverterMap() -> getDefaultConverterMap
    java.lang.String doLayout(ch.qos.logback.classic.spi.ILoggingEvent) -> doLayout
    java.lang.String doLayout(java.lang.Object) -> doLayout
ch.qos.logback.classic.android.ASaxEventRecorder -> ch.qos.logback.classic.android.ASaxEventRecorder:
    int[] holderForStartAndLength -> holderForStartAndLength
    ch.qos.logback.classic.android.ASaxEventRecorder$StatePassFilter filter -> filter
    java.lang.String elemNameToWatch -> elemNameToWatch
    java.util.Map elemAttrs -> elemAttrs
    void setFilter(java.lang.String[]) -> setFilter
    void setAttributeWatch(java.lang.String) -> setAttributeWatch
    java.util.Map getAttributeWatchValues() -> getAttributeWatchValues
    java.util.List recordEvents(org.xml.sax.InputSource) -> recordEvents
    void startDocument(org.xmlpull.v1.XmlPullParser) -> startDocument
    void characters(org.xmlpull.v1.XmlPullParser) -> characters
    void endElement(org.xmlpull.v1.XmlPullParser) -> endElement
    void startElement(org.xmlpull.v1.XmlPullParser) -> startElement
    void checkForWatchedAttributes(org.xmlpull.v1.XmlPullParser) -> checkForWatchedAttributes
ch.qos.logback.classic.android.ASaxEventRecorder$StatePassFilter -> ch.qos.logback.classic.android.a:
    java.lang.String[] _states -> a
    int _depth -> b
    boolean checkStart(java.lang.String) -> a
    boolean checkEnd(java.lang.String) -> b
    void reset() -> a
    boolean passed() -> b
ch.qos.logback.classic.android.AndroidManifestPropertiesUtil -> ch.qos.logback.classic.android.AndroidManifestPropertiesUtil:
    void setAndroidProperties(ch.qos.logback.core.Context) -> setAndroidProperties
ch.qos.logback.classic.android.BasicLogcatConfigurator -> ch.qos.logback.classic.android.BasicLogcatConfigurator:
    void configure(ch.qos.logback.classic.LoggerContext) -> configure
    void configureDefaultContext() -> configureDefaultContext
ch.qos.logback.classic.android.LogcatAppender -> ch.qos.logback.classic.android.LogcatAppender:
    int MAX_TAG_LENGTH -> MAX_TAG_LENGTH
    ch.qos.logback.classic.encoder.PatternLayoutEncoder encoder -> encoder
    ch.qos.logback.classic.encoder.PatternLayoutEncoder tagEncoder -> tagEncoder
    boolean checkLoggable -> checkLoggable
    void start() -> start
    void append(ch.qos.logback.classic.spi.ILoggingEvent) -> append
    ch.qos.logback.classic.encoder.PatternLayoutEncoder getEncoder() -> getEncoder
    void setEncoder(ch.qos.logback.classic.encoder.PatternLayoutEncoder) -> setEncoder
    ch.qos.logback.classic.encoder.PatternLayoutEncoder getTagEncoder() -> getTagEncoder
    void setTagEncoder(ch.qos.logback.classic.encoder.PatternLayoutEncoder) -> setTagEncoder
    void setCheckLoggable(boolean) -> setCheckLoggable
    boolean getCheckLoggable() -> getCheckLoggable
    java.lang.String getTag(ch.qos.logback.classic.spi.ILoggingEvent) -> getTag
    void append(java.lang.Object) -> append
ch.qos.logback.classic.android.SQLiteAppender -> ch.qos.logback.classic.android.SQLiteAppender:
    android.database.sqlite.SQLiteDatabase db -> db
    java.lang.String insertPropertiesSQL -> insertPropertiesSQL
    java.lang.String insertExceptionSQL -> insertExceptionSQL
    java.lang.String insertSQL -> insertSQL
    java.lang.String filename -> filename
    ch.qos.logback.classic.db.names.DBNameResolver dbNameResolver -> dbNameResolver
    ch.qos.logback.core.util.Duration maxHistory -> maxHistory
    long lastCleanupTime -> lastCleanupTime
    ch.qos.logback.classic.android.SQLiteLogCleaner logCleaner -> logCleaner
    int TIMESTMP_INDEX -> TIMESTMP_INDEX
    int FORMATTED_MESSAGE_INDEX -> FORMATTED_MESSAGE_INDEX
    int LOGGER_NAME_INDEX -> LOGGER_NAME_INDEX
    int LEVEL_STRING_INDEX -> LEVEL_STRING_INDEX
    int THREAD_NAME_INDEX -> THREAD_NAME_INDEX
    int REFERENCE_FLAG_INDEX -> REFERENCE_FLAG_INDEX
    int ARG0_INDEX -> ARG0_INDEX
    int CALLER_FILENAME_INDEX -> CALLER_FILENAME_INDEX
    int CALLER_CLASS_INDEX -> CALLER_CLASS_INDEX
    int CALLER_METHOD_INDEX -> CALLER_METHOD_INDEX
    int CALLER_LINE_INDEX -> CALLER_LINE_INDEX
    short PROPERTIES_EXIST -> PROPERTIES_EXIST
    short EXCEPTION_EXISTS -> EXCEPTION_EXISTS
    void setDbNameResolver(ch.qos.logback.classic.db.names.DBNameResolver) -> setDbNameResolver
    java.lang.String getMaxHistory() -> getMaxHistory
    long getMaxHistoryMs() -> getMaxHistoryMs
    void setMaxHistory(java.lang.String) -> setMaxHistory
    java.lang.String getFilename() -> getFilename
    void setFilename(java.lang.String) -> setFilename
    java.io.File getDatabaseFile(java.lang.String) -> getDatabaseFile
    void start() -> start
    void clearExpiredLogs(android.database.sqlite.SQLiteDatabase) -> clearExpiredLogs
    boolean lastCheckExpired(ch.qos.logback.core.util.Duration,long) -> lastCheckExpired
    ch.qos.logback.classic.android.SQLiteLogCleaner getLogCleaner() -> getLogCleaner
    void setLogCleaner(ch.qos.logback.classic.android.SQLiteLogCleaner) -> setLogCleaner
    void finalize() -> finalize
    void stop() -> stop
    void append(ch.qos.logback.classic.spi.ILoggingEvent) -> append
    long subAppend(ch.qos.logback.classic.spi.ILoggingEvent,android.database.sqlite.SQLiteStatement) -> subAppend
    void secondarySubAppend(ch.qos.logback.classic.spi.ILoggingEvent,long) -> secondarySubAppend
    void bindLoggingEvent(android.database.sqlite.SQLiteStatement,ch.qos.logback.classic.spi.ILoggingEvent) -> bindLoggingEvent
    void bindLoggingEventArguments(android.database.sqlite.SQLiteStatement,java.lang.Object[]) -> bindLoggingEventArguments
    java.lang.String asStringTruncatedTo254(java.lang.Object) -> asStringTruncatedTo254
    short computeReferenceMask(ch.qos.logback.classic.spi.ILoggingEvent) -> computeReferenceMask
    java.util.Map mergePropertyMaps(ch.qos.logback.classic.spi.ILoggingEvent) -> mergePropertyMaps
    void insertProperties(java.util.Map,long) -> insertProperties
    void bindCallerData(android.database.sqlite.SQLiteStatement,java.lang.StackTraceElement[]) -> bindCallerData
    void insertException(android.database.sqlite.SQLiteStatement,java.lang.String,short,long) -> insertException
    void insertThrowable(ch.qos.logback.classic.spi.IThrowableProxy,long) -> insertThrowable
    void append(java.lang.Object) -> append
    ch.qos.logback.classic.db.names.DBNameResolver access$000(ch.qos.logback.classic.android.SQLiteAppender) -> access$000
ch.qos.logback.classic.android.SQLiteAppender$1 -> ch.qos.logback.classic.android.b:
    ch.qos.logback.classic.android.SQLiteAppender this$0 -> a
    void performLogCleanup(android.database.sqlite.SQLiteDatabase,ch.qos.logback.core.util.Duration) -> performLogCleanup
ch.qos.logback.classic.android.SQLiteLogCleaner -> ch.qos.logback.classic.android.SQLiteLogCleaner:
    void performLogCleanup(android.database.sqlite.SQLiteDatabase,ch.qos.logback.core.util.Duration) -> performLogCleanup
ch.qos.logback.classic.boolex.IEvaluator -> ch.qos.logback.classic.boolex.IEvaluator:
    boolean doEvaluate(ch.qos.logback.classic.spi.ILoggingEvent) -> doEvaluate
ch.qos.logback.classic.boolex.OnErrorEvaluator -> ch.qos.logback.classic.boolex.OnErrorEvaluator:
    boolean evaluate(ch.qos.logback.classic.spi.ILoggingEvent) -> evaluate
    boolean evaluate(java.lang.Object) -> evaluate
ch.qos.logback.classic.boolex.OnMarkerEvaluator -> ch.qos.logback.classic.boolex.OnMarkerEvaluator:
    java.util.List markerList -> markerList
    void addMarker(java.lang.String) -> addMarker
    boolean evaluate(ch.qos.logback.classic.spi.ILoggingEvent) -> evaluate
    boolean evaluate(java.lang.Object) -> evaluate
ch.qos.logback.classic.db.SQLBuilder -> ch.qos.logback.classic.db.SQLBuilder:
    java.lang.String buildInsertPropertiesSQL(ch.qos.logback.classic.db.names.DBNameResolver) -> buildInsertPropertiesSQL
    java.lang.String buildInsertExceptionSQL(ch.qos.logback.classic.db.names.DBNameResolver) -> buildInsertExceptionSQL
    java.lang.String buildInsertSQL(ch.qos.logback.classic.db.names.DBNameResolver) -> buildInsertSQL
    java.lang.String buildCreateLoggingEventTableSQL(ch.qos.logback.classic.db.names.DBNameResolver) -> buildCreateLoggingEventTableSQL
    java.lang.String buildCreatePropertyTableSQL(ch.qos.logback.classic.db.names.DBNameResolver) -> buildCreatePropertyTableSQL
    java.lang.String buildCreateExceptionTableSQL(ch.qos.logback.classic.db.names.DBNameResolver) -> buildCreateExceptionTableSQL
    java.lang.String buildDeleteExpiredLogsSQL(ch.qos.logback.classic.db.names.DBNameResolver,long) -> buildDeleteExpiredLogsSQL
ch.qos.logback.classic.db.names.ColumnName -> ch.qos.logback.classic.db.names.ColumnName:
    ch.qos.logback.classic.db.names.ColumnName EVENT_ID -> EVENT_ID
    ch.qos.logback.classic.db.names.ColumnName TIMESTMP -> TIMESTMP
    ch.qos.logback.classic.db.names.ColumnName FORMATTED_MESSAGE -> FORMATTED_MESSAGE
    ch.qos.logback.classic.db.names.ColumnName LOGGER_NAME -> LOGGER_NAME
    ch.qos.logback.classic.db.names.ColumnName LEVEL_STRING -> LEVEL_STRING
    ch.qos.logback.classic.db.names.ColumnName THREAD_NAME -> THREAD_NAME
    ch.qos.logback.classic.db.names.ColumnName REFERENCE_FLAG -> REFERENCE_FLAG
    ch.qos.logback.classic.db.names.ColumnName ARG0 -> ARG0
    ch.qos.logback.classic.db.names.ColumnName ARG1 -> ARG1
    ch.qos.logback.classic.db.names.ColumnName ARG2 -> ARG2
    ch.qos.logback.classic.db.names.ColumnName ARG3 -> ARG3
    ch.qos.logback.classic.db.names.ColumnName CALLER_FILENAME -> CALLER_FILENAME
    ch.qos.logback.classic.db.names.ColumnName CALLER_CLASS -> CALLER_CLASS
    ch.qos.logback.classic.db.names.ColumnName CALLER_METHOD -> CALLER_METHOD
    ch.qos.logback.classic.db.names.ColumnName CALLER_LINE -> CALLER_LINE
    ch.qos.logback.classic.db.names.ColumnName MAPPED_KEY -> MAPPED_KEY
    ch.qos.logback.classic.db.names.ColumnName MAPPED_VALUE -> MAPPED_VALUE
    ch.qos.logback.classic.db.names.ColumnName I -> I
    ch.qos.logback.classic.db.names.ColumnName TRACE_LINE -> TRACE_LINE
    ch.qos.logback.classic.db.names.ColumnName[] $VALUES -> $VALUES
    ch.qos.logback.classic.db.names.ColumnName[] values() -> values
    ch.qos.logback.classic.db.names.ColumnName valueOf(java.lang.String) -> valueOf
ch.qos.logback.classic.db.names.DBNameResolver -> ch.qos.logback.classic.db.names.DBNameResolver:
    java.lang.String getTableName(java.lang.Enum) -> getTableName
    java.lang.String getColumnName(java.lang.Enum) -> getColumnName
ch.qos.logback.classic.db.names.DefaultDBNameResolver -> ch.qos.logback.classic.db.names.DefaultDBNameResolver:
    java.lang.String getTableName(java.lang.Enum) -> getTableName
    java.lang.String getColumnName(java.lang.Enum) -> getColumnName
ch.qos.logback.classic.db.names.SimpleDBNameResolver -> ch.qos.logback.classic.db.names.SimpleDBNameResolver:
    java.lang.String tableNamePrefix -> tableNamePrefix
    java.lang.String tableNameSuffix -> tableNameSuffix
    java.lang.String columnNamePrefix -> columnNamePrefix
    java.lang.String columnNameSuffix -> columnNameSuffix
    java.lang.String getTableName(java.lang.Enum) -> getTableName
    java.lang.String getColumnName(java.lang.Enum) -> getColumnName
    void setTableNamePrefix(java.lang.String) -> setTableNamePrefix
    void setTableNameSuffix(java.lang.String) -> setTableNameSuffix
    void setColumnNamePrefix(java.lang.String) -> setColumnNamePrefix
    void setColumnNameSuffix(java.lang.String) -> setColumnNameSuffix
ch.qos.logback.classic.db.names.TableName -> ch.qos.logback.classic.db.names.TableName:
    ch.qos.logback.classic.db.names.TableName LOGGING_EVENT -> LOGGING_EVENT
    ch.qos.logback.classic.db.names.TableName LOGGING_EVENT_PROPERTY -> LOGGING_EVENT_PROPERTY
    ch.qos.logback.classic.db.names.TableName LOGGING_EVENT_EXCEPTION -> LOGGING_EVENT_EXCEPTION
    ch.qos.logback.classic.db.names.TableName[] $VALUES -> $VALUES
    ch.qos.logback.classic.db.names.TableName[] values() -> values
    ch.qos.logback.classic.db.names.TableName valueOf(java.lang.String) -> valueOf
ch.qos.logback.classic.encoder.PatternLayoutEncoder -> ch.qos.logback.classic.encoder.PatternLayoutEncoder:
    void start() -> start
ch.qos.logback.classic.filter.LevelFilter -> ch.qos.logback.classic.filter.LevelFilter:
    ch.qos.logback.classic.Level level -> level
    ch.qos.logback.core.spi.FilterReply decide(ch.qos.logback.classic.spi.ILoggingEvent) -> decide
    void setLevel(ch.qos.logback.classic.Level) -> setLevel
    void start() -> start
    ch.qos.logback.core.spi.FilterReply decide(java.lang.Object) -> decide
ch.qos.logback.classic.filter.ThresholdFilter -> ch.qos.logback.classic.filter.ThresholdFilter:
    ch.qos.logback.classic.Level level -> level
    ch.qos.logback.core.spi.FilterReply decide(ch.qos.logback.classic.spi.ILoggingEvent) -> decide
    void setLevel(java.lang.String) -> setLevel
    void start() -> start
    ch.qos.logback.core.spi.FilterReply decide(java.lang.Object) -> decide
ch.qos.logback.classic.html.DefaultCssBuilder -> ch.qos.logback.classic.html.DefaultCssBuilder:
    void addCss(java.lang.StringBuilder) -> addCss
ch.qos.logback.classic.html.DefaultThrowableRenderer -> ch.qos.logback.classic.html.DefaultThrowableRenderer:
    java.lang.String TRACE_PREFIX -> TRACE_PREFIX
    void render(java.lang.StringBuilder,ch.qos.logback.classic.spi.ILoggingEvent) -> render
    void render(java.lang.StringBuilder,ch.qos.logback.classic.spi.IThrowableProxy) -> render
    void printFirstLine(java.lang.StringBuilder,ch.qos.logback.classic.spi.IThrowableProxy) -> printFirstLine
    void render(java.lang.StringBuilder,java.lang.Object) -> render
ch.qos.logback.classic.html.HTMLLayout -> ch.qos.logback.classic.html.HTMLLayout:
    java.lang.String DEFAULT_CONVERSION_PATTERN -> DEFAULT_CONVERSION_PATTERN
    ch.qos.logback.core.html.IThrowableRenderer throwableRenderer -> throwableRenderer
    void start() -> start
    java.util.Map getDefaultConverterMap() -> getDefaultConverterMap
    java.lang.String doLayout(ch.qos.logback.classic.spi.ILoggingEvent) -> doLayout
    void appendEventToBuffer(java.lang.StringBuilder,ch.qos.logback.core.pattern.Converter,ch.qos.logback.classic.spi.ILoggingEvent) -> appendEventToBuffer
    ch.qos.logback.core.html.IThrowableRenderer getThrowableRenderer() -> getThrowableRenderer
    void setThrowableRenderer(ch.qos.logback.core.html.IThrowableRenderer) -> setThrowableRenderer
    java.lang.String computeConverterName(ch.qos.logback.core.pattern.Converter) -> computeConverterName
    java.lang.String doLayout(java.lang.Object) -> doLayout
ch.qos.logback.classic.html.UrlCssBuilder -> ch.qos.logback.classic.html.UrlCssBuilder:
    java.lang.String url -> url
    java.lang.String getUrl() -> getUrl
    void setUrl(java.lang.String) -> setUrl
    void addCss(java.lang.StringBuilder) -> addCss
ch.qos.logback.classic.joran.JoranConfigurator -> ch.qos.logback.classic.joran.JoranConfigurator:
    void addInstanceRules(ch.qos.logback.core.joran.spi.RuleStore) -> addInstanceRules
    void addDefaultNestedComponentRegistryRules(ch.qos.logback.core.joran.spi.DefaultNestedComponentRegistry) -> addDefaultNestedComponentRegistryRules
ch.qos.logback.classic.joran.action.ConditionalIncludeAction -> ch.qos.logback.classic.joran.action.ConditionalIncludeAction:
    void handleError(java.lang.String,java.lang.Exception) -> handleError
    void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> begin
    void processInclude(ch.qos.logback.core.joran.spi.InterpretationContext,java.net.URL) -> processInclude
    java.net.URL peekPath(ch.qos.logback.core.joran.spi.InterpretationContext) -> peekPath
    java.net.URL pushPath(ch.qos.logback.core.joran.spi.InterpretationContext,java.net.URL) -> pushPath
ch.qos.logback.classic.joran.action.ConditionalIncludeAction$State -> ch.qos.logback.classic.joran.action.a:
    java.net.URL url -> b
    ch.qos.logback.classic.joran.action.ConditionalIncludeAction this$0 -> a
    java.net.URL getUrl() -> a
    void setUrl(java.net.URL) -> a
ch.qos.logback.classic.joran.action.ConfigurationAction -> ch.qos.logback.classic.joran.action.ConfigurationAction:
    java.lang.String INTERNAL_DEBUG_ATTR -> INTERNAL_DEBUG_ATTR
    java.lang.String SCAN_ATTR -> SCAN_ATTR
    java.lang.String SCAN_PERIOD_ATTR -> SCAN_PERIOD_ATTR
    java.lang.String DEBUG_SYSTEM_PROPERTY_KEY -> DEBUG_SYSTEM_PROPERTY_KEY
    void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> begin
    java.lang.String getSystemProperty(java.lang.String) -> getSystemProperty
    void processScanAttrib(ch.qos.logback.core.joran.spi.InterpretationContext,org.xml.sax.Attributes) -> processScanAttrib
    void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> end
ch.qos.logback.classic.joran.action.ContextNameAction -> ch.qos.logback.classic.joran.action.ContextNameAction:
    void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> begin
    void body(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> body
    void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> end
ch.qos.logback.classic.joran.action.FindIncludeAction -> ch.qos.logback.classic.joran.action.FindIncludeAction:
    int EVENT_OFFSET -> EVENT_OFFSET
    void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> begin
    void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> end
    ch.qos.logback.core.joran.event.SaxEventRecorder createRecorder(java.io.InputStream,java.net.URL) -> createRecorder
ch.qos.logback.classic.joran.action.LevelAction -> ch.qos.logback.classic.joran.action.LevelAction:
    boolean inError -> inError
    void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> begin
    void finish(ch.qos.logback.core.joran.spi.InterpretationContext) -> finish
    void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> end
ch.qos.logback.classic.joran.action.LoggerAction -> ch.qos.logback.classic.joran.action.LoggerAction:
    java.lang.String LEVEL_ATTRIBUTE -> LEVEL_ATTRIBUTE
    boolean inError -> inError
    ch.qos.logback.classic.Logger logger -> logger
    void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> begin
    void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> end
    void finish(ch.qos.logback.core.joran.spi.InterpretationContext) -> finish
ch.qos.logback.classic.joran.action.LoggerContextListenerAction -> ch.qos.logback.classic.joran.action.LoggerContextListenerAction:
    boolean inError -> inError
    ch.qos.logback.classic.spi.LoggerContextListener lcl -> lcl
    void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> begin
    void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> end
ch.qos.logback.classic.joran.action.ReceiverAction -> ch.qos.logback.classic.joran.action.ReceiverAction:
    ch.qos.logback.classic.net.ReceiverBase receiver -> receiver
    boolean inError -> inError
    void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> begin
    void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> end
ch.qos.logback.classic.joran.action.RootLoggerAction -> ch.qos.logback.classic.joran.action.RootLoggerAction:
    ch.qos.logback.classic.Logger root -> root
    boolean inError -> inError
    void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> begin
    void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> end
    void finish(ch.qos.logback.core.joran.spi.InterpretationContext) -> finish
ch.qos.logback.classic.jul.JULHelper -> ch.qos.logback.classic.jul.JULHelper:
    boolean isRegularNonRootLogger(java.util.logging.Logger) -> isRegularNonRootLogger
    boolean isRoot(java.util.logging.Logger) -> isRoot
    java.util.logging.Level asJULLevel(ch.qos.logback.classic.Level) -> asJULLevel
    java.lang.String asJULLoggerName(java.lang.String) -> asJULLoggerName
    java.util.logging.Logger asJULLogger(java.lang.String) -> asJULLogger
    java.util.logging.Logger asJULLogger(ch.qos.logback.classic.Logger) -> asJULLogger
ch.qos.logback.classic.jul.LevelChangePropagator -> ch.qos.logback.classic.jul.LevelChangePropagator:
    java.util.Set julLoggerSet -> julLoggerSet
    boolean isStarted -> isStarted
    boolean resetJUL -> resetJUL
    void setResetJUL(boolean) -> setResetJUL
    boolean isResetResistant() -> isResetResistant
    void onStart(ch.qos.logback.classic.LoggerContext) -> onStart
    void onReset(ch.qos.logback.classic.LoggerContext) -> onReset
    void onStop(ch.qos.logback.classic.LoggerContext) -> onStop
    void onLevelChange(ch.qos.logback.classic.Logger,ch.qos.logback.classic.Level) -> onLevelChange
    void propagate(ch.qos.logback.classic.Logger,ch.qos.logback.classic.Level) -> propagate
    void resetJULLevels() -> resetJULLevels
    void propagateExistingLoggerLevels() -> propagateExistingLoggerLevels
    void start() -> start
    void stop() -> stop
    boolean isStarted() -> isStarted
ch.qos.logback.classic.log4j.XMLLayout -> ch.qos.logback.classic.log4j.XMLLayout:
    int DEFAULT_SIZE -> DEFAULT_SIZE
    int UPPER_LIMIT -> UPPER_LIMIT
    java.lang.StringBuilder buf -> buf
    boolean locationInfo -> locationInfo
    boolean properties -> properties
    void start() -> start
    void setLocationInfo(boolean) -> setLocationInfo
    boolean getLocationInfo() -> getLocationInfo
    void setProperties(boolean) -> setProperties
    boolean getProperties() -> getProperties
    java.lang.String doLayout(ch.qos.logback.classic.spi.ILoggingEvent) -> doLayout
    java.lang.String getContentType() -> getContentType
    java.lang.String doLayout(java.lang.Object) -> doLayout
ch.qos.logback.classic.net.LoggingEventPreSerializationTransformer -> ch.qos.logback.classic.net.LoggingEventPreSerializationTransformer:
    java.io.Serializable transform(ch.qos.logback.classic.spi.ILoggingEvent) -> transform
    java.io.Serializable transform(java.lang.Object) -> transform
ch.qos.logback.classic.net.ReceiverBase -> ch.qos.logback.classic.net.ReceiverBase:
    boolean started -> started
    void start() -> start
    void stop() -> stop
    boolean isStarted() -> isStarted
    boolean shouldStart() -> shouldStart
    void onStop() -> onStop
    java.lang.Runnable getRunnableTask() -> getRunnableTask
ch.qos.logback.classic.net.SMTPAppender -> ch.qos.logback.classic.net.SMTPAppender:
    java.lang.String DEFAULT_SUBJECT_PATTERN -> DEFAULT_SUBJECT_PATTERN
    boolean includeCallerData -> includeCallerData
    void start() -> start
    void subAppend(ch.qos.logback.core.helpers.CyclicBuffer,ch.qos.logback.classic.spi.ILoggingEvent) -> subAppend
    void fillBuffer(ch.qos.logback.core.helpers.CyclicBuffer,java.lang.StringBuffer) -> fillBuffer
    boolean eventMarksEndOfLife(ch.qos.logback.classic.spi.ILoggingEvent) -> eventMarksEndOfLife
    ch.qos.logback.core.Layout makeSubjectLayout(java.lang.String) -> makeSubjectLayout
    ch.qos.logback.classic.PatternLayout makeNewToPatternLayout(java.lang.String) -> makeNewToPatternLayout
    boolean isIncludeCallerData() -> isIncludeCallerData
    void setIncludeCallerData(boolean) -> setIncludeCallerData
    ch.qos.logback.core.pattern.PatternLayoutBase makeNewToPatternLayout(java.lang.String) -> makeNewToPatternLayout
    void subAppend(ch.qos.logback.core.helpers.CyclicBuffer,java.lang.Object) -> subAppend
    boolean eventMarksEndOfLife(java.lang.Object) -> eventMarksEndOfLife
ch.qos.logback.classic.net.SSLSocketAppender -> ch.qos.logback.classic.net.SSLSocketAppender:
    ch.qos.logback.core.spi.PreSerializationTransformer pst -> pst
    boolean includeCallerData -> includeCallerData
    void postProcessEvent(ch.qos.logback.classic.spi.ILoggingEvent) -> postProcessEvent
    void setIncludeCallerData(boolean) -> setIncludeCallerData
    ch.qos.logback.core.spi.PreSerializationTransformer getPST() -> getPST
    void postProcessEvent(java.lang.Object) -> postProcessEvent
ch.qos.logback.classic.net.SSLSocketReceiver -> ch.qos.logback.classic.net.SSLSocketReceiver:
    ch.qos.logback.core.net.ssl.SSLConfiguration ssl -> ssl
    javax.net.SocketFactory socketFactory -> socketFactory
    javax.net.SocketFactory getSocketFactory() -> getSocketFactory
    boolean shouldStart() -> shouldStart
    ch.qos.logback.core.net.ssl.SSLConfiguration getSsl() -> getSsl
    void setSsl(ch.qos.logback.core.net.ssl.SSLConfiguration) -> setSsl
ch.qos.logback.classic.net.SimpleSSLSocketServer -> ch.qos.logback.classic.net.SimpleSSLSocketServer:
    javax.net.ServerSocketFactory socketFactory -> socketFactory
    void main(java.lang.String[]) -> main
    javax.net.ServerSocketFactory getServerSocketFactory() -> getServerSocketFactory
ch.qos.logback.classic.net.SimpleSocketServer -> ch.qos.logback.classic.net.SimpleSocketServer:
    org.slf4j.Logger logger -> logger
    int port -> port
    ch.qos.logback.classic.LoggerContext lc -> lc
    boolean closed -> closed
    java.net.ServerSocket serverSocket -> serverSocket
    java.util.List socketNodeList -> socketNodeList
    java.util.concurrent.CountDownLatch latch -> latch
    void main(java.lang.String[]) -> main
    void doMain(java.lang.Class,java.lang.String[]) -> doMain
    void run() -> run
    java.lang.String getServerThreadName() -> getServerThreadName
    java.lang.String getClientThreadName(java.net.Socket) -> getClientThreadName
    javax.net.ServerSocketFactory getServerSocketFactory() -> getServerSocketFactory
    void signalAlmostReadiness() -> signalAlmostReadiness
    void setLatch(java.util.concurrent.CountDownLatch) -> setLatch
    java.util.concurrent.CountDownLatch getLatch() -> getLatch
    boolean isClosed() -> isClosed
    void close() -> close
    void socketNodeClosing(ch.qos.logback.classic.net.SocketNode) -> socketNodeClosing
    void usage(java.lang.String) -> usage
    int parsePortNumber(java.lang.String) -> parsePortNumber
    void configureLC(ch.qos.logback.classic.LoggerContext,java.lang.String) -> configureLC
ch.qos.logback.classic.net.SocketAppender -> ch.qos.logback.classic.net.SocketAppender:
    ch.qos.logback.core.spi.PreSerializationTransformer pst -> pst
    boolean includeCallerData -> includeCallerData
    void postProcessEvent(ch.qos.logback.classic.spi.ILoggingEvent) -> postProcessEvent
    void setIncludeCallerData(boolean) -> setIncludeCallerData
    ch.qos.logback.core.spi.PreSerializationTransformer getPST() -> getPST
    void postProcessEvent(java.lang.Object) -> postProcessEvent
ch.qos.logback.classic.net.SocketNode -> ch.qos.logback.classic.net.SocketNode:
    java.net.Socket socket -> socket
    ch.qos.logback.classic.LoggerContext context -> context
    java.io.ObjectInputStream ois -> ois
    java.net.SocketAddress remoteSocketAddress -> remoteSocketAddress
    ch.qos.logback.classic.Logger logger -> logger
    boolean closed -> closed
    ch.qos.logback.classic.net.SimpleSocketServer socketServer -> socketServer
    void run() -> run
    void close() -> close
    java.lang.String toString() -> toString
ch.qos.logback.classic.net.SocketReceiver -> ch.qos.logback.classic.net.SocketReceiver:
    int DEFAULT_ACCEPT_CONNECTION_DELAY -> DEFAULT_ACCEPT_CONNECTION_DELAY
    java.lang.String remoteHost -> remoteHost
    java.net.InetAddress address -> address
    int port -> port
    int reconnectionDelay -> reconnectionDelay
    int acceptConnectionTimeout -> acceptConnectionTimeout
    java.lang.String receiverId -> receiverId
    java.net.Socket socket -> socket
    java.util.concurrent.Future connectorTask -> connectorTask
    boolean shouldStart() -> shouldStart
    void onStop() -> onStop
    java.lang.Runnable getRunnableTask() -> getRunnableTask
    void run() -> run
    ch.qos.logback.core.net.SocketConnector createConnector(java.net.InetAddress,int,int,int) -> createConnector
    java.util.concurrent.Future activateConnector(ch.qos.logback.core.net.SocketConnector) -> activateConnector
    java.net.Socket waitForConnectorToReturnASocket() -> waitForConnectorToReturnASocket
    void dispatchEvents(ch.qos.logback.classic.LoggerContext) -> dispatchEvents
    void connectionFailed(ch.qos.logback.core.net.SocketConnector,java.lang.Exception) -> connectionFailed
    ch.qos.logback.core.net.SocketConnector newConnector(java.net.InetAddress,int,int,int) -> newConnector
    javax.net.SocketFactory getSocketFactory() -> getSocketFactory
    void setRemoteHost(java.lang.String) -> setRemoteHost
    void setPort(int) -> setPort
    void setReconnectionDelay(int) -> setReconnectionDelay
    void setAcceptConnectionTimeout(int) -> setAcceptConnectionTimeout
ch.qos.logback.classic.net.SyslogAppender -> ch.qos.logback.classic.net.SyslogAppender:
    java.lang.String DEFAULT_SUFFIX_PATTERN -> DEFAULT_SUFFIX_PATTERN
    java.lang.String DEFAULT_STACKTRACE_PATTERN -> DEFAULT_STACKTRACE_PATTERN
    ch.qos.logback.classic.PatternLayout stackTraceLayout -> stackTraceLayout
    java.lang.String stackTracePattern -> stackTracePattern
    boolean throwableExcluded -> throwableExcluded
    void start() -> start
    java.lang.String getPrefixPattern() -> getPrefixPattern
    int getSeverityForEvent(java.lang.Object) -> getSeverityForEvent
    void postProcess(java.lang.Object,java.io.OutputStream) -> postProcess
    void handleThrowableFirstLine(java.io.OutputStream,ch.qos.logback.classic.spi.IThrowableProxy,java.lang.String,boolean) -> handleThrowableFirstLine
    boolean stackTraceHeaderLine(java.lang.StringBuilder,boolean) -> stackTraceHeaderLine
    ch.qos.logback.core.Layout buildLayout() -> buildLayout
    void setupStackTraceLayout() -> setupStackTraceLayout
    boolean isThrowableExcluded() -> isThrowableExcluded
    void setThrowableExcluded(boolean) -> setThrowableExcluded
    java.lang.String getStackTracePattern() -> getStackTracePattern
    void setStackTracePattern(java.lang.String) -> setStackTracePattern
ch.qos.logback.classic.net.server.RemoteAppenderClient -> ch.qos.logback.classic.net.server.a:
    void setLoggerContext(ch.qos.logback.classic.LoggerContext) -> a
ch.qos.logback.classic.net.server.RemoteAppenderServerListener -> ch.qos.logback.classic.net.server.b:
    ch.qos.logback.classic.net.server.RemoteAppenderClient createClient(java.lang.String,java.net.Socket) -> a
    ch.qos.logback.core.net.server.Client createClient(java.lang.String,java.net.Socket) -> createClient
ch.qos.logback.classic.net.server.RemoteAppenderServerRunner -> ch.qos.logback.classic.net.server.c:
    boolean configureClient(ch.qos.logback.classic.net.server.RemoteAppenderClient) -> a
    boolean configureClient(ch.qos.logback.core.net.server.Client) -> configureClient
ch.qos.logback.classic.net.server.RemoteAppenderStreamClient -> ch.qos.logback.classic.net.server.d:
    java.lang.String id -> a
    java.net.Socket socket -> b
    java.io.InputStream inputStream -> c
    ch.qos.logback.classic.LoggerContext lc -> d
    ch.qos.logback.classic.Logger logger -> e
    void setLoggerContext(ch.qos.logback.classic.LoggerContext) -> a
    void close() -> close
    void run() -> run
    java.io.ObjectInputStream createObjectInputStream() -> a
    java.lang.String toString() -> toString
ch.qos.logback.classic.net.server.SSLServerSocketAppender -> ch.qos.logback.classic.net.server.SSLServerSocketAppender:
    ch.qos.logback.core.spi.PreSerializationTransformer pst -> pst
    boolean includeCallerData -> includeCallerData
    void postProcessEvent(ch.qos.logback.classic.spi.ILoggingEvent) -> postProcessEvent
    ch.qos.logback.core.spi.PreSerializationTransformer getPST() -> getPST
    boolean isIncludeCallerData() -> isIncludeCallerData
    void setIncludeCallerData(boolean) -> setIncludeCallerData
    void postProcessEvent(java.lang.Object) -> postProcessEvent
ch.qos.logback.classic.net.server.SSLServerSocketReceiver -> ch.qos.logback.classic.net.server.SSLServerSocketReceiver:
    ch.qos.logback.core.net.ssl.SSLConfiguration ssl -> ssl
    javax.net.ServerSocketFactory socketFactory -> socketFactory
    javax.net.ServerSocketFactory getServerSocketFactory() -> getServerSocketFactory
    ch.qos.logback.core.net.ssl.SSLConfiguration getSsl() -> getSsl
    void setSsl(ch.qos.logback.core.net.ssl.SSLConfiguration) -> setSsl
ch.qos.logback.classic.net.server.ServerSocketAppender -> ch.qos.logback.classic.net.server.ServerSocketAppender:
    ch.qos.logback.core.spi.PreSerializationTransformer pst -> pst
    boolean includeCallerData -> includeCallerData
    void postProcessEvent(ch.qos.logback.classic.spi.ILoggingEvent) -> postProcessEvent
    ch.qos.logback.core.spi.PreSerializationTransformer getPST() -> getPST
    boolean isIncludeCallerData() -> isIncludeCallerData
    void setIncludeCallerData(boolean) -> setIncludeCallerData
    void postProcessEvent(java.lang.Object) -> postProcessEvent
ch.qos.logback.classic.net.server.ServerSocketReceiver -> ch.qos.logback.classic.net.server.ServerSocketReceiver:
    int DEFAULT_BACKLOG -> DEFAULT_BACKLOG
    int port -> port
    int backlog -> backlog
    java.lang.String address -> address
    java.net.ServerSocket serverSocket -> serverSocket
    ch.qos.logback.core.net.server.ServerRunner runner -> runner
    boolean shouldStart() -> shouldStart
    ch.qos.logback.core.net.server.ServerListener createServerListener(java.net.ServerSocket) -> createServerListener
    ch.qos.logback.core.net.server.ServerRunner createServerRunner(ch.qos.logback.core.net.server.ServerListener,java.util.concurrent.Executor) -> createServerRunner
    java.lang.Runnable getRunnableTask() -> getRunnableTask
    void onStop() -> onStop
    javax.net.ServerSocketFactory getServerSocketFactory() -> getServerSocketFactory
    java.net.InetAddress getInetAddress() -> getInetAddress
    int getPort() -> getPort
    void setPort(int) -> setPort
    int getBacklog() -> getBacklog
    void setBacklog(int) -> setBacklog
    java.lang.String getAddress() -> getAddress
    void setAddress(java.lang.String) -> setAddress
ch.qos.logback.classic.pattern.Abbreviator -> ch.qos.logback.classic.pattern.Abbreviator:
    java.lang.String abbreviate(java.lang.String) -> abbreviate
ch.qos.logback.classic.pattern.CallerDataConverter -> ch.qos.logback.classic.pattern.CallerDataConverter:
    java.lang.String DEFAULT_CALLER_LINE_PREFIX -> DEFAULT_CALLER_LINE_PREFIX
    int depth -> depth
    java.util.List evaluatorList -> evaluatorList
    int MAX_ERROR_COUNT -> MAX_ERROR_COUNT
    int errorCount -> errorCount
    void start() -> start
    void addEvaluator(ch.qos.logback.core.boolex.EventEvaluator) -> addEvaluator
    java.lang.String convert(ch.qos.logback.classic.spi.ILoggingEvent) -> convert
    java.lang.String getCallerLinePrefix() -> getCallerLinePrefix
    java.lang.String convert(java.lang.Object) -> convert
ch.qos.logback.classic.pattern.ClassNameOnlyAbbreviator -> ch.qos.logback.classic.pattern.ClassNameOnlyAbbreviator:
    java.lang.String abbreviate(java.lang.String) -> abbreviate
ch.qos.logback.classic.pattern.ClassOfCallerConverter -> ch.qos.logback.classic.pattern.ClassOfCallerConverter:
    java.lang.String getFullyQualifiedName(ch.qos.logback.classic.spi.ILoggingEvent) -> getFullyQualifiedName
ch.qos.logback.classic.pattern.ClassicConverter -> ch.qos.logback.classic.pattern.ClassicConverter:
ch.qos.logback.classic.pattern.ContextNameConverter -> ch.qos.logback.classic.pattern.ContextNameConverter:
    java.lang.String convert(ch.qos.logback.classic.spi.ILoggingEvent) -> convert
    java.lang.String convert(java.lang.Object) -> convert
ch.qos.logback.classic.pattern.DateConverter -> ch.qos.logback.classic.pattern.DateConverter:
    ch.qos.logback.core.util.CachingDateFormatter cachingDateFormatter -> cachingDateFormatter
    void start() -> start
    java.util.Locale parseLocale(java.lang.String) -> parseLocale
    java.lang.String convert(ch.qos.logback.classic.spi.ILoggingEvent) -> convert
    java.lang.String convert(java.lang.Object) -> convert
ch.qos.logback.classic.pattern.EnsureExceptionHandling -> ch.qos.logback.classic.pattern.EnsureExceptionHandling:
    void process(ch.qos.logback.core.pattern.Converter) -> process
    boolean chainHandlesThrowable(ch.qos.logback.core.pattern.Converter) -> chainHandlesThrowable
ch.qos.logback.classic.pattern.ExtendedThrowableProxyConverter -> ch.qos.logback.classic.pattern.ExtendedThrowableProxyConverter:
    void extraData(java.lang.StringBuilder,ch.qos.logback.classic.spi.StackTraceElementProxy) -> extraData
    void prepareLoggingEvent(ch.qos.logback.classic.spi.ILoggingEvent) -> prepareLoggingEvent
ch.qos.logback.classic.pattern.FileOfCallerConverter -> ch.qos.logback.classic.pattern.FileOfCallerConverter:
    java.lang.String convert(ch.qos.logback.classic.spi.ILoggingEvent) -> convert
    java.lang.String convert(java.lang.Object) -> convert
ch.qos.logback.classic.pattern.LevelConverter -> ch.qos.logback.classic.pattern.LevelConverter:
    java.lang.String convert(ch.qos.logback.classic.spi.ILoggingEvent) -> convert
    java.lang.String convert(java.lang.Object) -> convert
ch.qos.logback.classic.pattern.LineOfCallerConverter -> ch.qos.logback.classic.pattern.LineOfCallerConverter:
    java.lang.String convert(ch.qos.logback.classic.spi.ILoggingEvent) -> convert
    java.lang.String convert(java.lang.Object) -> convert
ch.qos.logback.classic.pattern.LineSeparatorConverter -> ch.qos.logback.classic.pattern.LineSeparatorConverter:
    java.lang.String convert(ch.qos.logback.classic.spi.ILoggingEvent) -> convert
    java.lang.String convert(java.lang.Object) -> convert
ch.qos.logback.classic.pattern.LocalSequenceNumberConverter -> ch.qos.logback.classic.pattern.LocalSequenceNumberConverter:
    java.util.concurrent.atomic.AtomicLong sequenceNumber -> sequenceNumber
    java.lang.String convert(ch.qos.logback.classic.spi.ILoggingEvent) -> convert
    java.lang.String convert(java.lang.Object) -> convert
ch.qos.logback.classic.pattern.LoggerConverter -> ch.qos.logback.classic.pattern.LoggerConverter:
    java.lang.String getFullyQualifiedName(ch.qos.logback.classic.spi.ILoggingEvent) -> getFullyQualifiedName
ch.qos.logback.classic.pattern.MDCConverter -> ch.qos.logback.classic.pattern.MDCConverter:
    java.lang.String key -> key
    java.lang.String defaultValue -> defaultValue
    void start() -> start
    void stop() -> stop
    java.lang.String convert(ch.qos.logback.classic.spi.ILoggingEvent) -> convert
    java.lang.String outputMDCForAllKeys(java.util.Map) -> outputMDCForAllKeys
    java.lang.String convert(java.lang.Object) -> convert
ch.qos.logback.classic.pattern.MarkerConverter -> ch.qos.logback.classic.pattern.MarkerConverter:
    java.lang.String EMPTY -> EMPTY
    java.lang.String convert(ch.qos.logback.classic.spi.ILoggingEvent) -> convert
    java.lang.String convert(java.lang.Object) -> convert
ch.qos.logback.classic.pattern.MessageConverter -> ch.qos.logback.classic.pattern.MessageConverter:
    java.lang.String convert(ch.qos.logback.classic.spi.ILoggingEvent) -> convert
    java.lang.String convert(java.lang.Object) -> convert
ch.qos.logback.classic.pattern.MethodOfCallerConverter -> ch.qos.logback.classic.pattern.MethodOfCallerConverter:
    java.lang.String convert(ch.qos.logback.classic.spi.ILoggingEvent) -> convert
    java.lang.String convert(java.lang.Object) -> convert
ch.qos.logback.classic.pattern.NamedConverter -> ch.qos.logback.classic.pattern.NamedConverter:
    ch.qos.logback.classic.pattern.Abbreviator abbreviator -> abbreviator
    java.lang.String getFullyQualifiedName(ch.qos.logback.classic.spi.ILoggingEvent) -> getFullyQualifiedName
    void start() -> start
    java.lang.String convert(ch.qos.logback.classic.spi.ILoggingEvent) -> convert
    java.lang.String convert(java.lang.Object) -> convert
ch.qos.logback.classic.pattern.NopThrowableInformationConverter -> ch.qos.logback.classic.pattern.NopThrowableInformationConverter:
    java.lang.String convert(ch.qos.logback.classic.spi.ILoggingEvent) -> convert
    java.lang.String convert(java.lang.Object) -> convert
ch.qos.logback.classic.pattern.PropertyConverter -> ch.qos.logback.classic.pattern.PropertyConverter:
    java.lang.String key -> key
    void start() -> start
    java.lang.String convert(ch.qos.logback.classic.spi.ILoggingEvent) -> convert
    java.lang.String convert(java.lang.Object) -> convert
ch.qos.logback.classic.pattern.RelativeTimeConverter -> ch.qos.logback.classic.pattern.RelativeTimeConverter:
    long lastTimestamp -> lastTimestamp
    java.lang.String timesmapCache -> timesmapCache
    java.lang.String convert(ch.qos.logback.classic.spi.ILoggingEvent) -> convert
    java.lang.String convert(java.lang.Object) -> convert
ch.qos.logback.classic.pattern.RootCauseFirstThrowableProxyConverter -> ch.qos.logback.classic.pattern.RootCauseFirstThrowableProxyConverter:
    java.lang.String throwableProxyToString(ch.qos.logback.classic.spi.IThrowableProxy) -> throwableProxyToString
    void recursiveAppendRootCauseFirst(java.lang.StringBuilder,java.lang.String,int,ch.qos.logback.classic.spi.IThrowableProxy) -> recursiveAppendRootCauseFirst
ch.qos.logback.classic.pattern.SyslogStartConverter -> ch.qos.logback.classic.pattern.SyslogStartConverter:
    long lastTimestamp -> lastTimestamp
    java.lang.String timesmapStr -> timesmapStr
    java.text.SimpleDateFormat simpleFormat -> simpleFormat
    java.lang.String localHostName -> localHostName
    int facility -> facility
    void start() -> start
    java.lang.String convert(ch.qos.logback.classic.spi.ILoggingEvent) -> convert
    java.lang.String computeTimeStampString(long) -> computeTimeStampString
    java.lang.String convert(java.lang.Object) -> convert
ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator -> ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator:
    int targetLength -> targetLength
    java.lang.String abbreviate(java.lang.String) -> abbreviate
    int computeDotIndexes(java.lang.String,int[]) -> computeDotIndexes
    void computeLengthArray(java.lang.String,int[],int[],int) -> computeLengthArray
    void printArray(java.lang.String,int[]) -> printArray
ch.qos.logback.classic.pattern.ThreadConverter -> ch.qos.logback.classic.pattern.ThreadConverter:
    java.lang.String convert(ch.qos.logback.classic.spi.ILoggingEvent) -> convert
    java.lang.String convert(java.lang.Object) -> convert
ch.qos.logback.classic.pattern.ThrowableHandlingConverter -> ch.qos.logback.classic.pattern.ThrowableHandlingConverter:
    boolean handlesThrowable() -> handlesThrowable
ch.qos.logback.classic.pattern.ThrowableProxyConverter -> ch.qos.logback.classic.pattern.ThrowableProxyConverter:
    int BUILDER_CAPACITY -> BUILDER_CAPACITY
    int lengthOption -> lengthOption
    java.util.List evaluatorList -> evaluatorList
    int errorCount -> errorCount
    void start() -> start
    void addEvaluator(ch.qos.logback.core.boolex.EventEvaluator) -> addEvaluator
    void stop() -> stop
    void extraData(java.lang.StringBuilder,ch.qos.logback.classic.spi.StackTraceElementProxy) -> extraData
    java.lang.String convert(ch.qos.logback.classic.spi.ILoggingEvent) -> convert
    java.lang.String throwableProxyToString(ch.qos.logback.classic.spi.IThrowableProxy) -> throwableProxyToString
    void recursiveAppend(java.lang.StringBuilder,java.lang.String,int,ch.qos.logback.classic.spi.IThrowableProxy) -> recursiveAppend
    void subjoinFirstLine(java.lang.StringBuilder,java.lang.String,int,ch.qos.logback.classic.spi.IThrowableProxy) -> subjoinFirstLine
    void subjoinExceptionMessage(java.lang.StringBuilder,ch.qos.logback.classic.spi.IThrowableProxy) -> subjoinExceptionMessage
    void subjoinSTEPArray(java.lang.StringBuilder,int,ch.qos.logback.classic.spi.IThrowableProxy) -> subjoinSTEPArray
    java.lang.String convert(java.lang.Object) -> convert
ch.qos.logback.classic.selector.ContextSelector -> ch.qos.logback.classic.selector.ContextSelector:
    ch.qos.logback.classic.LoggerContext getLoggerContext() -> getLoggerContext
    ch.qos.logback.classic.LoggerContext getLoggerContext(java.lang.String) -> getLoggerContext
    ch.qos.logback.classic.LoggerContext getDefaultLoggerContext() -> getDefaultLoggerContext
    ch.qos.logback.classic.LoggerContext detachLoggerContext(java.lang.String) -> detachLoggerContext
    java.util.List getContextNames() -> getContextNames
ch.qos.logback.classic.selector.DefaultContextSelector -> ch.qos.logback.classic.selector.DefaultContextSelector:
    ch.qos.logback.classic.LoggerContext defaultLoggerContext -> defaultLoggerContext
    ch.qos.logback.classic.LoggerContext getLoggerContext() -> getLoggerContext
    ch.qos.logback.classic.LoggerContext getDefaultLoggerContext() -> getDefaultLoggerContext
    ch.qos.logback.classic.LoggerContext detachLoggerContext(java.lang.String) -> detachLoggerContext
    java.util.List getContextNames() -> getContextNames
    ch.qos.logback.classic.LoggerContext getLoggerContext(java.lang.String) -> getLoggerContext
ch.qos.logback.classic.sift.AppenderFactoryUsingJoran -> ch.qos.logback.classic.sift.AppenderFactoryUsingJoran:
    ch.qos.logback.core.sift.SiftingJoranConfiguratorBase getSiftingJoranConfigurator(java.lang.String) -> getSiftingJoranConfigurator
ch.qos.logback.classic.sift.ContextBasedDiscriminator -> ch.qos.logback.classic.sift.ContextBasedDiscriminator:
    java.lang.String KEY -> KEY
    java.lang.String defaultValue -> defaultValue
    java.lang.String getDiscriminatingValue(ch.qos.logback.classic.spi.ILoggingEvent) -> getDiscriminatingValue
    java.lang.String getKey() -> getKey
    void setKey(java.lang.String) -> setKey
    java.lang.String getDefaultValue() -> getDefaultValue
    void setDefaultValue(java.lang.String) -> setDefaultValue
    java.lang.String getDiscriminatingValue(java.lang.Object) -> getDiscriminatingValue
ch.qos.logback.classic.sift.MDCBasedDiscriminator -> ch.qos.logback.classic.sift.MDCBasedDiscriminator:
    java.lang.String key -> key
    java.lang.String defaultValue -> defaultValue
    java.lang.String getDiscriminatingValue(ch.qos.logback.classic.spi.ILoggingEvent) -> getDiscriminatingValue
    void start() -> start
    java.lang.String getKey() -> getKey
    void setKey(java.lang.String) -> setKey
    java.lang.String getDefaultValue() -> getDefaultValue
    void setDefaultValue(java.lang.String) -> setDefaultValue
    java.lang.String getDiscriminatingValue(java.lang.Object) -> getDiscriminatingValue
ch.qos.logback.classic.sift.SiftAction -> ch.qos.logback.classic.sift.SiftAction:
    java.util.List seList -> seList
    void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> begin
    void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> end
    void inPlay(ch.qos.logback.core.joran.event.SaxEvent) -> inPlay
    java.util.List getSeList() -> getSeList
ch.qos.logback.classic.sift.SiftingAppender -> ch.qos.logback.classic.sift.SiftingAppender:
    long getTimestamp(ch.qos.logback.classic.spi.ILoggingEvent) -> getTimestamp
    void setDiscriminator(ch.qos.logback.core.sift.Discriminator) -> setDiscriminator
    boolean eventMarksEndOfLife(ch.qos.logback.classic.spi.ILoggingEvent) -> eventMarksEndOfLife
    boolean eventMarksEndOfLife(java.lang.Object) -> eventMarksEndOfLife
    long getTimestamp(java.lang.Object) -> getTimestamp
ch.qos.logback.classic.sift.SiftingJoranConfigurator -> ch.qos.logback.classic.sift.SiftingJoranConfigurator:
    ch.qos.logback.core.joran.spi.ElementPath initialElementPath() -> initialElementPath
    void addInstanceRules(ch.qos.logback.core.joran.spi.RuleStore) -> addInstanceRules
    void addDefaultNestedComponentRegistryRules(ch.qos.logback.core.joran.spi.DefaultNestedComponentRegistry) -> addDefaultNestedComponentRegistryRules
    void buildInterpreter() -> buildInterpreter
    ch.qos.logback.core.Appender getAppender() -> getAppender
ch.qos.logback.classic.spi.CallerData -> ch.qos.logback.classic.spi.CallerData:
    java.lang.String NA -> NA
    java.lang.String LOG4J_CATEGORY -> LOG4J_CATEGORY
    java.lang.String SLF4J_BOUNDARY -> SLF4J_BOUNDARY
    int LINE_NA -> LINE_NA
    java.lang.String CALLER_DATA_NA -> CALLER_DATA_NA
    java.lang.StackTraceElement[] EMPTY_CALLER_DATA_ARRAY -> EMPTY_CALLER_DATA_ARRAY
    java.lang.StackTraceElement[] extract(java.lang.Throwable,java.lang.String,int,java.util.List) -> extract
    boolean isInFrameworkSpace(java.lang.String,java.lang.String,java.util.List) -> isInFrameworkSpace
    boolean isInFrameworkSpaceList(java.lang.String,java.util.List) -> isInFrameworkSpaceList
    java.lang.StackTraceElement naInstance() -> naInstance
ch.qos.logback.classic.spi.ClassPackagingData -> ch.qos.logback.classic.spi.ClassPackagingData:
    long serialVersionUID -> serialVersionUID
    java.lang.String codeLocation -> codeLocation
    java.lang.String version -> version
    boolean exact -> exact
    java.lang.String getCodeLocation() -> getCodeLocation
    java.lang.String getVersion() -> getVersion
    boolean isExact() -> isExact
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
ch.qos.logback.classic.spi.EventArgUtil -> ch.qos.logback.classic.spi.EventArgUtil:
    java.lang.Throwable extractThrowable(java.lang.Object[]) -> extractThrowable
    java.lang.Object[] trimmedCopy(java.lang.Object[]) -> trimmedCopy
    java.lang.Object[] arrangeArguments(java.lang.Object[]) -> arrangeArguments
    boolean successfulExtraction(java.lang.Throwable) -> successfulExtraction
ch.qos.logback.classic.spi.ILoggingEvent -> ch.qos.logback.classic.spi.ILoggingEvent:
    java.lang.String getThreadName() -> getThreadName
    ch.qos.logback.classic.Level getLevel() -> getLevel
    java.lang.String getMessage() -> getMessage
    java.lang.Object[] getArgumentArray() -> getArgumentArray
    java.lang.String getFormattedMessage() -> getFormattedMessage
    java.lang.String getLoggerName() -> getLoggerName
    ch.qos.logback.classic.spi.LoggerContextVO getLoggerContextVO() -> getLoggerContextVO
    ch.qos.logback.classic.spi.IThrowableProxy getThrowableProxy() -> getThrowableProxy
    java.lang.StackTraceElement[] getCallerData() -> getCallerData
    boolean hasCallerData() -> hasCallerData
    org.slf4j.Marker getMarker() -> getMarker
    java.util.Map getMDCPropertyMap() -> getMDCPropertyMap
    java.util.Map getMdc() -> getMdc
    long getTimeStamp() -> getTimeStamp
    void prepareForDeferredProcessing() -> prepareForDeferredProcessing
ch.qos.logback.classic.spi.IThrowableProxy -> ch.qos.logback.classic.spi.IThrowableProxy:
    java.lang.String getMessage() -> getMessage
    java.lang.String getClassName() -> getClassName
    ch.qos.logback.classic.spi.StackTraceElementProxy[] getStackTraceElementProxyArray() -> getStackTraceElementProxyArray
    int getCommonFrames() -> getCommonFrames
    ch.qos.logback.classic.spi.IThrowableProxy getCause() -> getCause
    ch.qos.logback.classic.spi.IThrowableProxy[] getSuppressed() -> getSuppressed
ch.qos.logback.classic.spi.LoggerComparator -> ch.qos.logback.classic.spi.LoggerComparator:
    long serialVersionUID -> serialVersionUID
    int compare(ch.qos.logback.classic.Logger,ch.qos.logback.classic.Logger) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
ch.qos.logback.classic.spi.LoggerContextAware -> ch.qos.logback.classic.spi.LoggerContextAware:
    void setLoggerContext(ch.qos.logback.classic.LoggerContext) -> setLoggerContext
ch.qos.logback.classic.spi.LoggerContextAwareBase -> ch.qos.logback.classic.spi.LoggerContextAwareBase:
    void setLoggerContext(ch.qos.logback.classic.LoggerContext) -> setLoggerContext
    void setContext(ch.qos.logback.core.Context) -> setContext
    ch.qos.logback.classic.LoggerContext getLoggerContext() -> getLoggerContext
ch.qos.logback.classic.spi.LoggerContextListener -> ch.qos.logback.classic.spi.LoggerContextListener:
    boolean isResetResistant() -> isResetResistant
    void onStart(ch.qos.logback.classic.LoggerContext) -> onStart
    void onReset(ch.qos.logback.classic.LoggerContext) -> onReset
    void onStop(ch.qos.logback.classic.LoggerContext) -> onStop
    void onLevelChange(ch.qos.logback.classic.Logger,ch.qos.logback.classic.Level) -> onLevelChange
ch.qos.logback.classic.spi.LoggerContextVO -> ch.qos.logback.classic.spi.LoggerContextVO:
    long serialVersionUID -> serialVersionUID
    java.lang.String name -> name
    java.util.Map propertyMap -> propertyMap
    long birthTime -> birthTime
    java.lang.String getName() -> getName
    java.util.Map getPropertyMap() -> getPropertyMap
    long getBirthTime() -> getBirthTime
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
ch.qos.logback.classic.spi.LoggerRemoteView -> ch.qos.logback.classic.spi.LoggerRemoteView:
    long serialVersionUID -> serialVersionUID
    ch.qos.logback.classic.spi.LoggerContextVO loggerContextView -> loggerContextView
    java.lang.String name -> name
    boolean $assertionsDisabled -> $assertionsDisabled
    ch.qos.logback.classic.spi.LoggerContextVO getLoggerContextView() -> getLoggerContextView
    java.lang.String getName() -> getName
ch.qos.logback.classic.spi.LoggingEvent -> ch.qos.logback.classic.spi.LoggingEvent:
    java.lang.String fqnOfLoggerClass -> fqnOfLoggerClass
    java.lang.String threadName -> threadName
    java.lang.String loggerName -> loggerName
    ch.qos.logback.classic.LoggerContext loggerContext -> loggerContext
    ch.qos.logback.classic.spi.LoggerContextVO loggerContextVO -> loggerContextVO
    ch.qos.logback.classic.Level level -> level
    java.lang.String message -> message
    java.lang.String formattedMessage -> formattedMessage
    java.lang.Object[] argumentArray -> argumentArray
    ch.qos.logback.classic.spi.ThrowableProxy throwableProxy -> throwableProxy
    java.lang.StackTraceElement[] callerDataArray -> callerDataArray
    org.slf4j.Marker marker -> marker
    java.util.Map mdcPropertyMap -> mdcPropertyMap
    java.util.Map CACHED_NULL_MAP -> CACHED_NULL_MAP
    long timeStamp -> timeStamp
    java.lang.Throwable extractThrowableAnRearrangeArguments(java.lang.Object[]) -> extractThrowableAnRearrangeArguments
    void setArgumentArray(java.lang.Object[]) -> setArgumentArray
    java.lang.Object[] getArgumentArray() -> getArgumentArray
    ch.qos.logback.classic.Level getLevel() -> getLevel
    java.lang.String getLoggerName() -> getLoggerName
    void setLoggerName(java.lang.String) -> setLoggerName
    java.lang.String getThreadName() -> getThreadName
    void setThreadName(java.lang.String) -> setThreadName
    ch.qos.logback.classic.spi.IThrowableProxy getThrowableProxy() -> getThrowableProxy
    void setThrowableProxy(ch.qos.logback.classic.spi.ThrowableProxy) -> setThrowableProxy
    void prepareForDeferredProcessing() -> prepareForDeferredProcessing
    ch.qos.logback.classic.spi.LoggerContextVO getLoggerContextVO() -> getLoggerContextVO
    void setLoggerContextRemoteView(ch.qos.logback.classic.spi.LoggerContextVO) -> setLoggerContextRemoteView
    java.lang.String getMessage() -> getMessage
    void setMessage(java.lang.String) -> setMessage
    long getTimeStamp() -> getTimeStamp
    void setTimeStamp(long) -> setTimeStamp
    void setLevel(ch.qos.logback.classic.Level) -> setLevel
    java.lang.StackTraceElement[] getCallerData() -> getCallerData
    boolean hasCallerData() -> hasCallerData
    void setCallerData(java.lang.StackTraceElement[]) -> setCallerData
    org.slf4j.Marker getMarker() -> getMarker
    void setMarker(org.slf4j.Marker) -> setMarker
    long getContextBirthTime() -> getContextBirthTime
    java.lang.String getFormattedMessage() -> getFormattedMessage
    java.util.Map getMDCPropertyMap() -> getMDCPropertyMap
    void setMDCPropertyMap(java.util.Map) -> setMDCPropertyMap
    java.util.Map getMdc() -> getMdc
    java.lang.String toString() -> toString
    void writeObject(java.io.ObjectOutputStream) -> writeObject
ch.qos.logback.classic.spi.LoggingEventVO -> ch.qos.logback.classic.spi.LoggingEventVO:
    long serialVersionUID -> serialVersionUID
    int NULL_ARGUMENT_ARRAY -> NULL_ARGUMENT_ARRAY
    java.lang.String NULL_ARGUMENT_ARRAY_ELEMENT -> NULL_ARGUMENT_ARRAY_ELEMENT
    java.lang.String threadName -> threadName
    java.lang.String loggerName -> loggerName
    ch.qos.logback.classic.spi.LoggerContextVO loggerContextVO -> loggerContextVO
    ch.qos.logback.classic.Level level -> level
    java.lang.String message -> message
    java.lang.String formattedMessage -> formattedMessage
    java.lang.Object[] argumentArray -> argumentArray
    ch.qos.logback.classic.spi.ThrowableProxyVO throwableProxy -> throwableProxy
    java.lang.StackTraceElement[] callerDataArray -> callerDataArray
    org.slf4j.Marker marker -> marker
    java.util.Map mdcPropertyMap -> mdcPropertyMap
    long timeStamp -> timeStamp
    ch.qos.logback.classic.spi.LoggingEventVO build(ch.qos.logback.classic.spi.ILoggingEvent) -> build
    java.lang.String getThreadName() -> getThreadName
    ch.qos.logback.classic.spi.LoggerContextVO getLoggerContextVO() -> getLoggerContextVO
    java.lang.String getLoggerName() -> getLoggerName
    ch.qos.logback.classic.Level getLevel() -> getLevel
    java.lang.String getMessage() -> getMessage
    java.lang.String getFormattedMessage() -> getFormattedMessage
    java.lang.Object[] getArgumentArray() -> getArgumentArray
    ch.qos.logback.classic.spi.IThrowableProxy getThrowableProxy() -> getThrowableProxy
    java.lang.StackTraceElement[] getCallerData() -> getCallerData
    boolean hasCallerData() -> hasCallerData
    org.slf4j.Marker getMarker() -> getMarker
    long getTimeStamp() -> getTimeStamp
    long getContextBirthTime() -> getContextBirthTime
    ch.qos.logback.classic.spi.LoggerContextVO getContextLoggerRemoteView() -> getContextLoggerRemoteView
    java.util.Map getMDCPropertyMap() -> getMDCPropertyMap
    java.util.Map getMdc() -> getMdc
    void prepareForDeferredProcessing() -> prepareForDeferredProcessing
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
ch.qos.logback.classic.spi.PackagingDataCalculator -> ch.qos.logback.classic.spi.PackagingDataCalculator:
    ch.qos.logback.classic.spi.StackTraceElementProxy[] STEP_ARRAY_TEMPLATE -> STEP_ARRAY_TEMPLATE
    java.util.HashMap cache -> cache
    void calculate(ch.qos.logback.classic.spi.IThrowableProxy) -> calculate
    void populateFrames(ch.qos.logback.classic.spi.StackTraceElementProxy[]) -> populateFrames
    void populateUncommonFrames(int,ch.qos.logback.classic.spi.StackTraceElementProxy[],java.lang.ClassLoader) -> populateUncommonFrames
    ch.qos.logback.classic.spi.ClassPackagingData computeBySTEP(ch.qos.logback.classic.spi.StackTraceElementProxy,java.lang.ClassLoader) -> computeBySTEP
    java.lang.String getImplementationVersion(java.lang.Class) -> getImplementationVersion
    java.lang.String getCodeLocation(java.lang.Class) -> getCodeLocation
    java.lang.String getCodeLocation(java.lang.String,char) -> getCodeLocation
    boolean isFolder(int,java.lang.String) -> isFolder
    java.lang.Class loadClass(java.lang.ClassLoader,java.lang.String) -> loadClass
    java.lang.Class bestEffortLoadClass(java.lang.ClassLoader,java.lang.String) -> bestEffortLoadClass
ch.qos.logback.classic.spi.STEUtil -> ch.qos.logback.classic.spi.STEUtil:
    int findNumberOfCommonFrames(java.lang.StackTraceElement[],ch.qos.logback.classic.spi.StackTraceElementProxy[]) -> findNumberOfCommonFrames
ch.qos.logback.classic.spi.StackTraceElementProxy -> ch.qos.logback.classic.spi.StackTraceElementProxy:
    long serialVersionUID -> serialVersionUID
    java.lang.StackTraceElement ste -> ste
    java.lang.String steAsString -> steAsString
    ch.qos.logback.classic.spi.ClassPackagingData cpd -> cpd
    java.lang.String getSTEAsString() -> getSTEAsString
    java.lang.StackTraceElement getStackTraceElement() -> getStackTraceElement
    void setClassPackagingData(ch.qos.logback.classic.spi.ClassPackagingData) -> setClassPackagingData
    ch.qos.logback.classic.spi.ClassPackagingData getClassPackagingData() -> getClassPackagingData
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
ch.qos.logback.classic.spi.ThrowableProxy -> ch.qos.logback.classic.spi.ThrowableProxy:
    java.lang.Throwable throwable -> throwable
    java.lang.String className -> className
    java.lang.String message -> message
    ch.qos.logback.classic.spi.StackTraceElementProxy[] stackTraceElementProxyArray -> stackTraceElementProxyArray
    int commonFrames -> commonFrames
    ch.qos.logback.classic.spi.ThrowableProxy cause -> cause
    ch.qos.logback.classic.spi.ThrowableProxy[] suppressed -> suppressed
    ch.qos.logback.classic.spi.PackagingDataCalculator packagingDataCalculator -> packagingDataCalculator
    boolean calculatedPackageData -> calculatedPackageData
    java.lang.reflect.Method GET_SUPPRESSED_METHOD -> GET_SUPPRESSED_METHOD
    ch.qos.logback.classic.spi.ThrowableProxy[] NO_SUPPRESSED -> NO_SUPPRESSED
    java.lang.Throwable getThrowable() -> getThrowable
    java.lang.String getMessage() -> getMessage
    java.lang.String getClassName() -> getClassName
    ch.qos.logback.classic.spi.StackTraceElementProxy[] getStackTraceElementProxyArray() -> getStackTraceElementProxyArray
    int getCommonFrames() -> getCommonFrames
    ch.qos.logback.classic.spi.IThrowableProxy getCause() -> getCause
    ch.qos.logback.classic.spi.IThrowableProxy[] getSuppressed() -> getSuppressed
    ch.qos.logback.classic.spi.PackagingDataCalculator getPackagingDataCalculator() -> getPackagingDataCalculator
    void calculatePackagingData() -> calculatePackagingData
    void fullDump() -> fullDump
ch.qos.logback.classic.spi.ThrowableProxyUtil -> ch.qos.logback.classic.spi.ThrowableProxyUtil:
    int REGULAR_EXCEPTION_INDENT -> REGULAR_EXCEPTION_INDENT
    int SUPPRESSED_EXCEPTION_INDENT -> SUPPRESSED_EXCEPTION_INDENT
    int BUILDER_CAPACITY -> BUILDER_CAPACITY
    void build(ch.qos.logback.classic.spi.ThrowableProxy,java.lang.Throwable,ch.qos.logback.classic.spi.ThrowableProxy) -> build
    ch.qos.logback.classic.spi.StackTraceElementProxy[] steArrayToStepArray(java.lang.StackTraceElement[]) -> steArrayToStepArray
    int findNumberOfCommonFrames(java.lang.StackTraceElement[],ch.qos.logback.classic.spi.StackTraceElementProxy[]) -> findNumberOfCommonFrames
    java.lang.String asString(ch.qos.logback.classic.spi.IThrowableProxy) -> asString
    void recursiveAppend(java.lang.StringBuilder,java.lang.String,int,ch.qos.logback.classic.spi.IThrowableProxy) -> recursiveAppend
    void indent(java.lang.StringBuilder,int) -> indent
    void subjoinFirstLine(java.lang.StringBuilder,java.lang.String,int,ch.qos.logback.classic.spi.IThrowableProxy) -> subjoinFirstLine
    void subjoinPackagingData(java.lang.StringBuilder,ch.qos.logback.classic.spi.StackTraceElementProxy) -> subjoinPackagingData
    void subjoinSTEP(java.lang.StringBuilder,ch.qos.logback.classic.spi.StackTraceElementProxy) -> subjoinSTEP
    void subjoinSTEPArray(java.lang.StringBuilder,ch.qos.logback.classic.spi.IThrowableProxy) -> subjoinSTEPArray
    void subjoinSTEPArray(java.lang.StringBuilder,int,ch.qos.logback.classic.spi.IThrowableProxy) -> subjoinSTEPArray
    void subjoinFirstLine(java.lang.StringBuilder,ch.qos.logback.classic.spi.IThrowableProxy) -> subjoinFirstLine
    void subjoinFirstLineRootCauseFirst(java.lang.StringBuilder,ch.qos.logback.classic.spi.IThrowableProxy) -> subjoinFirstLineRootCauseFirst
    void subjoinExceptionMessage(java.lang.StringBuilder,ch.qos.logback.classic.spi.IThrowableProxy) -> subjoinExceptionMessage
ch.qos.logback.classic.spi.ThrowableProxyVO -> ch.qos.logback.classic.spi.ThrowableProxyVO:
    long serialVersionUID -> serialVersionUID
    java.lang.String className -> className
    java.lang.String message -> message
    int commonFramesCount -> commonFramesCount
    ch.qos.logback.classic.spi.StackTraceElementProxy[] stackTraceElementProxyArray -> stackTraceElementProxyArray
    ch.qos.logback.classic.spi.IThrowableProxy cause -> cause
    ch.qos.logback.classic.spi.IThrowableProxy[] suppressed -> suppressed
    java.lang.String getMessage() -> getMessage
    java.lang.String getClassName() -> getClassName
    int getCommonFrames() -> getCommonFrames
    ch.qos.logback.classic.spi.IThrowableProxy getCause() -> getCause
    ch.qos.logback.classic.spi.StackTraceElementProxy[] getStackTraceElementProxyArray() -> getStackTraceElementProxyArray
    ch.qos.logback.classic.spi.IThrowableProxy[] getSuppressed() -> getSuppressed
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    ch.qos.logback.classic.spi.ThrowableProxyVO build(ch.qos.logback.classic.spi.IThrowableProxy) -> build
ch.qos.logback.classic.spi.TurboFilterList -> ch.qos.logback.classic.spi.TurboFilterList:
    long serialVersionUID -> serialVersionUID
    ch.qos.logback.core.spi.FilterReply getTurboFilterChainDecision(org.slf4j.Marker,ch.qos.logback.classic.Logger,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object[],java.lang.Throwable) -> getTurboFilterChainDecision
ch.qos.logback.classic.turbo.DuplicateMessageFilter -> ch.qos.logback.classic.turbo.DuplicateMessageFilter:
    int DEFAULT_CACHE_SIZE -> DEFAULT_CACHE_SIZE
    int DEFAULT_ALLOWED_REPETITIONS -> DEFAULT_ALLOWED_REPETITIONS
    int allowedRepetitions -> allowedRepetitions
    int cacheSize -> cacheSize
    ch.qos.logback.classic.turbo.LRUMessageCache msgCache -> msgCache
    void start() -> start
    void stop() -> stop
    ch.qos.logback.core.spi.FilterReply decide(org.slf4j.Marker,ch.qos.logback.classic.Logger,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object[],java.lang.Throwable) -> decide
    int getAllowedRepetitions() -> getAllowedRepetitions
    void setAllowedRepetitions(int) -> setAllowedRepetitions
    int getCacheSize() -> getCacheSize
    void setCacheSize(int) -> setCacheSize
ch.qos.logback.classic.turbo.DynamicThresholdFilter -> ch.qos.logback.classic.turbo.DynamicThresholdFilter:
    java.util.Map valueLevelMap -> valueLevelMap
    ch.qos.logback.classic.Level defaultThreshold -> defaultThreshold
    java.lang.String key -> key
    ch.qos.logback.core.spi.FilterReply onHigherOrEqual -> onHigherOrEqual
    ch.qos.logback.core.spi.FilterReply onLower -> onLower
    java.lang.String getKey() -> getKey
    void setKey(java.lang.String) -> setKey
    ch.qos.logback.classic.Level getDefaultThreshold() -> getDefaultThreshold
    void setDefaultThreshold(ch.qos.logback.classic.Level) -> setDefaultThreshold
    ch.qos.logback.core.spi.FilterReply getOnHigherOrEqual() -> getOnHigherOrEqual
    void setOnHigherOrEqual(ch.qos.logback.core.spi.FilterReply) -> setOnHigherOrEqual
    ch.qos.logback.core.spi.FilterReply getOnLower() -> getOnLower
    void setOnLower(ch.qos.logback.core.spi.FilterReply) -> setOnLower
    void addMDCValueLevelPair(ch.qos.logback.classic.turbo.MDCValueLevelPair) -> addMDCValueLevelPair
    void start() -> start
    ch.qos.logback.core.spi.FilterReply decide(org.slf4j.Marker,ch.qos.logback.classic.Logger,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object[],java.lang.Throwable) -> decide
ch.qos.logback.classic.turbo.LRUMessageCache -> ch.qos.logback.classic.turbo.a:
    int cacheSize -> a
    int getMessageCountAndThenIncrement(java.lang.String) -> a
    boolean removeEldestEntry(java.util.Map$Entry) -> removeEldestEntry
    void clear() -> clear
ch.qos.logback.classic.turbo.MDCFilter -> ch.qos.logback.classic.turbo.MDCFilter:
    java.lang.String MDCKey -> MDCKey
    java.lang.String value -> value
    ch.qos.logback.core.spi.FilterReply decide(org.slf4j.Marker,ch.qos.logback.classic.Logger,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object[],java.lang.Throwable) -> decide
    void setValue(java.lang.String) -> setValue
    void setMDCKey(java.lang.String) -> setMDCKey
ch.qos.logback.classic.turbo.MDCValueLevelPair -> ch.qos.logback.classic.turbo.MDCValueLevelPair:
    java.lang.String value -> value
    ch.qos.logback.classic.Level level -> level
    java.lang.String getValue() -> getValue
    void setValue(java.lang.String) -> setValue
    ch.qos.logback.classic.Level getLevel() -> getLevel
    void setLevel(ch.qos.logback.classic.Level) -> setLevel
ch.qos.logback.classic.turbo.MarkerFilter -> ch.qos.logback.classic.turbo.MarkerFilter:
    org.slf4j.Marker markerToMatch -> markerToMatch
    void start() -> start
    ch.qos.logback.core.spi.FilterReply decide(org.slf4j.Marker,ch.qos.logback.classic.Logger,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object[],java.lang.Throwable) -> decide
    void setMarker(java.lang.String) -> setMarker
ch.qos.logback.classic.turbo.MatchingFilter -> ch.qos.logback.classic.turbo.MatchingFilter:
    ch.qos.logback.core.spi.FilterReply onMatch -> onMatch
    ch.qos.logback.core.spi.FilterReply onMismatch -> onMismatch
    void setOnMatch(java.lang.String) -> setOnMatch
    void setOnMismatch(java.lang.String) -> setOnMismatch
ch.qos.logback.classic.turbo.ReconfigureOnChangeFilter -> ch.qos.logback.classic.turbo.ReconfigureOnChangeFilter:
    long DEFAULT_REFRESH_PERIOD -> DEFAULT_REFRESH_PERIOD
    long refreshPeriod -> refreshPeriod
    java.net.URL mainConfigurationURL -> mainConfigurationURL
    long nextCheck -> nextCheck
    ch.qos.logback.core.joran.spi.ConfigurationWatchList configurationWatchList -> configurationWatchList
    long invocationCounter -> invocationCounter
    long mask -> mask
    long lastMaskCheck -> lastMaskCheck
    int MAX_MASK -> MAX_MASK
    long MASK_INCREASE_THRESHOLD -> MASK_INCREASE_THRESHOLD
    long MASK_DECREASE_THRESHOLD -> MASK_DECREASE_THRESHOLD
    void start() -> start
    java.lang.String toString() -> toString
    ch.qos.logback.core.spi.FilterReply decide(org.slf4j.Marker,ch.qos.logback.classic.Logger,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object[],java.lang.Throwable) -> decide
    void updateMaskIfNecessary(long) -> updateMaskIfNecessary
    void detachReconfigurationToNewThread() -> detachReconfigurationToNewThread
    void updateNextCheck(long) -> updateNextCheck
    boolean changeDetected(long) -> changeDetected
    void disableSubsequentReconfiguration() -> disableSubsequentReconfiguration
    long getRefreshPeriod() -> getRefreshPeriod
    void setRefreshPeriod(long) -> setRefreshPeriod
    ch.qos.logback.core.Context access$000(ch.qos.logback.classic.turbo.ReconfigureOnChangeFilter) -> access$000
    ch.qos.logback.core.Context access$100(ch.qos.logback.classic.turbo.ReconfigureOnChangeFilter) -> access$100
    ch.qos.logback.core.Context access$200(ch.qos.logback.classic.turbo.ReconfigureOnChangeFilter) -> access$200
    ch.qos.logback.core.Context access$300(ch.qos.logback.classic.turbo.ReconfigureOnChangeFilter) -> access$300
    ch.qos.logback.core.Context access$400(ch.qos.logback.classic.turbo.ReconfigureOnChangeFilter) -> access$400
    ch.qos.logback.core.Context access$500(ch.qos.logback.classic.turbo.ReconfigureOnChangeFilter) -> access$500
    ch.qos.logback.core.Context access$600(ch.qos.logback.classic.turbo.ReconfigureOnChangeFilter) -> access$600
ch.qos.logback.classic.turbo.ReconfigureOnChangeFilter$ReconfiguringThread -> ch.qos.logback.classic.turbo.b:
    ch.qos.logback.classic.turbo.ReconfigureOnChangeFilter this$0 -> a
    void run() -> run
    void performXMLConfiguration(ch.qos.logback.classic.LoggerContext) -> a
    void fallbackConfiguration(ch.qos.logback.classic.LoggerContext,java.util.List,java.net.URL) -> a
ch.qos.logback.classic.turbo.TurboFilter -> ch.qos.logback.classic.turbo.TurboFilter:
    java.lang.String name -> name
    boolean start -> start
    ch.qos.logback.core.spi.FilterReply decide(org.slf4j.Marker,ch.qos.logback.classic.Logger,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object[],java.lang.Throwable) -> decide
    void start() -> start
    boolean isStarted() -> isStarted
    void stop() -> stop
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
ch.qos.logback.classic.util.ContextInitializer -> ch.qos.logback.classic.util.ContextInitializer:
    java.lang.String AUTOCONFIG_FILE -> AUTOCONFIG_FILE
    java.lang.String CONFIG_FILE_PROPERTY -> CONFIG_FILE_PROPERTY
    java.lang.String STATUS_LISTENER_CLASS -> STATUS_LISTENER_CLASS
    java.lang.String ASSETS_DIR -> ASSETS_DIR
    java.lang.ClassLoader classLoader -> classLoader
    ch.qos.logback.classic.LoggerContext loggerContext -> loggerContext
    java.net.URL findConfigFileFromSystemProperties(boolean) -> findConfigFileFromSystemProperties
    java.io.InputStream findConfigFileURLFromAssets(boolean) -> findConfigFileURLFromAssets
    java.io.InputStream getResource(java.lang.String,java.lang.ClassLoader,boolean) -> getResource
    void autoConfig() -> autoConfig
    void statusOnResourceSearch(java.lang.String,java.lang.ClassLoader,java.lang.String) -> statusOnResourceSearch
ch.qos.logback.classic.util.ContextSelectorStaticBinder -> ch.qos.logback.classic.util.ContextSelectorStaticBinder:
    ch.qos.logback.classic.util.ContextSelectorStaticBinder singleton -> singleton
    ch.qos.logback.classic.selector.ContextSelector contextSelector -> contextSelector
    java.lang.Object key -> key
    ch.qos.logback.classic.util.ContextSelectorStaticBinder getSingleton() -> getSingleton
    void init(ch.qos.logback.classic.LoggerContext,java.lang.Object) -> init
    ch.qos.logback.classic.selector.ContextSelector dynamicalContextSelector(ch.qos.logback.classic.LoggerContext,java.lang.String) -> dynamicalContextSelector
    ch.qos.logback.classic.selector.ContextSelector getContextSelector() -> getContextSelector
ch.qos.logback.classic.util.CopyOnInheritThreadLocal -> ch.qos.logback.classic.util.CopyOnInheritThreadLocal:
    java.util.HashMap childValue(java.util.HashMap) -> childValue
    java.lang.Object childValue(java.lang.Object) -> childValue
ch.qos.logback.classic.util.DefaultNestedComponentRules -> ch.qos.logback.classic.util.DefaultNestedComponentRules:
    void addDefaultNestedComponentRegistryRules(ch.qos.logback.core.joran.spi.DefaultNestedComponentRegistry) -> addDefaultNestedComponentRegistryRules
ch.qos.logback.classic.util.LevelToSyslogSeverity -> ch.qos.logback.classic.util.LevelToSyslogSeverity:
    int convert(ch.qos.logback.classic.spi.ILoggingEvent) -> convert
ch.qos.logback.classic.util.LogbackMDCAdapter -> ch.qos.logback.classic.util.LogbackMDCAdapter:
    java.lang.InheritableThreadLocal copyOnInheritThreadLocal -> copyOnInheritThreadLocal
    int WRITE_OPERATION -> WRITE_OPERATION
    int READ_OPERATION -> READ_OPERATION
    java.lang.ThreadLocal lastOperation -> lastOperation
    java.lang.Integer getAndSetLastOperation(int) -> getAndSetLastOperation
    boolean wasLastOpReadOrNull(java.lang.Integer) -> wasLastOpReadOrNull
    java.util.Map duplicateAndInsertNewMap(java.util.Map) -> duplicateAndInsertNewMap
    void put(java.lang.String,java.lang.String) -> put
    void remove(java.lang.String) -> remove
    void clear() -> clear
    java.lang.String get(java.lang.String) -> get
    java.util.Map getPropertyMap() -> getPropertyMap
    java.util.Set getKeys() -> getKeys
    java.util.Map getCopyOfContextMap() -> getCopyOfContextMap
    void setContextMap(java.util.Map) -> setContextMap
ch.qos.logback.classic.util.LoggerNameUtil -> ch.qos.logback.classic.util.LoggerNameUtil:
    int getFirstSeparatorIndexOf(java.lang.String) -> getFirstSeparatorIndexOf
    int getSeparatorIndexOf(java.lang.String,int) -> getSeparatorIndexOf
ch.qos.logback.classic.util.StatusListenerConfigHelper -> ch.qos.logback.classic.util.StatusListenerConfigHelper:
    void installIfAsked(ch.qos.logback.classic.LoggerContext) -> installIfAsked
    void addStatusListener(ch.qos.logback.classic.LoggerContext,java.lang.String) -> addStatusListener
    void initListener(ch.qos.logback.classic.LoggerContext,ch.qos.logback.core.status.StatusListener) -> initListener
    ch.qos.logback.core.status.StatusListener createListenerPerClassName(ch.qos.logback.classic.LoggerContext,java.lang.String) -> createListenerPerClassName
ch.qos.logback.core.Appender -> ch.qos.logback.core.Appender:
    java.lang.String getName() -> getName
    void doAppend(java.lang.Object) -> doAppend
    void setName(java.lang.String) -> setName
ch.qos.logback.core.AppenderBase -> ch.qos.logback.core.AppenderBase:
    boolean started -> started
    boolean guard -> guard
    java.lang.String name -> name
    ch.qos.logback.core.spi.FilterAttachableImpl fai -> fai
    int statusRepeatCount -> statusRepeatCount
    int exceptionCount -> exceptionCount
    int ALLOWED_REPEATS -> ALLOWED_REPEATS
    java.lang.String getName() -> getName
    void doAppend(java.lang.Object) -> doAppend
    void append(java.lang.Object) -> append
    void setName(java.lang.String) -> setName
    void start() -> start
    void stop() -> stop
    boolean isStarted() -> isStarted
    java.lang.String toString() -> toString
    void addFilter(ch.qos.logback.core.filter.Filter) -> addFilter
    void clearAllFilters() -> clearAllFilters
    java.util.List getCopyOfAttachedFiltersList() -> getCopyOfAttachedFiltersList
    ch.qos.logback.core.spi.FilterReply getFilterChainDecision(java.lang.Object) -> getFilterChainDecision
ch.qos.logback.core.AsyncAppenderBase -> ch.qos.logback.core.AsyncAppenderBase:
    ch.qos.logback.core.spi.AppenderAttachableImpl aai -> aai
    java.util.concurrent.BlockingQueue blockingQueue -> blockingQueue
    int DEFAULT_QUEUE_SIZE -> DEFAULT_QUEUE_SIZE
    int queueSize -> queueSize
    int appenderCount -> appenderCount
    int UNDEFINED -> UNDEFINED
    int discardingThreshold -> discardingThreshold
    ch.qos.logback.core.AsyncAppenderBase$Worker worker -> worker
    boolean isDiscardable(java.lang.Object) -> isDiscardable
    void preprocess(java.lang.Object) -> preprocess
    void start() -> start
    void stop() -> stop
    void append(java.lang.Object) -> append
    boolean isQueueBelowDiscardingThreshold() -> isQueueBelowDiscardingThreshold
    void put(java.lang.Object) -> put
    int getQueueSize() -> getQueueSize
    void setQueueSize(int) -> setQueueSize
    int getDiscardingThreshold() -> getDiscardingThreshold
    void setDiscardingThreshold(int) -> setDiscardingThreshold
    int getNumberOfElementsInQueue() -> getNumberOfElementsInQueue
    int getRemainingCapacity() -> getRemainingCapacity
    void addAppender(ch.qos.logback.core.Appender) -> addAppender
    java.util.Iterator iteratorForAppenders() -> iteratorForAppenders
    ch.qos.logback.core.Appender getAppender(java.lang.String) -> getAppender
    boolean isAttached(ch.qos.logback.core.Appender) -> isAttached
    void detachAndStopAllAppenders() -> detachAndStopAllAppenders
    boolean detachAppender(ch.qos.logback.core.Appender) -> detachAppender
    boolean detachAppender(java.lang.String) -> detachAppender
ch.qos.logback.core.AsyncAppenderBase$Worker -> ch.qos.logback.core.a:
    ch.qos.logback.core.AsyncAppenderBase this$0 -> a
    void run() -> run
ch.qos.logback.core.BasicStatusManager -> ch.qos.logback.core.BasicStatusManager:
    int MAX_HEADER_COUNT -> MAX_HEADER_COUNT
    int TAIL_SIZE -> TAIL_SIZE
    int count -> count
    java.util.List statusList -> statusList
    ch.qos.logback.core.helpers.CyclicBuffer tailBuffer -> tailBuffer
    ch.qos.logback.core.spi.LogbackLock statusListLock -> statusListLock
    int level -> level
    java.util.List statusListenerList -> statusListenerList
    ch.qos.logback.core.spi.LogbackLock statusListenerListLock -> statusListenerListLock
    void add(ch.qos.logback.core.status.Status) -> add
    java.util.List getCopyOfStatusList() -> getCopyOfStatusList
    void fireStatusAddEvent(ch.qos.logback.core.status.Status) -> fireStatusAddEvent
    void clear() -> clear
    int getLevel() -> getLevel
    int getCount() -> getCount
    void add(ch.qos.logback.core.status.StatusListener) -> add
    boolean addUniquely(ch.qos.logback.core.status.StatusListener,java.lang.Object) -> addUniquely
    void remove(ch.qos.logback.core.status.StatusListener) -> remove
    java.util.List getCopyOfStatusListenerList() -> getCopyOfStatusListenerList
ch.qos.logback.core.ConsoleAppender -> ch.qos.logback.core.ConsoleAppender:
    ch.qos.logback.core.joran.spi.ConsoleTarget target -> target
    void setTarget(java.lang.String) -> setTarget
    java.lang.String getTarget() -> getTarget
    void targetWarn(java.lang.String) -> targetWarn
    void start() -> start
ch.qos.logback.core.Context -> ch.qos.logback.core.Context:
    ch.qos.logback.core.status.StatusManager getStatusManager() -> getStatusManager
    java.lang.Object getObject(java.lang.String) -> getObject
    void putObject(java.lang.String,java.lang.Object) -> putObject
    java.lang.String getProperty(java.lang.String) -> getProperty
    void putProperty(java.lang.String,java.lang.String) -> putProperty
    java.util.Map getCopyOfPropertyMap() -> getCopyOfPropertyMap
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    long getBirthTime() -> getBirthTime
    java.lang.Object getConfigurationLock() -> getConfigurationLock
    java.util.concurrent.ExecutorService getExecutorService() -> getExecutorService
    void register(ch.qos.logback.core.spi.LifeCycle) -> register
ch.qos.logback.core.ContextBase -> ch.qos.logback.core.ContextBase:
    long birthTime -> birthTime
    java.lang.String name -> name
    ch.qos.logback.core.status.StatusManager sm -> sm
    java.util.Map propertyMap -> propertyMap
    java.util.Map objectMap -> objectMap
    ch.qos.logback.core.spi.LogbackLock configurationLock -> configurationLock
    java.util.concurrent.ExecutorService executorService -> executorService
    ch.qos.logback.core.LifeCycleManager lifeCycleManager -> lifeCycleManager
    boolean started -> started
    ch.qos.logback.core.status.StatusManager getStatusManager() -> getStatusManager
    void setStatusManager(ch.qos.logback.core.status.StatusManager) -> setStatusManager
    java.util.Map getCopyOfPropertyMap() -> getCopyOfPropertyMap
    void putProperty(java.lang.String,java.lang.String) -> putProperty
    java.lang.String getProperty(java.lang.String) -> getProperty
    java.lang.Object getObject(java.lang.String) -> getObject
    void putObject(java.lang.String,java.lang.Object) -> putObject
    java.lang.String getName() -> getName
    void start() -> start
    void stop() -> stop
    boolean isStarted() -> isStarted
    void reset() -> reset
    void setName(java.lang.String) -> setName
    long getBirthTime() -> getBirthTime
    java.lang.Object getConfigurationLock() -> getConfigurationLock
    java.util.concurrent.ExecutorService getExecutorService() -> getExecutorService
    void stopExecutorService() -> stopExecutorService
    void register(ch.qos.logback.core.spi.LifeCycle) -> register
    ch.qos.logback.core.LifeCycleManager getLifeCycleManager() -> getLifeCycleManager
    java.lang.String toString() -> toString
ch.qos.logback.core.CoreConstants -> ch.qos.logback.core.CoreConstants:
    int CORE_POOL_SIZE -> CORE_POOL_SIZE
    int MAX_POOL_SIZE -> MAX_POOL_SIZE
    java.lang.String LINE_SEPARATOR -> LINE_SEPARATOR
    int LINE_SEPARATOR_LEN -> LINE_SEPARATOR_LEN
    java.lang.String CODES_URL -> CODES_URL
    java.lang.String DEFAULT_CONTEXT_NAME -> DEFAULT_CONTEXT_NAME
    java.lang.String PATTERN_RULE_REGISTRY -> PATTERN_RULE_REGISTRY
    java.lang.String ISO8601_STR -> ISO8601_STR
    java.lang.String ISO8601_PATTERN -> ISO8601_PATTERN
    java.lang.String DAILY_DATE_PATTERN -> DAILY_DATE_PATTERN
    java.lang.String CLF_DATE_PATTERN -> CLF_DATE_PATTERN
    java.lang.String EVALUATOR_MAP -> EVALUATOR_MAP
    java.lang.String VALUE_OF -> VALUE_OF
    java.lang.String EMPTY_STRING -> EMPTY_STRING
    java.lang.String CAUSED_BY -> CAUSED_BY
    java.lang.String SUPPRESSED -> SUPPRESSED
    java.lang.String WRAPPED_BY -> WRAPPED_BY
    char PERCENT_CHAR -> PERCENT_CHAR
    char LEFT_PARENTHESIS_CHAR -> LEFT_PARENTHESIS_CHAR
    char RIGHT_PARENTHESIS_CHAR -> RIGHT_PARENTHESIS_CHAR
    char ESCAPE_CHAR -> ESCAPE_CHAR
    char CURLY_LEFT -> CURLY_LEFT
    char CURLY_RIGHT -> CURLY_RIGHT
    char COMMA_CHAR -> COMMA_CHAR
    char DOUBLE_QUOTE_CHAR -> DOUBLE_QUOTE_CHAR
    char SINGLE_QUOTE_CHAR -> SINGLE_QUOTE_CHAR
    char COLON_CHAR -> COLON_CHAR
    char DASH_CHAR -> DASH_CHAR
    java.lang.String DEFAULT_VALUE_SEPARATOR -> DEFAULT_VALUE_SEPARATOR
    int TABLE_ROW_LIMIT -> TABLE_ROW_LIMIT
    int OOS_RESET_FREQUENCY -> OOS_RESET_FREQUENCY
    int MAX_ERROR_COUNT -> MAX_ERROR_COUNT
    char DOT -> DOT
    char TAB -> TAB
    char DOLLAR -> DOLLAR
    java.lang.String SEE_FNP_NOT_SET -> SEE_FNP_NOT_SET
    java.lang.String CONFIGURATION_WATCH_LIST -> CONFIGURATION_WATCH_LIST
    java.lang.String CONFIGURATION_WATCH_LIST_RESET -> CONFIGURATION_WATCH_LIST_RESET
    java.lang.String SAFE_JORAN_CONFIGURATION -> SAFE_JORAN_CONFIGURATION
    java.lang.String XML_PARSING -> XML_PARSING
    java.lang.String HOSTNAME_KEY -> HOSTNAME_KEY
    java.lang.String CONTEXT_NAME_KEY -> CONTEXT_NAME_KEY
    java.lang.String DATA_DIR_KEY -> DATA_DIR_KEY
    java.lang.String EXT_DIR_KEY -> EXT_DIR_KEY
    java.lang.String PACKAGE_NAME_KEY -> PACKAGE_NAME_KEY
    java.lang.String VERSION_NAME_KEY -> VERSION_NAME_KEY
    java.lang.String VERSION_CODE_KEY -> VERSION_CODE_KEY
    int BYTES_PER_INT -> BYTES_PER_INT
    int MILLIS_IN_ONE_SECOND -> MILLIS_IN_ONE_SECOND
    int MILLIS_IN_ONE_MINUTE -> MILLIS_IN_ONE_MINUTE
    int MILLIS_IN_ONE_HOUR -> MILLIS_IN_ONE_HOUR
    int MILLIS_IN_ONE_DAY -> MILLIS_IN_ONE_DAY
    int MILLIS_IN_ONE_WEEK -> MILLIS_IN_ONE_WEEK
    int SECONDS_TO_WAIT_FOR_COMPRESSION_JOBS -> SECONDS_TO_WAIT_FOR_COMPRESSION_JOBS
    java.lang.String CONTEXT_SCOPE_VALUE -> CONTEXT_SCOPE_VALUE
    java.lang.String RESET_MSG_PREFIX -> RESET_MSG_PREFIX
    java.lang.String UNDEFINED_PROPERTY_SUFFIX -> UNDEFINED_PROPERTY_SUFFIX
    java.lang.String LEFT_ACCOLADE -> LEFT_ACCOLADE
    java.lang.String RIGHT_ACCOLADE -> RIGHT_ACCOLADE
ch.qos.logback.core.FileAppender -> ch.qos.logback.core.FileAppender:
    boolean append -> append
    java.lang.String fileName -> fileName
    boolean prudent -> prudent
    boolean initialized -> initialized
    boolean lazyInit -> lazyInit
    void setFile(java.lang.String) -> setFile
    boolean isAppend() -> isAppend
    java.lang.String rawFileProperty() -> rawFileProperty
    java.lang.String getFile() -> getFile
    void start() -> start
    boolean openFile(java.lang.String) -> openFile
    boolean isPrudent() -> isPrudent
    void setPrudent(boolean) -> setPrudent
    void setAppend(boolean) -> setAppend
    boolean getLazy() -> getLazy
    void setLazy(boolean) -> setLazy
    void safeWrite(java.lang.Object) -> safeWrite
    void writeOut(java.lang.Object) -> writeOut
    void subAppend(java.lang.Object) -> subAppend
    java.lang.String getAbsoluteFilePath(java.lang.String) -> getAbsoluteFilePath
ch.qos.logback.core.Layout -> ch.qos.logback.core.Layout:
    java.lang.String doLayout(java.lang.Object) -> doLayout
    java.lang.String getFileHeader() -> getFileHeader
    java.lang.String getPresentationHeader() -> getPresentationHeader
    java.lang.String getPresentationFooter() -> getPresentationFooter
    java.lang.String getFileFooter() -> getFileFooter
    java.lang.String getContentType() -> getContentType
ch.qos.logback.core.LayoutBase -> ch.qos.logback.core.LayoutBase:
    boolean started -> started
    java.lang.String fileHeader -> fileHeader
    java.lang.String fileFooter -> fileFooter
    java.lang.String presentationHeader -> presentationHeader
    java.lang.String presentationFooter -> presentationFooter
    void setContext(ch.qos.logback.core.Context) -> setContext
    ch.qos.logback.core.Context getContext() -> getContext
    void start() -> start
    void stop() -> stop
    boolean isStarted() -> isStarted
    java.lang.String getFileHeader() -> getFileHeader
    java.lang.String getPresentationHeader() -> getPresentationHeader
    java.lang.String getPresentationFooter() -> getPresentationFooter
    java.lang.String getFileFooter() -> getFileFooter
    java.lang.String getContentType() -> getContentType
    void setFileHeader(java.lang.String) -> setFileHeader
    void setFileFooter(java.lang.String) -> setFileFooter
    void setPresentationHeader(java.lang.String) -> setPresentationHeader
    void setPresentationFooter(java.lang.String) -> setPresentationFooter
ch.qos.logback.core.LifeCycleManager -> ch.qos.logback.core.LifeCycleManager:
    java.util.Set components -> components
    void register(ch.qos.logback.core.spi.LifeCycle) -> register
    void reset() -> reset
ch.qos.logback.core.LogbackException -> ch.qos.logback.core.LogbackException:
    long serialVersionUID -> serialVersionUID
ch.qos.logback.core.NOPOutputStream -> ch.qos.logback.core.NOPOutputStream:
    void write(int) -> write
ch.qos.logback.core.OutputStreamAppender -> ch.qos.logback.core.OutputStreamAppender:
    ch.qos.logback.core.encoder.Encoder encoder -> encoder
    ch.qos.logback.core.spi.LogbackLock lock -> lock
    java.io.OutputStream outputStream -> outputStream
    java.io.OutputStream getOutputStream() -> getOutputStream
    void start() -> start
    void setLayout(ch.qos.logback.core.Layout) -> setLayout
    void append(java.lang.Object) -> append
    void stop() -> stop
    void closeOutputStream() -> closeOutputStream
    void encoderInit() -> encoderInit
    void encoderClose() -> encoderClose
    void setOutputStream(java.io.OutputStream) -> setOutputStream
    void writeOut(java.lang.Object) -> writeOut
    void subAppend(java.lang.Object) -> subAppend
    ch.qos.logback.core.encoder.Encoder getEncoder() -> getEncoder
    void setEncoder(ch.qos.logback.core.encoder.Encoder) -> setEncoder
ch.qos.logback.core.PropertyDefinerBase -> ch.qos.logback.core.PropertyDefinerBase:
    java.lang.String booleanAsStr(boolean) -> booleanAsStr
ch.qos.logback.core.UnsynchronizedAppenderBase -> ch.qos.logback.core.UnsynchronizedAppenderBase:
    boolean started -> started
    java.lang.ThreadLocal guard -> guard
    java.lang.String name -> name
    ch.qos.logback.core.spi.FilterAttachableImpl fai -> fai
    int statusRepeatCount -> statusRepeatCount
    int exceptionCount -> exceptionCount
    int ALLOWED_REPEATS -> ALLOWED_REPEATS
    java.lang.String getName() -> getName
    void doAppend(java.lang.Object) -> doAppend
    void append(java.lang.Object) -> append
    void setName(java.lang.String) -> setName
    void start() -> start
    void stop() -> stop
    boolean isStarted() -> isStarted
    java.lang.String toString() -> toString
    void addFilter(ch.qos.logback.core.filter.Filter) -> addFilter
    void clearAllFilters() -> clearAllFilters
    java.util.List getCopyOfAttachedFiltersList() -> getCopyOfAttachedFiltersList
    ch.qos.logback.core.spi.FilterReply getFilterChainDecision(java.lang.Object) -> getFilterChainDecision
ch.qos.logback.core.android.CommonPathUtil -> ch.qos.logback.core.android.CommonPathUtil:
    java.lang.String ASSETS_DIRECTORY -> ASSETS_DIRECTORY
    java.lang.String getMountedExternalStorageDirectoryPath() -> getMountedExternalStorageDirectoryPath
    java.lang.String getExternalStorageDirectoryPath() -> getExternalStorageDirectoryPath
    java.lang.String getFilesDirectoryPath(java.lang.String) -> getFilesDirectoryPath
    java.lang.String getAssetsDirectoryPath() -> getAssetsDirectoryPath
    java.lang.String getDatabaseDirectoryPath(java.lang.String) -> getDatabaseDirectoryPath
ch.qos.logback.core.android.SystemPropertiesProxy -> ch.qos.logback.core.android.SystemPropertiesProxy:
    ch.qos.logback.core.android.SystemPropertiesProxy SINGLETON -> SINGLETON
    java.lang.Class SystemProperties -> SystemProperties
    java.lang.reflect.Method getString -> getString
    java.lang.reflect.Method getBoolean -> getBoolean
    ch.qos.logback.core.android.SystemPropertiesProxy getInstance() -> getInstance
    void setClassLoader(java.lang.ClassLoader) -> setClassLoader
    java.lang.String get(java.lang.String,java.lang.String) -> get
    java.lang.Boolean getBoolean(java.lang.String,boolean) -> getBoolean
ch.qos.logback.core.boolex.EvaluationException -> ch.qos.logback.core.boolex.EvaluationException:
    long serialVersionUID -> serialVersionUID
ch.qos.logback.core.boolex.EventEvaluator -> ch.qos.logback.core.boolex.EventEvaluator:
    boolean evaluate(java.lang.Object) -> evaluate
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
ch.qos.logback.core.boolex.EventEvaluatorBase -> ch.qos.logback.core.boolex.EventEvaluatorBase:
    java.lang.String name -> name
    boolean started -> started
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    boolean isStarted() -> isStarted
    void start() -> start
    void stop() -> stop
ch.qos.logback.core.encoder.ByteArrayUtil -> ch.qos.logback.core.encoder.ByteArrayUtil:
    void writeInt(byte[],int,int) -> writeInt
    void writeInt(java.io.ByteArrayOutputStream,int) -> writeInt
    int readInt(byte[],int) -> readInt
    java.lang.String toHexString(byte[]) -> toHexString
    byte[] hexStringToByteArray(java.lang.String) -> hexStringToByteArray
ch.qos.logback.core.encoder.EchoEncoder -> ch.qos.logback.core.encoder.EchoEncoder:
    void doEncode(java.lang.Object) -> doEncode
    void close() -> close
    void init(java.io.OutputStream) -> init
ch.qos.logback.core.encoder.Encoder -> ch.qos.logback.core.encoder.Encoder:
    void init(java.io.OutputStream) -> init
    void doEncode(java.lang.Object) -> doEncode
    void close() -> close
ch.qos.logback.core.encoder.EncoderBase -> ch.qos.logback.core.encoder.EncoderBase:
    boolean started -> started
    java.io.OutputStream outputStream -> outputStream
    void init(java.io.OutputStream) -> init
    boolean isStarted() -> isStarted
    void start() -> start
    void stop() -> stop
ch.qos.logback.core.encoder.EventObjectInputStream -> ch.qos.logback.core.encoder.EventObjectInputStream:
    ch.qos.logback.core.encoder.NonClosableInputStream ncis -> ncis
    java.util.List buffer -> buffer
    int index -> index
    int read() -> read
    int available() -> available
    java.lang.Object readEvent() -> readEvent
    void internalReset() -> internalReset
    java.lang.Object getFromBuffer() -> getFromBuffer
    int readHeader() -> readHeader
    java.lang.Object readEvents(java.io.ObjectInputStream) -> readEvents
    void readFooter(int) -> readFooter
    void readPayload(int) -> readPayload
    void close() -> close
ch.qos.logback.core.encoder.LayoutWrappingEncoder -> ch.qos.logback.core.encoder.LayoutWrappingEncoder:
    ch.qos.logback.core.Layout layout -> layout
    java.nio.charset.Charset charset -> charset
    boolean immediateFlush -> immediateFlush
    void setImmediateFlush(boolean) -> setImmediateFlush
    boolean isImmediateFlush() -> isImmediateFlush
    ch.qos.logback.core.Layout getLayout() -> getLayout
    void setLayout(ch.qos.logback.core.Layout) -> setLayout
    java.nio.charset.Charset getCharset() -> getCharset
    void setCharset(java.nio.charset.Charset) -> setCharset
    void init(java.io.OutputStream) -> init
    void writeHeader() -> writeHeader
    void close() -> close
    void writeFooter() -> writeFooter
    byte[] convertToBytes(java.lang.String) -> convertToBytes
    void doEncode(java.lang.Object) -> doEncode
    boolean isStarted() -> isStarted
    void start() -> start
    void stop() -> stop
    void appendIfNotNull(java.lang.StringBuilder,java.lang.String) -> appendIfNotNull
ch.qos.logback.core.encoder.NonClosableInputStream -> ch.qos.logback.core.encoder.NonClosableInputStream:
    void close() -> close
    void realClose() -> realClose
ch.qos.logback.core.encoder.ObjectStreamEncoder -> ch.qos.logback.core.encoder.ObjectStreamEncoder:
    int START_PEBBLE -> START_PEBBLE
    int STOP_PEBBLE -> STOP_PEBBLE
    int MAX_BUFFER_SIZE -> MAX_BUFFER_SIZE
    java.util.List bufferList -> bufferList
    void doEncode(java.lang.Object) -> doEncode
    void writeHeader(java.io.ByteArrayOutputStream,int) -> writeHeader
    void writeFooter(java.io.ByteArrayOutputStream,int) -> writeFooter
    void writeBuffer() -> writeBuffer
    void writeEndPosition(byte[]) -> writeEndPosition
    void init(java.io.OutputStream) -> init
    void close() -> close
ch.qos.logback.core.filter.AbstractMatcherFilter -> ch.qos.logback.core.filter.AbstractMatcherFilter:
    ch.qos.logback.core.spi.FilterReply onMatch -> onMatch
    ch.qos.logback.core.spi.FilterReply onMismatch -> onMismatch
    void setOnMatch(ch.qos.logback.core.spi.FilterReply) -> setOnMatch
    void setOnMismatch(ch.qos.logback.core.spi.FilterReply) -> setOnMismatch
    ch.qos.logback.core.spi.FilterReply getOnMatch() -> getOnMatch
    ch.qos.logback.core.spi.FilterReply getOnMismatch() -> getOnMismatch
ch.qos.logback.core.filter.EvaluatorFilter -> ch.qos.logback.core.filter.EvaluatorFilter:
    ch.qos.logback.core.boolex.EventEvaluator evaluator -> evaluator
    void start() -> start
    ch.qos.logback.core.boolex.EventEvaluator getEvaluator() -> getEvaluator
    void setEvaluator(ch.qos.logback.core.boolex.EventEvaluator) -> setEvaluator
    ch.qos.logback.core.spi.FilterReply decide(java.lang.Object) -> decide
ch.qos.logback.core.filter.Filter -> ch.qos.logback.core.filter.Filter:
    java.lang.String name -> name
    boolean start -> start
    void start() -> start
    boolean isStarted() -> isStarted
    void stop() -> stop
    ch.qos.logback.core.spi.FilterReply decide(java.lang.Object) -> decide
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
ch.qos.logback.core.helpers.CyclicBuffer -> ch.qos.logback.core.helpers.CyclicBuffer:
    java.lang.Object[] ea -> ea
    int first -> first
    int last -> last
    int numElems -> numElems
    int maxSize -> maxSize
    void init(int) -> init
    void clear() -> clear
    void add(java.lang.Object) -> add
    java.lang.Object get(int) -> get
    int getMaxSize() -> getMaxSize
    java.lang.Object get() -> get
    java.util.List asList() -> asList
    int length() -> length
    void resize(int) -> resize
ch.qos.logback.core.helpers.NOPAppender -> ch.qos.logback.core.helpers.NOPAppender:
    void append(java.lang.Object) -> append
ch.qos.logback.core.helpers.ThrowableToStringArray -> ch.qos.logback.core.helpers.ThrowableToStringArray:
    java.lang.String[] convert(java.lang.Throwable) -> convert
    void extract(java.util.List,java.lang.Throwable,java.lang.StackTraceElement[]) -> extract
    java.lang.String formatFirstLine(java.lang.Throwable,java.lang.StackTraceElement[]) -> formatFirstLine
    int findNumberOfCommonFrames(java.lang.StackTraceElement[],java.lang.StackTraceElement[]) -> findNumberOfCommonFrames
ch.qos.logback.core.helpers.Transform -> ch.qos.logback.core.helpers.Transform:
    java.lang.String CDATA_START -> CDATA_START
    java.lang.String CDATA_END -> CDATA_END
    java.lang.String CDATA_PSEUDO_END -> CDATA_PSEUDO_END
    java.lang.String CDATA_EMBEDED_END -> CDATA_EMBEDED_END
    int CDATA_END_LEN -> CDATA_END_LEN
    java.lang.String escapeTags(java.lang.String) -> escapeTags
    java.lang.String escapeTags(java.lang.StringBuffer) -> escapeTags
    void appendEscapingCDATA(java.lang.StringBuilder,java.lang.String) -> appendEscapingCDATA
ch.qos.logback.core.html.CssBuilder -> ch.qos.logback.core.html.CssBuilder:
    void addCss(java.lang.StringBuilder) -> addCss
ch.qos.logback.core.html.HTMLLayoutBase -> ch.qos.logback.core.html.HTMLLayoutBase:
    java.lang.String pattern -> pattern
    ch.qos.logback.core.pattern.Converter head -> head
    java.lang.String title -> title
    ch.qos.logback.core.html.CssBuilder cssBuilder -> cssBuilder
    long counter -> counter
    void setPattern(java.lang.String) -> setPattern
    java.lang.String getPattern() -> getPattern
    ch.qos.logback.core.html.CssBuilder getCssBuilder() -> getCssBuilder
    void setCssBuilder(ch.qos.logback.core.html.CssBuilder) -> setCssBuilder
    void start() -> start
    java.util.Map getDefaultConverterMap() -> getDefaultConverterMap
    java.util.Map getEffectiveConverterMap() -> getEffectiveConverterMap
    void setTitle(java.lang.String) -> setTitle
    java.lang.String getTitle() -> getTitle
    java.lang.String getContentType() -> getContentType
    java.lang.String getFileHeader() -> getFileHeader
    java.lang.String getPresentationHeader() -> getPresentationHeader
    void buildHeaderRowForTable(java.lang.StringBuilder) -> buildHeaderRowForTable
    java.lang.String getPresentationFooter() -> getPresentationFooter
    java.lang.String getFileFooter() -> getFileFooter
    void startNewTableIfLimitReached(java.lang.StringBuilder) -> startNewTableIfLimitReached
    java.lang.String computeConverterName(ch.qos.logback.core.pattern.Converter) -> computeConverterName
ch.qos.logback.core.html.IThrowableRenderer -> ch.qos.logback.core.html.IThrowableRenderer:
    void render(java.lang.StringBuilder,java.lang.Object) -> render
ch.qos.logback.core.html.NOPThrowableRenderer -> ch.qos.logback.core.html.NOPThrowableRenderer:
    void render(java.lang.StringBuilder,java.lang.Object) -> render
ch.qos.logback.core.joran.GenericConfigurator -> ch.qos.logback.core.joran.GenericConfigurator:
    ch.qos.logback.core.joran.spi.Interpreter interpreter -> interpreter
    void doConfigure(java.net.URL) -> doConfigure
    void doConfigure(java.lang.String) -> doConfigure
    void doConfigure(java.io.File) -> doConfigure
    void informContextOfURLUsedForConfiguration(ch.qos.logback.core.Context,java.net.URL) -> informContextOfURLUsedForConfiguration
    void doConfigure(java.io.InputStream) -> doConfigure
    void addInstanceRules(ch.qos.logback.core.joran.spi.RuleStore) -> addInstanceRules
    void addImplicitRules(ch.qos.logback.core.joran.spi.Interpreter) -> addImplicitRules
    void addDefaultNestedComponentRegistryRules(ch.qos.logback.core.joran.spi.DefaultNestedComponentRegistry) -> addDefaultNestedComponentRegistryRules
    ch.qos.logback.core.joran.spi.ElementPath initialElementPath() -> initialElementPath
    void buildInterpreter() -> buildInterpreter
    void doConfigure(org.xml.sax.InputSource) -> doConfigure
    void doConfigure(java.util.List) -> doConfigure
    void registerSafeConfiguration() -> registerSafeConfiguration
    java.util.List recallSafeConfiguration() -> recallSafeConfiguration
ch.qos.logback.core.joran.JoranConfiguratorBase -> ch.qos.logback.core.joran.JoranConfiguratorBase:
    java.util.List getErrorList() -> getErrorList
    void addInstanceRules(ch.qos.logback.core.joran.spi.RuleStore) -> addInstanceRules
    void addImplicitRules(ch.qos.logback.core.joran.spi.Interpreter) -> addImplicitRules
    void buildInterpreter() -> buildInterpreter
    ch.qos.logback.core.joran.spi.InterpretationContext getInterpretationContext() -> getInterpretationContext
ch.qos.logback.core.joran.action.AbstractEventEvaluatorAction -> ch.qos.logback.core.joran.action.AbstractEventEvaluatorAction:
    ch.qos.logback.core.boolex.EventEvaluator evaluator -> evaluator
    boolean inError -> inError
    void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> begin
    java.lang.String defaultClassName() -> defaultClassName
    void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> end
    void finish(ch.qos.logback.core.joran.spi.InterpretationContext) -> finish
ch.qos.logback.core.joran.action.AbstractIncludeAction -> ch.qos.logback.core.joran.action.AbstractIncludeAction:
    java.lang.String FILE_ATTR -> FILE_ATTR
    java.lang.String URL_ATTR -> URL_ATTR
    java.lang.String RESOURCE_ATTR -> RESOURCE_ATTR
    java.lang.String OPTIONAL_ATTR -> OPTIONAL_ATTR
    java.lang.String attributeInUse -> attributeInUse
    boolean optional -> optional
    java.net.URL urlInUse -> urlInUse
    java.net.URL getUrl() -> getUrl
    void processInclude(ch.qos.logback.core.joran.spi.InterpretationContext,java.net.URL) -> processInclude
    void handleError(java.lang.String,java.lang.Exception) -> handleError
    void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> begin
    void close(java.io.InputStream) -> close
    boolean checkAttributes(org.xml.sax.Attributes) -> checkAttributes
    java.net.URL attributeToURL(java.lang.String) -> attributeToURL
    java.net.URL resourceAsURL(java.lang.String) -> resourceAsURL
    java.net.URL filePathAsURL(java.lang.String) -> filePathAsURL
    java.lang.String getAttributeInUse() -> getAttributeInUse
    boolean isOptional() -> isOptional
    java.net.URL getInputURL(ch.qos.logback.core.joran.spi.InterpretationContext,org.xml.sax.Attributes) -> getInputURL
    void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> end
ch.qos.logback.core.joran.action.Action -> ch.qos.logback.core.joran.action.Action:
    java.lang.String NAME_ATTRIBUTE -> NAME_ATTRIBUTE
    java.lang.String KEY_ATTRIBUTE -> KEY_ATTRIBUTE
    java.lang.String VALUE_ATTRIBUTE -> VALUE_ATTRIBUTE
    java.lang.String FILE_ATTRIBUTE -> FILE_ATTRIBUTE
    java.lang.String CLASS_ATTRIBUTE -> CLASS_ATTRIBUTE
    java.lang.String PATTERN_ATTRIBUTE -> PATTERN_ATTRIBUTE
    java.lang.String SCOPE_ATTRIBUTE -> SCOPE_ATTRIBUTE
    java.lang.String ACTION_CLASS_ATTRIBUTE -> ACTION_CLASS_ATTRIBUTE
    void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> begin
    void body(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> body
    void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> end
    java.lang.String toString() -> toString
    int getColumnNumber(ch.qos.logback.core.joran.spi.InterpretationContext) -> getColumnNumber
    int getLineNumber(ch.qos.logback.core.joran.spi.InterpretationContext) -> getLineNumber
    java.lang.String getLineColStr(ch.qos.logback.core.joran.spi.InterpretationContext) -> getLineColStr
ch.qos.logback.core.joran.action.ActionConst -> ch.qos.logback.core.joran.action.ActionConst:
    java.lang.String APPENDER_TAG -> APPENDER_TAG
    java.lang.String REF_ATTRIBUTE -> REF_ATTRIBUTE
    java.lang.String ADDITIVITY_ATTRIBUTE -> ADDITIVITY_ATTRIBUTE
    java.lang.String LEVEL_ATTRIBUTE -> LEVEL_ATTRIBUTE
    java.lang.String CONVERTER_CLASS_ATTRIBUTE -> CONVERTER_CLASS_ATTRIBUTE
    java.lang.String CONVERSION_WORD_ATTRIBUTE -> CONVERSION_WORD_ATTRIBUTE
    java.lang.String PATTERN_ATTRIBUTE -> PATTERN_ATTRIBUTE
    java.lang.String VALUE_ATTR -> VALUE_ATTR
    java.lang.String ACTION_CLASS_ATTRIBUTE -> ACTION_CLASS_ATTRIBUTE
    java.lang.String INHERITED -> INHERITED
    java.lang.String NULL -> NULL
    java.lang.Class[] ONE_STRING_PARAM -> ONE_STRING_PARAM
    java.lang.String APPENDER_BAG -> APPENDER_BAG
    java.lang.String FILTER_CHAIN_BAG -> FILTER_CHAIN_BAG
ch.qos.logback.core.joran.action.ActionUtil -> ch.qos.logback.core.joran.action.ActionUtil:
    ch.qos.logback.core.joran.action.ActionUtil$Scope stringToScope(java.lang.String) -> stringToScope
    void setProperty(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,java.lang.String,ch.qos.logback.core.joran.action.ActionUtil$Scope) -> setProperty
    void setProperties(ch.qos.logback.core.joran.spi.InterpretationContext,java.util.Properties,ch.qos.logback.core.joran.action.ActionUtil$Scope) -> setProperties
ch.qos.logback.core.joran.action.ActionUtil$1 -> ch.qos.logback.core.joran.action.a:
    int[] $SwitchMap$ch$qos$logback$core$joran$action$ActionUtil$Scope -> a
ch.qos.logback.core.joran.action.ActionUtil$Scope -> ch.qos.logback.core.joran.action.ActionUtil$Scope:
    ch.qos.logback.core.joran.action.ActionUtil$Scope LOCAL -> LOCAL
    ch.qos.logback.core.joran.action.ActionUtil$Scope CONTEXT -> CONTEXT
    ch.qos.logback.core.joran.action.ActionUtil$Scope SYSTEM -> SYSTEM
    ch.qos.logback.core.joran.action.ActionUtil$Scope[] $VALUES -> $VALUES
    ch.qos.logback.core.joran.action.ActionUtil$Scope[] values() -> values
    ch.qos.logback.core.joran.action.ActionUtil$Scope valueOf(java.lang.String) -> valueOf
ch.qos.logback.core.joran.action.AppenderAction -> ch.qos.logback.core.joran.action.AppenderAction:
    ch.qos.logback.core.Appender appender -> appender
    boolean inError -> inError
    void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> begin
    void warnDeprecated(java.lang.String) -> warnDeprecated
    void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> end
ch.qos.logback.core.joran.action.AppenderRefAction -> ch.qos.logback.core.joran.action.AppenderRefAction:
    boolean inError -> inError
    void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> begin
    void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> end
ch.qos.logback.core.joran.action.ConversionRuleAction -> ch.qos.logback.core.joran.action.ConversionRuleAction:
    boolean inError -> inError
    void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> begin
    void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> end
    void finish(ch.qos.logback.core.joran.spi.InterpretationContext) -> finish
ch.qos.logback.core.joran.action.DefinePropertyAction -> ch.qos.logback.core.joran.action.DefinePropertyAction:
    java.lang.String scopeStr -> scopeStr
    ch.qos.logback.core.joran.action.ActionUtil$Scope scope -> scope
    java.lang.String propertyName -> propertyName
    ch.qos.logback.core.spi.PropertyDefiner definer -> definer
    boolean inError -> inError
    void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> begin
    void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> end
ch.qos.logback.core.joran.action.IADataForBasicProperty -> ch.qos.logback.core.joran.action.b:
    ch.qos.logback.core.joran.util.PropertySetter parentBean -> a
    ch.qos.logback.core.util.AggregationType aggregationType -> b
    java.lang.String propertyName -> c
ch.qos.logback.core.joran.action.IADataForComplexProperty -> ch.qos.logback.core.joran.action.IADataForComplexProperty:
    ch.qos.logback.core.joran.util.PropertySetter parentBean -> parentBean
    ch.qos.logback.core.util.AggregationType aggregationType -> aggregationType
    java.lang.String complexPropertyName -> complexPropertyName
    java.lang.Object nestedComplexProperty -> nestedComplexProperty
    boolean inError -> inError
    ch.qos.logback.core.util.AggregationType getAggregationType() -> getAggregationType
    java.lang.Object getNestedComplexProperty() -> getNestedComplexProperty
    java.lang.String getComplexPropertyName() -> getComplexPropertyName
    void setNestedComplexProperty(java.lang.Object) -> setNestedComplexProperty
ch.qos.logback.core.joran.action.ImplicitAction -> ch.qos.logback.core.joran.action.ImplicitAction:
    boolean isApplicable(ch.qos.logback.core.joran.spi.ElementPath,org.xml.sax.Attributes,ch.qos.logback.core.joran.spi.InterpretationContext) -> isApplicable
ch.qos.logback.core.joran.action.IncludeAction -> ch.qos.logback.core.joran.action.IncludeAction:
    java.lang.String INCLUDED_TAG -> INCLUDED_TAG
    java.lang.String CONFIG_TAG -> CONFIG_TAG
    int eventOffset -> eventOffset
    void setEventOffset(int) -> setEventOffset
    ch.qos.logback.core.joran.event.SaxEventRecorder createRecorder(java.io.InputStream,java.net.URL) -> createRecorder
    void processInclude(ch.qos.logback.core.joran.spi.InterpretationContext,java.net.URL) -> processInclude
    java.io.InputStream openURL(java.net.URL) -> openURL
    void trimHeadAndTail(ch.qos.logback.core.joran.event.SaxEventRecorder) -> trimHeadAndTail
    java.lang.String getEventName(ch.qos.logback.core.joran.event.SaxEvent) -> getEventName
ch.qos.logback.core.joran.action.NOPAction -> ch.qos.logback.core.joran.action.NOPAction:
    void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> begin
    void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> end
ch.qos.logback.core.joran.action.NestedBasicPropertyIA -> ch.qos.logback.core.joran.action.NestedBasicPropertyIA:
    java.util.Stack actionDataStack -> actionDataStack
    boolean isApplicable(ch.qos.logback.core.joran.spi.ElementPath,org.xml.sax.Attributes,ch.qos.logback.core.joran.spi.InterpretationContext) -> isApplicable
    void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> begin
    void body(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> body
    void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> end
ch.qos.logback.core.joran.action.NestedBasicPropertyIA$1 -> ch.qos.logback.core.joran.action.c:
    int[] $SwitchMap$ch$qos$logback$core$util$AggregationType -> a
ch.qos.logback.core.joran.action.NestedComplexPropertyIA -> ch.qos.logback.core.joran.action.NestedComplexPropertyIA:
    java.util.Stack actionDataStack -> actionDataStack
    boolean isApplicable(ch.qos.logback.core.joran.spi.ElementPath,org.xml.sax.Attributes,ch.qos.logback.core.joran.spi.InterpretationContext) -> isApplicable
    void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> begin
    void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> end
ch.qos.logback.core.joran.action.NestedComplexPropertyIA$1 -> ch.qos.logback.core.joran.action.d:
    int[] $SwitchMap$ch$qos$logback$core$util$AggregationType -> a
ch.qos.logback.core.joran.action.NewRuleAction -> ch.qos.logback.core.joran.action.NewRuleAction:
    boolean inError -> inError
    void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> begin
    void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> end
    void finish(ch.qos.logback.core.joran.spi.InterpretationContext) -> finish
ch.qos.logback.core.joran.action.ParamAction -> ch.qos.logback.core.joran.action.ParamAction:
    java.lang.String NO_NAME -> NO_NAME
    java.lang.String NO_VALUE -> NO_VALUE
    boolean inError -> inError
    void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> begin
    void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> end
    void finish(ch.qos.logback.core.joran.spi.InterpretationContext) -> finish
ch.qos.logback.core.joran.action.PropertyAction -> ch.qos.logback.core.joran.action.PropertyAction:
    java.lang.String RESOURCE_ATTRIBUTE -> RESOURCE_ATTRIBUTE
    java.lang.String INVALID_ATTRIBUTES -> INVALID_ATTRIBUTES
    void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> begin
    void loadAndSetProperties(ch.qos.logback.core.joran.spi.InterpretationContext,java.io.InputStream,ch.qos.logback.core.joran.action.ActionUtil$Scope) -> loadAndSetProperties
    boolean checkFileAttributeSanity(org.xml.sax.Attributes) -> checkFileAttributeSanity
    boolean checkResourceAttributeSanity(org.xml.sax.Attributes) -> checkResourceAttributeSanity
    boolean checkValueNameAttributesSanity(org.xml.sax.Attributes) -> checkValueNameAttributesSanity
    void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> end
    void finish(ch.qos.logback.core.joran.spi.InterpretationContext) -> finish
ch.qos.logback.core.joran.action.StatusListenerAction -> ch.qos.logback.core.joran.action.StatusListenerAction:
    boolean inError -> inError
    ch.qos.logback.core.status.StatusListener statusListener -> statusListener
    void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> begin
    void finish(ch.qos.logback.core.joran.spi.InterpretationContext) -> finish
    void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> end
ch.qos.logback.core.joran.action.TimestampAction -> ch.qos.logback.core.joran.action.TimestampAction:
    java.lang.String DATE_PATTERN_ATTRIBUTE -> DATE_PATTERN_ATTRIBUTE
    java.lang.String TIME_REFERENCE_ATTRIBUTE -> TIME_REFERENCE_ATTRIBUTE
    java.lang.String CONTEXT_BIRTH -> CONTEXT_BIRTH
    boolean inError -> inError
    void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes) -> begin
    void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String) -> end
ch.qos.logback.core.joran.event.BodyEvent -> ch.qos.logback.core.joran.event.BodyEvent:
    java.lang.String text -> text
    java.lang.String getText() -> getText
    java.lang.String toString() -> toString
    void append(java.lang.String) -> append
ch.qos.logback.core.joran.event.EndEvent -> ch.qos.logback.core.joran.event.EndEvent:
    java.lang.String toString() -> toString
ch.qos.logback.core.joran.event.InPlayListener -> ch.qos.logback.core.joran.event.InPlayListener:
    void inPlay(ch.qos.logback.core.joran.event.SaxEvent) -> inPlay
ch.qos.logback.core.joran.event.SaxEvent -> ch.qos.logback.core.joran.event.SaxEvent:
    java.lang.String namespaceURI -> namespaceURI
    java.lang.String localName -> localName
    java.lang.String qName -> qName
    org.xml.sax.Locator locator -> locator
    java.lang.String getLocalName() -> getLocalName
    org.xml.sax.Locator getLocator() -> getLocator
    java.lang.String getNamespaceURI() -> getNamespaceURI
    java.lang.String getQName() -> getQName
ch.qos.logback.core.joran.event.SaxEventRecorder -> ch.qos.logback.core.joran.event.SaxEventRecorder:
    ch.qos.logback.core.spi.ContextAwareImpl cai -> cai
    java.util.List saxEventList -> saxEventList
    org.xml.sax.Locator locator -> locator
    ch.qos.logback.core.joran.spi.ElementPath globalElementPath -> globalElementPath
    void recordEvents(java.io.InputStream) -> recordEvents
    java.util.List recordEvents(org.xml.sax.InputSource) -> recordEvents
    void handleError(java.lang.String,java.lang.Throwable) -> handleError
    org.xmlpull.v1.sax2.Driver buildPullParser() -> buildPullParser
    void startDocument() -> startDocument
    org.xml.sax.Locator getLocator() -> getLocator
    void setDocumentLocator(org.xml.sax.Locator) -> setDocumentLocator
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void characters(char[],int,int) -> characters
    boolean isSpaceOnly(java.lang.String) -> isSpaceOnly
    ch.qos.logback.core.joran.event.SaxEvent getLastEvent() -> getLastEvent
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    java.lang.String getTagName(java.lang.String,java.lang.String) -> getTagName
    void error(org.xml.sax.SAXParseException) -> error
    void fatalError(org.xml.sax.SAXParseException) -> fatalError
    void warning(org.xml.sax.SAXParseException) -> warning
    void addError(java.lang.String) -> addError
    void addError(java.lang.String,java.lang.Throwable) -> addError
    void addInfo(java.lang.String) -> addInfo
    void addInfo(java.lang.String,java.lang.Throwable) -> addInfo
    void addStatus(ch.qos.logback.core.status.Status) -> addStatus
    void addWarn(java.lang.String) -> addWarn
    void addWarn(java.lang.String,java.lang.Throwable) -> addWarn
    ch.qos.logback.core.Context getContext() -> getContext
    void setContext(ch.qos.logback.core.Context) -> setContext
    java.util.List getSaxEventList() -> getSaxEventList
ch.qos.logback.core.joran.event.StartEvent -> ch.qos.logback.core.joran.event.StartEvent:
    org.xml.sax.Attributes attributes -> attributes
    ch.qos.logback.core.joran.spi.ElementPath elementPath -> elementPath
    org.xml.sax.Attributes getAttributes() -> getAttributes
    java.lang.String toString() -> toString
ch.qos.logback.core.joran.node.ComponentNode -> ch.qos.logback.core.joran.node.ComponentNode:
    java.lang.String classStr -> classStr
ch.qos.logback.core.joran.spi.ActionException -> ch.qos.logback.core.joran.spi.ActionException:
    long serialVersionUID -> serialVersionUID
ch.qos.logback.core.joran.spi.CAI_WithLocatorSupport -> ch.qos.logback.core.joran.spi.a:
    java.lang.Object getOrigin() -> getOrigin
ch.qos.logback.core.joran.spi.ConfigurationWatchList -> ch.qos.logback.core.joran.spi.ConfigurationWatchList:
    java.net.URL mainURL -> mainURL
    java.util.List fileWatchList -> fileWatchList
    java.util.List lastModifiedList -> lastModifiedList
    void clear() -> clear
    void setMainURL(java.net.URL) -> setMainURL
    void addAsFileToWatch(java.net.URL) -> addAsFileToWatch
    void addToWatchList(java.net.URL) -> addToWatchList
    java.net.URL getMainURL() -> getMainURL
    java.util.List getCopyOfFileWatchList() -> getCopyOfFileWatchList
    boolean changeDetected() -> changeDetected
    java.io.File convertToFile(java.net.URL) -> convertToFile
ch.qos.logback.core.joran.spi.ConsoleTarget -> ch.qos.logback.core.joran.spi.ConsoleTarget:
    ch.qos.logback.core.joran.spi.ConsoleTarget SystemOut -> SystemOut
    ch.qos.logback.core.joran.spi.ConsoleTarget SystemErr -> SystemErr
    java.lang.String name -> name
    java.io.OutputStream stream -> stream
    ch.qos.logback.core.joran.spi.ConsoleTarget[] $VALUES -> $VALUES
    ch.qos.logback.core.joran.spi.ConsoleTarget[] values() -> values
    ch.qos.logback.core.joran.spi.ConsoleTarget valueOf(java.lang.String) -> valueOf
    ch.qos.logback.core.joran.spi.ConsoleTarget findByName(java.lang.String) -> findByName
    java.lang.String getName() -> getName
    java.io.OutputStream getStream() -> getStream
ch.qos.logback.core.joran.spi.ConsoleTarget$1 -> ch.qos.logback.core.joran.spi.b:
    void write(int) -> write
    void write(byte[]) -> write
    void write(byte[],int,int) -> write
    void flush() -> flush
ch.qos.logback.core.joran.spi.ConsoleTarget$2 -> ch.qos.logback.core.joran.spi.c:
    void write(int) -> write
    void write(byte[]) -> write
    void write(byte[],int,int) -> write
    void flush() -> flush
ch.qos.logback.core.joran.spi.DefaultClass -> ch.qos.logback.core.joran.spi.DefaultClass:
    java.lang.Class value() -> value
ch.qos.logback.core.joran.spi.DefaultNestedComponentRegistry -> ch.qos.logback.core.joran.spi.DefaultNestedComponentRegistry:
    java.util.Map defaultComponentMap -> defaultComponentMap
    void add(java.lang.Class,java.lang.String,java.lang.Class) -> add
    java.lang.Class findDefaultComponentType(java.lang.Class,java.lang.String) -> findDefaultComponentType
    java.lang.Class oneShotFind(java.lang.Class,java.lang.String) -> oneShotFind
ch.qos.logback.core.joran.spi.ElementPath -> ch.qos.logback.core.joran.spi.ElementPath:
    java.util.ArrayList partList -> partList
    ch.qos.logback.core.joran.spi.ElementPath duplicate() -> duplicate
    boolean equals(java.lang.Object) -> equals
    boolean equalityCheck(java.lang.String,java.lang.String) -> equalityCheck
    java.util.List getCopyOfPartList() -> getCopyOfPartList
    void push(java.lang.String) -> push
    java.lang.String get(int) -> get
    void pop() -> pop
    java.lang.String peekLast() -> peekLast
    int size() -> size
    java.lang.String toStableString() -> toStableString
    java.lang.String toString() -> toString
ch.qos.logback.core.joran.spi.ElementSelector -> ch.qos.logback.core.joran.spi.ElementSelector:
    boolean fullPathMatch(ch.qos.logback.core.joran.spi.ElementPath) -> fullPathMatch
    int getTailMatchLength(ch.qos.logback.core.joran.spi.ElementPath) -> getTailMatchLength
    boolean isContainedIn(ch.qos.logback.core.joran.spi.ElementPath) -> isContainedIn
    int getPrefixMatchLength(ch.qos.logback.core.joran.spi.ElementPath) -> getPrefixMatchLength
    boolean equalityCheck(java.lang.String,java.lang.String) -> equalityCheck
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
ch.qos.logback.core.joran.spi.EventPlayer -> ch.qos.logback.core.joran.spi.EventPlayer:
    ch.qos.logback.core.joran.spi.Interpreter interpreter -> interpreter
    java.util.List eventList -> eventList
    int currentIndex -> currentIndex
    java.util.List getCopyOfPlayerEventList() -> getCopyOfPlayerEventList
    void play(java.util.List) -> play
    void addEventsDynamically(java.util.List,int) -> addEventsDynamically
ch.qos.logback.core.joran.spi.HostClassAndPropertyDouble -> ch.qos.logback.core.joran.spi.HostClassAndPropertyDouble:
    java.lang.Class hostClass -> hostClass
    java.lang.String propertyName -> propertyName
    java.lang.Class getHostClass() -> getHostClass
    java.lang.String getPropertyName() -> getPropertyName
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
ch.qos.logback.core.joran.spi.InterpretationContext -> ch.qos.logback.core.joran.spi.InterpretationContext:
    java.util.Stack objectStack -> objectStack
    java.util.Map objectMap -> objectMap
    java.util.Map propertiesMap -> propertiesMap
    ch.qos.logback.core.joran.spi.Interpreter joranInterpreter -> joranInterpreter
    java.util.List listenerList -> listenerList
    ch.qos.logback.core.joran.spi.DefaultNestedComponentRegistry defaultNestedComponentRegistry -> defaultNestedComponentRegistry
    ch.qos.logback.core.joran.spi.DefaultNestedComponentRegistry getDefaultNestedComponentRegistry() -> getDefaultNestedComponentRegistry
    java.util.Map getCopyOfPropertyMap() -> getCopyOfPropertyMap
    void setPropertiesMap(java.util.Map) -> setPropertiesMap
    java.lang.String updateLocationInfo(java.lang.String) -> updateLocationInfo
    org.xml.sax.Locator getLocator() -> getLocator
    ch.qos.logback.core.joran.spi.Interpreter getJoranInterpreter() -> getJoranInterpreter
    java.util.Stack getObjectStack() -> getObjectStack
    boolean isEmpty() -> isEmpty
    java.lang.Object peekObject() -> peekObject
    void pushObject(java.lang.Object) -> pushObject
    java.lang.Object popObject() -> popObject
    java.lang.Object getObject(int) -> getObject
    java.util.Map getObjectMap() -> getObjectMap
    void addSubstitutionProperty(java.lang.String,java.lang.String) -> addSubstitutionProperty
    void addSubstitutionProperties(java.util.Properties) -> addSubstitutionProperties
    java.lang.String getProperty(java.lang.String) -> getProperty
    java.lang.String subst(java.lang.String) -> subst
    boolean isListenerListEmpty() -> isListenerListEmpty
    void addInPlayListener(ch.qos.logback.core.joran.event.InPlayListener) -> addInPlayListener
    boolean removeInPlayListener(ch.qos.logback.core.joran.event.InPlayListener) -> removeInPlayListener
    void fireInPlay(ch.qos.logback.core.joran.event.SaxEvent) -> fireInPlay
ch.qos.logback.core.joran.spi.Interpreter -> ch.qos.logback.core.joran.spi.Interpreter:
    java.util.List EMPTY_LIST -> EMPTY_LIST
    ch.qos.logback.core.joran.spi.RuleStore ruleStore -> ruleStore
    ch.qos.logback.core.joran.spi.InterpretationContext interpretationContext -> interpretationContext
    java.util.ArrayList implicitActions -> implicitActions
    ch.qos.logback.core.joran.spi.CAI_WithLocatorSupport cai -> cai
    ch.qos.logback.core.joran.spi.ElementPath elementPath -> elementPath
    org.xml.sax.Locator locator -> locator
    ch.qos.logback.core.joran.spi.EventPlayer eventPlayer -> eventPlayer
    java.util.Stack actionListStack -> actionListStack
    ch.qos.logback.core.joran.spi.ElementPath skip -> skip
    ch.qos.logback.core.joran.spi.EventPlayer getEventPlayer() -> getEventPlayer
    void setInterpretationContextPropertiesMap(java.util.Map) -> setInterpretationContextPropertiesMap
    ch.qos.logback.core.joran.spi.InterpretationContext getExecutionContext() -> getExecutionContext
    ch.qos.logback.core.joran.spi.InterpretationContext getInterpretationContext() -> getInterpretationContext
    void startDocument() -> startDocument
    void startElement(ch.qos.logback.core.joran.event.StartEvent) -> startElement
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void pushEmptyActionList() -> pushEmptyActionList
    void characters(ch.qos.logback.core.joran.event.BodyEvent) -> characters
    void endElement(ch.qos.logback.core.joran.event.EndEvent) -> endElement
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    org.xml.sax.Locator getLocator() -> getLocator
    void setDocumentLocator(org.xml.sax.Locator) -> setDocumentLocator
    java.lang.String getTagName(java.lang.String,java.lang.String) -> getTagName
    void addImplicitAction(ch.qos.logback.core.joran.action.ImplicitAction) -> addImplicitAction
    java.util.List lookupImplicitAction(ch.qos.logback.core.joran.spi.ElementPath,org.xml.sax.Attributes,ch.qos.logback.core.joran.spi.InterpretationContext) -> lookupImplicitAction
    java.util.List getApplicableActionList(ch.qos.logback.core.joran.spi.ElementPath,org.xml.sax.Attributes) -> getApplicableActionList
    void callBeginAction(java.util.List,java.lang.String,org.xml.sax.Attributes) -> callBeginAction
    void callBodyAction(java.util.List,java.lang.String) -> callBodyAction
    void callEndAction(java.util.List,java.lang.String) -> callEndAction
    ch.qos.logback.core.joran.spi.RuleStore getRuleStore() -> getRuleStore
ch.qos.logback.core.joran.spi.JoranException -> ch.qos.logback.core.joran.spi.JoranException:
    long serialVersionUID -> serialVersionUID
ch.qos.logback.core.joran.spi.NoAutoStart -> ch.qos.logback.core.joran.spi.NoAutoStart:
ch.qos.logback.core.joran.spi.NoAutoStartUtil -> ch.qos.logback.core.joran.spi.NoAutoStartUtil:
    boolean notMarkedWithNoAutoStart(java.lang.Object) -> notMarkedWithNoAutoStart
ch.qos.logback.core.joran.spi.RuleStore -> ch.qos.logback.core.joran.spi.RuleStore:
    void addRule(ch.qos.logback.core.joran.spi.ElementSelector,java.lang.String) -> addRule
    void addRule(ch.qos.logback.core.joran.spi.ElementSelector,ch.qos.logback.core.joran.action.Action) -> addRule
    java.util.List matchActions(ch.qos.logback.core.joran.spi.ElementPath) -> matchActions
ch.qos.logback.core.joran.spi.SimpleRuleStore -> ch.qos.logback.core.joran.spi.SimpleRuleStore:
    java.lang.String KLEENE_STAR -> KLEENE_STAR
    java.util.HashMap rules -> rules
    void addRule(ch.qos.logback.core.joran.spi.ElementSelector,ch.qos.logback.core.joran.action.Action) -> addRule
    void addRule(ch.qos.logback.core.joran.spi.ElementSelector,java.lang.String) -> addRule
    java.util.List matchActions(ch.qos.logback.core.joran.spi.ElementPath) -> matchActions
    java.util.List fullPathMatch(ch.qos.logback.core.joran.spi.ElementPath) -> fullPathMatch
    java.util.List suffixMatch(ch.qos.logback.core.joran.spi.ElementPath) -> suffixMatch
    boolean isSuffixPattern(ch.qos.logback.core.joran.spi.ElementSelector) -> isSuffixPattern
    java.util.List prefixMatch(ch.qos.logback.core.joran.spi.ElementPath) -> prefixMatch
    boolean isKleeneStar(java.lang.String) -> isKleeneStar
    java.util.List middleMatch(ch.qos.logback.core.joran.spi.ElementPath) -> middleMatch
    java.lang.String toString() -> toString
ch.qos.logback.core.joran.util.ConfigurationWatchListUtil -> ch.qos.logback.core.joran.util.ConfigurationWatchListUtil:
    ch.qos.logback.core.joran.util.ConfigurationWatchListUtil origin -> origin
    void setMainWatchURL(ch.qos.logback.core.Context,java.net.URL) -> setMainWatchURL
    java.net.URL getMainWatchURL(ch.qos.logback.core.Context) -> getMainWatchURL
    void addToWatchList(ch.qos.logback.core.Context,java.net.URL) -> addToWatchList
    boolean wasConfigurationWatchListReset(ch.qos.logback.core.Context) -> wasConfigurationWatchListReset
    void setConfigurationWatchListResetFlag(ch.qos.logback.core.Context,boolean) -> setConfigurationWatchListResetFlag
    ch.qos.logback.core.joran.spi.ConfigurationWatchList getConfigurationWatchList(ch.qos.logback.core.Context) -> getConfigurationWatchList
    void addStatus(ch.qos.logback.core.Context,ch.qos.logback.core.status.Status) -> addStatus
    void addInfo(ch.qos.logback.core.Context,java.lang.String) -> addInfo
    void addWarn(ch.qos.logback.core.Context,java.lang.String) -> addWarn
ch.qos.logback.core.joran.util.IntrospectionException -> ch.qos.logback.core.joran.util.IntrospectionException:
    long serialVersionUID -> serialVersionUID
ch.qos.logback.core.joran.util.Introspector -> ch.qos.logback.core.joran.util.Introspector:
    java.lang.String decapitalize(java.lang.String) -> decapitalize
    ch.qos.logback.core.joran.util.MethodDescriptor[] getMethodDescriptors(java.lang.Class) -> getMethodDescriptors
    ch.qos.logback.core.joran.util.PropertyDescriptor[] getPropertyDescriptors(java.lang.Class) -> getPropertyDescriptors
ch.qos.logback.core.joran.util.MethodDescriptor -> ch.qos.logback.core.joran.util.MethodDescriptor:
    java.lang.String name -> name
    java.lang.reflect.Method method -> method
    java.lang.String getName() -> getName
    java.lang.reflect.Method getMethod() -> getMethod
ch.qos.logback.core.joran.util.PropertyDescriptor -> ch.qos.logback.core.joran.util.PropertyDescriptor:
    java.lang.reflect.Method writeMethod -> writeMethod
    java.lang.reflect.Method readMethod -> readMethod
    java.lang.String name -> name
    java.lang.Class type -> type
    java.lang.String getName() -> getName
    java.lang.reflect.Method getWriteMethod() -> getWriteMethod
    void setWriteMethod(java.lang.reflect.Method) -> setWriteMethod
    java.lang.reflect.Method getReadMethod() -> getReadMethod
    void setReadMethod(java.lang.reflect.Method) -> setReadMethod
    java.lang.Class getPropertyType() -> getPropertyType
    void setPropertyType(java.lang.Class) -> setPropertyType
ch.qos.logback.core.joran.util.PropertySetter -> ch.qos.logback.core.joran.util.PropertySetter:
    java.lang.Object obj -> obj
    java.lang.Class objClass -> objClass
    ch.qos.logback.core.joran.util.PropertyDescriptor[] propertyDescriptors -> propertyDescriptors
    ch.qos.logback.core.joran.util.MethodDescriptor[] methodDescriptors -> methodDescriptors
    void introspect() -> introspect
    void setProperty(java.lang.String,java.lang.String) -> setProperty
    void setProperty(ch.qos.logback.core.joran.util.PropertyDescriptor,java.lang.String,java.lang.String) -> setProperty
    ch.qos.logback.core.util.AggregationType computeAggregationType(java.lang.String) -> computeAggregationType
    java.lang.reflect.Method findAdderMethod(java.lang.String) -> findAdderMethod
    java.lang.reflect.Method findSetterMethod(java.lang.String) -> findSetterMethod
    java.lang.Class getParameterClassForMethod(java.lang.reflect.Method) -> getParameterClassForMethod
    ch.qos.logback.core.util.AggregationType computeRawAggregationType(java.lang.reflect.Method) -> computeRawAggregationType
    boolean isUnequivocallyInstantiable(java.lang.Class) -> isUnequivocallyInstantiable
    java.lang.Class getObjClass() -> getObjClass
    void addComplexProperty(java.lang.String,java.lang.Object) -> addComplexProperty
    void invokeMethodWithSingleParameterOnThisObject(java.lang.reflect.Method,java.lang.Object) -> invokeMethodWithSingleParameterOnThisObject
    void addBasicProperty(java.lang.String,java.lang.String) -> addBasicProperty
    void setComplexProperty(java.lang.String,java.lang.Object) -> setComplexProperty
    boolean isSanityCheckSuccessful(java.lang.String,java.lang.reflect.Method,java.lang.Class[],java.lang.Object) -> isSanityCheckSuccessful
    java.lang.String capitalizeFirstLetter(java.lang.String) -> capitalizeFirstLetter
    java.lang.reflect.Method getMethod(java.lang.String) -> getMethod
    ch.qos.logback.core.joran.util.PropertyDescriptor getPropertyDescriptor(java.lang.String) -> getPropertyDescriptor
    java.lang.Object getObj() -> getObj
    java.lang.reflect.Method getRelevantMethod(java.lang.String,ch.qos.logback.core.util.AggregationType) -> getRelevantMethod
    java.lang.annotation.Annotation getAnnotation(java.lang.String,java.lang.Class,java.lang.reflect.Method) -> getAnnotation
    java.lang.Class getDefaultClassNameByAnnonation(java.lang.String,java.lang.reflect.Method) -> getDefaultClassNameByAnnonation
    java.lang.Class getByConcreteType(java.lang.String,java.lang.reflect.Method) -> getByConcreteType
    java.lang.Class getClassNameViaImplicitRules(java.lang.String,ch.qos.logback.core.util.AggregationType,ch.qos.logback.core.joran.spi.DefaultNestedComponentRegistry) -> getClassNameViaImplicitRules
ch.qos.logback.core.joran.util.PropertySetter$1 -> ch.qos.logback.core.joran.util.a:
    int[] $SwitchMap$ch$qos$logback$core$util$AggregationType -> a
ch.qos.logback.core.joran.util.StringToObjectConverter -> ch.qos.logback.core.joran.util.StringToObjectConverter:
    java.lang.Class[] STING_CLASS_PARAMETER -> STING_CLASS_PARAMETER
    boolean canBeBuiltFromSimpleString(java.lang.Class) -> canBeBuiltFromSimpleString
    java.lang.Object convertArg(ch.qos.logback.core.spi.ContextAware,java.lang.String,java.lang.Class) -> convertArg
    boolean isOfTypeCharset(java.lang.Class) -> isOfTypeCharset
    java.nio.charset.Charset convertToCharset(ch.qos.logback.core.spi.ContextAware,java.lang.String) -> convertToCharset
    boolean followsTheValueOfConvention(java.lang.Class) -> followsTheValueOfConvention
    java.lang.Object convertByValueOfMethod(ch.qos.logback.core.spi.ContextAware,java.lang.Class,java.lang.String) -> convertByValueOfMethod
    java.lang.Object convertToEnum(ch.qos.logback.core.spi.ContextAware,java.lang.String,java.lang.Class) -> convertToEnum
    boolean isBuildableFromSimpleString() -> isBuildableFromSimpleString
ch.qos.logback.core.net.AbstractSSLSocketAppender -> ch.qos.logback.core.net.AbstractSSLSocketAppender:
    ch.qos.logback.core.net.ssl.SSLConfiguration ssl -> ssl
    javax.net.SocketFactory socketFactory -> socketFactory
    javax.net.SocketFactory getSocketFactory() -> getSocketFactory
    void start() -> start
    ch.qos.logback.core.net.ssl.SSLConfiguration getSsl() -> getSsl
    void setSsl(ch.qos.logback.core.net.ssl.SSLConfiguration) -> setSsl
ch.qos.logback.core.net.AbstractSocketAppender -> ch.qos.logback.core.net.AbstractSocketAppender:
    int DEFAULT_PORT -> DEFAULT_PORT
    int DEFAULT_RECONNECTION_DELAY -> DEFAULT_RECONNECTION_DELAY
    int DEFAULT_QUEUE_SIZE -> DEFAULT_QUEUE_SIZE
    int DEFAULT_ACCEPT_CONNECTION_DELAY -> DEFAULT_ACCEPT_CONNECTION_DELAY
    int DEFAULT_EVENT_DELAY_TIMEOUT -> DEFAULT_EVENT_DELAY_TIMEOUT
    java.lang.String remoteHost -> remoteHost
    int port -> port
    java.net.InetAddress address -> address
    ch.qos.logback.core.util.Duration reconnectionDelay -> reconnectionDelay
    int queueSize -> queueSize
    int acceptConnectionTimeout -> acceptConnectionTimeout
    ch.qos.logback.core.util.Duration eventDelayLimit -> eventDelayLimit
    java.util.concurrent.BlockingQueue queue -> queue
    java.lang.String peerId -> peerId
    java.util.concurrent.Future task -> task
    java.util.concurrent.Future connectorTask -> connectorTask
    java.net.Socket socket -> socket
    void start() -> start
    void stop() -> stop
    void append(java.lang.Object) -> append
    void run() -> run
    void signalEntryInRunMethod() -> signalEntryInRunMethod
    ch.qos.logback.core.net.SocketConnector createConnector(java.net.InetAddress,int,int,long) -> createConnector
    java.util.concurrent.Future activateConnector(ch.qos.logback.core.net.SocketConnector) -> activateConnector
    java.net.Socket waitForConnectorToReturnASocket() -> waitForConnectorToReturnASocket
    void dispatchEvents() -> dispatchEvents
    void connectionFailed(ch.qos.logback.core.net.SocketConnector,java.lang.Exception) -> connectionFailed
    ch.qos.logback.core.net.SocketConnector newConnector(java.net.InetAddress,int,long,long) -> newConnector
    javax.net.SocketFactory getSocketFactory() -> getSocketFactory
    java.util.concurrent.BlockingQueue newBlockingQueue(int) -> newBlockingQueue
    void postProcessEvent(java.lang.Object) -> postProcessEvent
    ch.qos.logback.core.spi.PreSerializationTransformer getPST() -> getPST
    java.net.InetAddress getAddressByName(java.lang.String) -> getAddressByName
    void setRemoteHost(java.lang.String) -> setRemoteHost
    java.lang.String getRemoteHost() -> getRemoteHost
    void setPort(int) -> setPort
    int getPort() -> getPort
    void setReconnectionDelay(ch.qos.logback.core.util.Duration) -> setReconnectionDelay
    ch.qos.logback.core.util.Duration getReconnectionDelay() -> getReconnectionDelay
    void setQueueSize(int) -> setQueueSize
    int getQueueSize() -> getQueueSize
    void setEventDelayLimit(ch.qos.logback.core.util.Duration) -> setEventDelayLimit
    ch.qos.logback.core.util.Duration getEventDelayLimit() -> getEventDelayLimit
    void setAcceptConnectionTimeout(int) -> setAcceptConnectionTimeout
ch.qos.logback.core.net.DefaultSocketConnector -> ch.qos.logback.core.net.DefaultSocketConnector:
    java.net.InetAddress address -> address
    int port -> port
    ch.qos.logback.core.util.DelayStrategy delayStrategy -> delayStrategy
    ch.qos.logback.core.net.SocketConnector$ExceptionHandler exceptionHandler -> exceptionHandler
    javax.net.SocketFactory socketFactory -> socketFactory
    java.net.Socket call() -> call
    java.net.Socket createSocket() -> createSocket
    void useDefaultsForMissingFields() -> useDefaultsForMissingFields
    void setExceptionHandler(ch.qos.logback.core.net.SocketConnector$ExceptionHandler) -> setExceptionHandler
    void setSocketFactory(javax.net.SocketFactory) -> setSocketFactory
    java.lang.Object call() -> call
ch.qos.logback.core.net.DefaultSocketConnector$1 -> ch.qos.logback.core.net.a:
ch.qos.logback.core.net.DefaultSocketConnector$ConsoleExceptionHandler -> ch.qos.logback.core.net.b:
    void connectionFailed(ch.qos.logback.core.net.SocketConnector,java.lang.Exception) -> connectionFailed
ch.qos.logback.core.net.LoginAuthenticator -> ch.qos.logback.core.net.LoginAuthenticator:
    java.lang.String username -> username
    java.lang.String password -> password
    javax.mail.PasswordAuthentication getPasswordAuthentication() -> getPasswordAuthentication
ch.qos.logback.core.net.SMTPAppenderBase -> ch.qos.logback.core.net.SMTPAppenderBase:
    javax.mail.internet.InternetAddress[] EMPTY_IA_ARRAY -> EMPTY_IA_ARRAY
    int MAX_DELAY_BETWEEN_STATUS_MESSAGES -> MAX_DELAY_BETWEEN_STATUS_MESSAGES
    long lastTrackerStatusPrint -> lastTrackerStatusPrint
    int delayBetweenStatusMessages -> delayBetweenStatusMessages
    ch.qos.logback.core.Layout subjectLayout -> subjectLayout
    ch.qos.logback.core.Layout layout -> layout
    java.util.List toPatternLayoutList -> toPatternLayoutList
    java.lang.String from -> from
    java.lang.String subjectStr -> subjectStr
    java.lang.String smtpHost -> smtpHost
    int smtpPort -> smtpPort
    boolean starttls -> starttls
    boolean ssl -> ssl
    java.lang.String username -> username
    java.lang.String password -> password
    java.lang.String localhost -> localhost
    boolean asynchronousSending -> asynchronousSending
    java.lang.String charsetEncoding -> charsetEncoding
    javax.mail.internet.MimeMessage mimeMsg -> mimeMsg
    ch.qos.logback.core.boolex.EventEvaluator eventEvaluator -> eventEvaluator
    ch.qos.logback.core.sift.Discriminator discriminator -> discriminator
    ch.qos.logback.core.spi.CyclicBufferTracker cbTracker -> cbTracker
    int errorCount -> errorCount
    ch.qos.logback.core.Layout makeSubjectLayout(java.lang.String) -> makeSubjectLayout
    void start() -> start
    javax.mail.Session buildSessionFromProperties() -> buildSessionFromProperties
    void append(java.lang.Object) -> append
    boolean eventMarksEndOfLife(java.lang.Object) -> eventMarksEndOfLife
    void subAppend(ch.qos.logback.core.helpers.CyclicBuffer,java.lang.Object) -> subAppend
    boolean checkEntryConditions() -> checkEntryConditions
    void stop() -> stop
    javax.mail.internet.InternetAddress getAddress(java.lang.String) -> getAddress
    java.util.List parseAddress(java.lang.Object) -> parseAddress
    java.util.List getToList() -> getToList
    void sendBuffer(ch.qos.logback.core.helpers.CyclicBuffer,java.lang.Object) -> sendBuffer
    void fillBuffer(ch.qos.logback.core.helpers.CyclicBuffer,java.lang.StringBuffer) -> fillBuffer
    java.lang.String getFrom() -> getFrom
    java.lang.String getSubject() -> getSubject
    void setFrom(java.lang.String) -> setFrom
    void setSubject(java.lang.String) -> setSubject
    void setSMTPHost(java.lang.String) -> setSMTPHost
    void setSmtpHost(java.lang.String) -> setSmtpHost
    java.lang.String getSMTPHost() -> getSMTPHost
    java.lang.String getSmtpHost() -> getSmtpHost
    void setSMTPPort(int) -> setSMTPPort
    void setSmtpPort(int) -> setSmtpPort
    int getSMTPPort() -> getSMTPPort
    int getSmtpPort() -> getSmtpPort
    java.lang.String getLocalhost() -> getLocalhost
    void setLocalhost(java.lang.String) -> setLocalhost
    ch.qos.logback.core.spi.CyclicBufferTracker getCyclicBufferTracker() -> getCyclicBufferTracker
    void setCyclicBufferTracker(ch.qos.logback.core.spi.CyclicBufferTracker) -> setCyclicBufferTracker
    ch.qos.logback.core.sift.Discriminator getDiscriminator() -> getDiscriminator
    void setDiscriminator(ch.qos.logback.core.sift.Discriminator) -> setDiscriminator
    boolean isAsynchronousSending() -> isAsynchronousSending
    void setAsynchronousSending(boolean) -> setAsynchronousSending
    void addTo(java.lang.String) -> addTo
    ch.qos.logback.core.pattern.PatternLayoutBase makeNewToPatternLayout(java.lang.String) -> makeNewToPatternLayout
    java.util.List getToAsListOfString() -> getToAsListOfString
    javax.mail.Message getMessage() -> getMessage
    void setMessage(javax.mail.internet.MimeMessage) -> setMessage
    boolean isSTARTTLS() -> isSTARTTLS
    void setSTARTTLS(boolean) -> setSTARTTLS
    boolean isSSL() -> isSSL
    void setSSL(boolean) -> setSSL
    void setEvaluator(ch.qos.logback.core.boolex.EventEvaluator) -> setEvaluator
    java.lang.String getUsername() -> getUsername
    void setUsername(java.lang.String) -> setUsername
    java.lang.String getPassword() -> getPassword
    void setPassword(java.lang.String) -> setPassword
    java.lang.String getCharsetEncoding() -> getCharsetEncoding
    void setCharsetEncoding(java.lang.String) -> setCharsetEncoding
    ch.qos.logback.core.Layout getLayout() -> getLayout
    void setLayout(ch.qos.logback.core.Layout) -> setLayout
ch.qos.logback.core.net.SMTPAppenderBase$SenderRunnable -> ch.qos.logback.core.net.c:
    ch.qos.logback.core.helpers.CyclicBuffer cyclicBuffer -> a
    java.lang.Object e -> b
    ch.qos.logback.core.net.SMTPAppenderBase this$0 -> c
    void run() -> run
ch.qos.logback.core.net.SSLSocketAppenderBase -> ch.qos.logback.core.net.SSLSocketAppenderBase:
    ch.qos.logback.core.net.ssl.SSLConfiguration ssl -> ssl
    javax.net.SocketFactory socketFactory -> socketFactory
    javax.net.SocketFactory getSocketFactory() -> getSocketFactory
    void start() -> start
    ch.qos.logback.core.net.ssl.SSLConfiguration getSsl() -> getSsl
    void setSsl(ch.qos.logback.core.net.ssl.SSLConfiguration) -> setSsl
ch.qos.logback.core.net.SocketConnector -> ch.qos.logback.core.net.SocketConnector:
    java.net.Socket call() -> call
    void setExceptionHandler(ch.qos.logback.core.net.SocketConnector$ExceptionHandler) -> setExceptionHandler
    void setSocketFactory(javax.net.SocketFactory) -> setSocketFactory
ch.qos.logback.core.net.SocketConnector$ExceptionHandler -> ch.qos.logback.core.net.SocketConnector$ExceptionHandler:
    void connectionFailed(ch.qos.logback.core.net.SocketConnector,java.lang.Exception) -> connectionFailed
ch.qos.logback.core.net.SocketConnectorBase -> ch.qos.logback.core.net.SocketConnectorBase:
    java.util.concurrent.locks.Lock lock -> lock
    java.util.concurrent.locks.Condition connectCondition -> connectCondition
    java.net.InetAddress address -> address
    int port -> port
    ch.qos.logback.core.net.SocketConnector$ExceptionHandler exceptionHandler -> exceptionHandler
    javax.net.SocketFactory socketFactory -> socketFactory
    ch.qos.logback.core.net.SocketConnectorBase$DelayStrategy delayStrategy -> delayStrategy
    java.net.Socket socket -> socket
    void run() -> run
    void signalConnected() -> signalConnected
    java.net.Socket awaitConnection() -> awaitConnection
    java.net.Socket awaitConnection(long) -> awaitConnection
    void setExceptionHandler(ch.qos.logback.core.net.SocketConnector$ExceptionHandler) -> setExceptionHandler
    void setSocketFactory(javax.net.SocketFactory) -> setSocketFactory
    java.net.Socket call() -> call
    java.lang.Object call() -> call
ch.qos.logback.core.net.SocketConnectorBase$1 -> ch.qos.logback.core.net.d:
ch.qos.logback.core.net.SocketConnectorBase$ConsoleExceptionHandler -> ch.qos.logback.core.net.e:
    void connectionFailed(ch.qos.logback.core.net.SocketConnector,java.lang.Exception) -> connectionFailed
ch.qos.logback.core.net.SocketConnectorBase$DelayStrategy -> ch.qos.logback.core.net.SocketConnectorBase$DelayStrategy:
    int nextDelay() -> nextDelay
ch.qos.logback.core.net.SocketConnectorBase$FixedDelay -> ch.qos.logback.core.net.f:
    int retryDelay -> a
    int nextDelay -> b
    int nextDelay() -> nextDelay
ch.qos.logback.core.net.SyslogAppenderBase -> ch.qos.logback.core.net.SyslogAppenderBase:
    java.lang.String SYSLOG_LAYOUT_URL -> SYSLOG_LAYOUT_URL
    int MAX_MESSAGE_SIZE_LIMIT -> MAX_MESSAGE_SIZE_LIMIT
    ch.qos.logback.core.Layout layout -> layout
    java.lang.String facilityStr -> facilityStr
    java.lang.String syslogHost -> syslogHost
    java.lang.String suffixPattern -> suffixPattern
    ch.qos.logback.core.net.SyslogOutputStream sos -> sos
    int port -> port
    boolean initialized -> initialized
    boolean lazyInit -> lazyInit
    int maxMessageSize -> maxMessageSize
    void start() -> start
    ch.qos.logback.core.Layout buildLayout() -> buildLayout
    int getSeverityForEvent(java.lang.Object) -> getSeverityForEvent
    boolean connect() -> connect
    void append(java.lang.Object) -> append
    void postProcess(java.lang.Object,java.io.OutputStream) -> postProcess
    int facilityStringToint(java.lang.String) -> facilityStringToint
    java.lang.String getSyslogHost() -> getSyslogHost
    void setSyslogHost(java.lang.String) -> setSyslogHost
    java.lang.String getFacility() -> getFacility
    void setFacility(java.lang.String) -> setFacility
    int getPort() -> getPort
    void setPort(int) -> setPort
    int getMaxMessageSize() -> getMaxMessageSize
    void setMaxMessageSize(int) -> setMaxMessageSize
    ch.qos.logback.core.Layout getLayout() -> getLayout
    void setLayout(ch.qos.logback.core.Layout) -> setLayout
    boolean getLazy() -> getLazy
    void setLazy(boolean) -> setLazy
    void stop() -> stop
    java.lang.String getSuffixPattern() -> getSuffixPattern
    void setSuffixPattern(java.lang.String) -> setSuffixPattern
ch.qos.logback.core.net.SyslogConstants -> ch.qos.logback.core.net.SyslogConstants:
    int SYSLOG_PORT -> SYSLOG_PORT
    int EMERGENCY_SEVERITY -> EMERGENCY_SEVERITY
    int ALERT_SEVERITY -> ALERT_SEVERITY
    int CRITICAL_SEVERITY -> CRITICAL_SEVERITY
    int ERROR_SEVERITY -> ERROR_SEVERITY
    int WARNING_SEVERITY -> WARNING_SEVERITY
    int NOTICE_SEVERITY -> NOTICE_SEVERITY
    int INFO_SEVERITY -> INFO_SEVERITY
    int DEBUG_SEVERITY -> DEBUG_SEVERITY
    int LOG_KERN -> LOG_KERN
    int LOG_USER -> LOG_USER
    int LOG_MAIL -> LOG_MAIL
    int LOG_DAEMON -> LOG_DAEMON
    int LOG_AUTH -> LOG_AUTH
    int LOG_SYSLOG -> LOG_SYSLOG
    int LOG_LPR -> LOG_LPR
    int LOG_NEWS -> LOG_NEWS
    int LOG_UUCP -> LOG_UUCP
    int LOG_CRON -> LOG_CRON
    int LOG_AUTHPRIV -> LOG_AUTHPRIV
    int LOG_FTP -> LOG_FTP
    int LOG_NTP -> LOG_NTP
    int LOG_AUDIT -> LOG_AUDIT
    int LOG_ALERT -> LOG_ALERT
    int LOG_CLOCK -> LOG_CLOCK
    int LOG_LOCAL0 -> LOG_LOCAL0
    int LOG_LOCAL1 -> LOG_LOCAL1
    int LOG_LOCAL2 -> LOG_LOCAL2
    int LOG_LOCAL3 -> LOG_LOCAL3
    int LOG_LOCAL4 -> LOG_LOCAL4
    int LOG_LOCAL5 -> LOG_LOCAL5
    int LOG_LOCAL6 -> LOG_LOCAL6
    int LOG_LOCAL7 -> LOG_LOCAL7
ch.qos.logback.core.net.SyslogOutputStream -> ch.qos.logback.core.net.SyslogOutputStream:
    int MAX_LEN -> MAX_LEN
    java.net.InetAddress address -> address
    java.net.DatagramSocket ds -> ds
    java.io.ByteArrayOutputStream baos -> baos
    int port -> port
    void write(byte[],int,int) -> write
    void flush() -> flush
    void close() -> close
    int getPort() -> getPort
    void write(int) -> write
    int getSendBufferSize() -> getSendBufferSize
ch.qos.logback.core.net.server.AbstractServerSocketAppender -> ch.qos.logback.core.net.server.AbstractServerSocketAppender:
    int DEFAULT_BACKLOG -> DEFAULT_BACKLOG
    int DEFAULT_CLIENT_QUEUE_SIZE -> DEFAULT_CLIENT_QUEUE_SIZE
    int port -> port
    int backlog -> backlog
    int clientQueueSize -> clientQueueSize
    java.lang.String address -> address
    ch.qos.logback.core.net.server.ServerRunner runner -> runner
    void start() -> start
    ch.qos.logback.core.net.server.ServerListener createServerListener(java.net.ServerSocket) -> createServerListener
    ch.qos.logback.core.net.server.ServerRunner createServerRunner(ch.qos.logback.core.net.server.ServerListener,java.util.concurrent.Executor) -> createServerRunner
    void stop() -> stop
    void append(java.lang.Object) -> append
    void postProcessEvent(java.lang.Object) -> postProcessEvent
    ch.qos.logback.core.spi.PreSerializationTransformer getPST() -> getPST
    javax.net.ServerSocketFactory getServerSocketFactory() -> getServerSocketFactory
    java.net.InetAddress getInetAddress() -> getInetAddress
    int getPort() -> getPort
    void setPort(int) -> setPort
    int getBacklog() -> getBacklog
    void setBacklog(int) -> setBacklog
    java.lang.String getAddress() -> getAddress
    void setAddress(java.lang.String) -> setAddress
    int getClientQueueSize() -> getClientQueueSize
    void setClientQueueSize(int) -> setClientQueueSize
ch.qos.logback.core.net.server.AbstractServerSocketAppender$1 -> ch.qos.logback.core.net.server.a:
    java.io.Serializable val$serEvent -> a
    ch.qos.logback.core.net.server.AbstractServerSocketAppender this$0 -> b
    void visit(ch.qos.logback.core.net.server.RemoteReceiverClient) -> a
    void visit(ch.qos.logback.core.net.server.Client) -> visit
ch.qos.logback.core.net.server.Client -> ch.qos.logback.core.net.server.Client:
    void close() -> close
ch.qos.logback.core.net.server.ClientVisitor -> ch.qos.logback.core.net.server.ClientVisitor:
    void visit(ch.qos.logback.core.net.server.Client) -> visit
ch.qos.logback.core.net.server.ConcurrentServerRunner -> ch.qos.logback.core.net.server.ConcurrentServerRunner:
    java.util.concurrent.locks.Lock clientsLock -> clientsLock
    java.util.Collection clients -> clients
    ch.qos.logback.core.net.server.ServerListener listener -> listener
    java.util.concurrent.Executor executor -> executor
    boolean running -> running
    boolean isRunning() -> isRunning
    void setRunning(boolean) -> setRunning
    void stop() -> stop
    void accept(ch.qos.logback.core.net.server.ClientVisitor) -> accept
    java.util.Collection copyClients() -> copyClients
    void run() -> run
    boolean configureClient(ch.qos.logback.core.net.server.Client) -> configureClient
    void addClient(ch.qos.logback.core.net.server.Client) -> addClient
    void removeClient(ch.qos.logback.core.net.server.Client) -> removeClient
    void access$000(ch.qos.logback.core.net.server.ConcurrentServerRunner,ch.qos.logback.core.net.server.Client) -> access$000
    void access$100(ch.qos.logback.core.net.server.ConcurrentServerRunner,ch.qos.logback.core.net.server.Client) -> access$100
ch.qos.logback.core.net.server.ConcurrentServerRunner$1 -> ch.qos.logback.core.net.server.b:
    ch.qos.logback.core.net.server.ConcurrentServerRunner this$0 -> a
    void visit(ch.qos.logback.core.net.server.Client) -> visit
ch.qos.logback.core.net.server.ConcurrentServerRunner$ClientWrapper -> ch.qos.logback.core.net.server.c:
    ch.qos.logback.core.net.server.Client delegate -> b
    ch.qos.logback.core.net.server.ConcurrentServerRunner this$0 -> a
    void run() -> run
    void close() -> close
ch.qos.logback.core.net.server.RemoteReceiverClient -> ch.qos.logback.core.net.server.d:
    void setQueue(java.util.concurrent.BlockingQueue) -> a
    boolean offer(java.io.Serializable) -> a
ch.qos.logback.core.net.server.RemoteReceiverServerListener -> ch.qos.logback.core.net.server.e:
    ch.qos.logback.core.net.server.RemoteReceiverClient createClient(java.lang.String,java.net.Socket) -> a
    ch.qos.logback.core.net.server.Client createClient(java.lang.String,java.net.Socket) -> createClient
ch.qos.logback.core.net.server.RemoteReceiverServerRunner -> ch.qos.logback.core.net.server.f:
    int clientQueueSize -> a
    boolean configureClient(ch.qos.logback.core.net.server.RemoteReceiverClient) -> a
    boolean configureClient(ch.qos.logback.core.net.server.Client) -> configureClient
ch.qos.logback.core.net.server.RemoteReceiverStreamClient -> ch.qos.logback.core.net.server.g:
    java.lang.String clientId -> a
    java.net.Socket socket -> b
    java.io.OutputStream outputStream -> c
    java.util.concurrent.BlockingQueue queue -> d
    void setQueue(java.util.concurrent.BlockingQueue) -> a
    boolean offer(java.io.Serializable) -> a
    void close() -> close
    void run() -> run
    java.io.ObjectOutputStream createObjectOutputStream() -> a
ch.qos.logback.core.net.server.SSLServerSocketAppenderBase -> ch.qos.logback.core.net.server.SSLServerSocketAppenderBase:
    ch.qos.logback.core.net.ssl.SSLConfiguration ssl -> ssl
    javax.net.ServerSocketFactory socketFactory -> socketFactory
    javax.net.ServerSocketFactory getServerSocketFactory() -> getServerSocketFactory
    void start() -> start
    ch.qos.logback.core.net.ssl.SSLConfiguration getSsl() -> getSsl
    void setSsl(ch.qos.logback.core.net.ssl.SSLConfiguration) -> setSsl
ch.qos.logback.core.net.server.ServerListener -> ch.qos.logback.core.net.server.ServerListener:
    ch.qos.logback.core.net.server.Client acceptClient() -> acceptClient
    void close() -> close
ch.qos.logback.core.net.server.ServerRunner -> ch.qos.logback.core.net.server.ServerRunner:
    boolean isRunning() -> isRunning
    void stop() -> stop
    void accept(ch.qos.logback.core.net.server.ClientVisitor) -> accept
ch.qos.logback.core.net.server.ServerSocketAppenderBase -> ch.qos.logback.core.net.server.ServerSocketAppenderBase:
    int DEFAULT_BACKLOG -> DEFAULT_BACKLOG
    int DEFAULT_CLIENT_QUEUE_SIZE -> DEFAULT_CLIENT_QUEUE_SIZE
    int port -> port
    int backlog -> backlog
    int clientQueueSize -> clientQueueSize
    java.lang.String address -> address
    ch.qos.logback.core.net.server.ServerRunner runner -> runner
    void start() -> start
    ch.qos.logback.core.net.server.ServerListener createServerListener(java.net.ServerSocket) -> createServerListener
    ch.qos.logback.core.net.server.ServerRunner createServerRunner(ch.qos.logback.core.net.server.ServerListener,java.util.concurrent.Executor) -> createServerRunner
    void stop() -> stop
    void append(java.lang.Object) -> append
    void postProcessEvent(java.lang.Object) -> postProcessEvent
    ch.qos.logback.core.spi.PreSerializationTransformer getPST() -> getPST
    javax.net.ServerSocketFactory getServerSocketFactory() -> getServerSocketFactory
    java.net.InetAddress getInetAddress() -> getInetAddress
    int getPort() -> getPort
    void setPort(int) -> setPort
    java.lang.Integer getBacklog() -> getBacklog
    void setBacklog(java.lang.Integer) -> setBacklog
    java.lang.String getAddress() -> getAddress
    void setAddress(java.lang.String) -> setAddress
    int getClientQueueSize() -> getClientQueueSize
    void setClientQueueSize(int) -> setClientQueueSize
ch.qos.logback.core.net.server.ServerSocketAppenderBase$1 -> ch.qos.logback.core.net.server.h:
    java.io.Serializable val$serEvent -> a
    ch.qos.logback.core.net.server.ServerSocketAppenderBase this$0 -> b
    void visit(ch.qos.logback.core.net.server.RemoteReceiverClient) -> a
    void visit(ch.qos.logback.core.net.server.Client) -> visit
ch.qos.logback.core.net.server.ServerSocketListener -> ch.qos.logback.core.net.server.ServerSocketListener:
    java.net.ServerSocket serverSocket -> serverSocket
    ch.qos.logback.core.net.server.Client acceptClient() -> acceptClient
    ch.qos.logback.core.net.server.Client createClient(java.lang.String,java.net.Socket) -> createClient
    void close() -> close
    java.lang.String toString() -> toString
    java.lang.String socketAddressToString(java.net.SocketAddress) -> socketAddressToString
ch.qos.logback.core.net.ssl.ConfigurableSSLServerSocketFactory -> ch.qos.logback.core.net.ssl.ConfigurableSSLServerSocketFactory:
    ch.qos.logback.core.net.ssl.SSLParametersConfiguration parameters -> parameters
    javax.net.ssl.SSLServerSocketFactory delegate -> delegate
    java.net.ServerSocket createServerSocket(int,int,java.net.InetAddress) -> createServerSocket
    java.net.ServerSocket createServerSocket(int,int) -> createServerSocket
    java.net.ServerSocket createServerSocket(int) -> createServerSocket
ch.qos.logback.core.net.ssl.ConfigurableSSLSocketFactory -> ch.qos.logback.core.net.ssl.ConfigurableSSLSocketFactory:
    ch.qos.logback.core.net.ssl.SSLParametersConfiguration parameters -> parameters
    javax.net.ssl.SSLSocketFactory delegate -> delegate
    java.net.Socket createSocket(java.net.InetAddress,int,java.net.InetAddress,int) -> createSocket
    java.net.Socket createSocket(java.net.InetAddress,int) -> createSocket
    java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int) -> createSocket
    java.net.Socket createSocket(java.lang.String,int) -> createSocket
ch.qos.logback.core.net.ssl.KeyManagerFactoryFactoryBean -> ch.qos.logback.core.net.ssl.KeyManagerFactoryFactoryBean:
    java.lang.String algorithm -> algorithm
    java.lang.String provider -> provider
    javax.net.ssl.KeyManagerFactory createKeyManagerFactory() -> createKeyManagerFactory
    java.lang.String getAlgorithm() -> getAlgorithm
    void setAlgorithm(java.lang.String) -> setAlgorithm
    java.lang.String getProvider() -> getProvider
    void setProvider(java.lang.String) -> setProvider
ch.qos.logback.core.net.ssl.KeyStoreFactoryBean -> ch.qos.logback.core.net.ssl.KeyStoreFactoryBean:
    java.lang.String location -> location
    java.lang.String provider -> provider
    java.lang.String type -> type
    java.lang.String password -> password
    java.security.KeyStore createKeyStore() -> createKeyStore
    java.security.KeyStore newKeyStore() -> newKeyStore
    java.lang.String getLocation() -> getLocation
    void setLocation(java.lang.String) -> setLocation
    java.lang.String getType() -> getType
    void setType(java.lang.String) -> setType
    java.lang.String getProvider() -> getProvider
    void setProvider(java.lang.String) -> setProvider
    java.lang.String getPassword() -> getPassword
    void setPassword(java.lang.String) -> setPassword
ch.qos.logback.core.net.ssl.SSL -> ch.qos.logback.core.net.ssl.SSL:
    java.lang.String DEFAULT_PROTOCOL -> DEFAULT_PROTOCOL
    java.lang.String DEFAULT_KEYSTORE_TYPE -> DEFAULT_KEYSTORE_TYPE
    java.lang.String DEFAULT_KEYSTORE_PASSWORD -> DEFAULT_KEYSTORE_PASSWORD
    java.lang.String DEFAULT_SECURE_RANDOM_ALGORITHM -> DEFAULT_SECURE_RANDOM_ALGORITHM
ch.qos.logback.core.net.ssl.SSLComponent -> ch.qos.logback.core.net.ssl.SSLComponent:
    ch.qos.logback.core.net.ssl.SSLConfiguration getSsl() -> getSsl
    void setSsl(ch.qos.logback.core.net.ssl.SSLConfiguration) -> setSsl
ch.qos.logback.core.net.ssl.SSLConfigurable -> ch.qos.logback.core.net.ssl.SSLConfigurable:
    java.lang.String[] getDefaultProtocols() -> getDefaultProtocols
    java.lang.String[] getSupportedProtocols() -> getSupportedProtocols
    void setEnabledProtocols(java.lang.String[]) -> setEnabledProtocols
    java.lang.String[] getDefaultCipherSuites() -> getDefaultCipherSuites
    java.lang.String[] getSupportedCipherSuites() -> getSupportedCipherSuites
    void setEnabledCipherSuites(java.lang.String[]) -> setEnabledCipherSuites
    void setNeedClientAuth(boolean) -> setNeedClientAuth
    void setWantClientAuth(boolean) -> setWantClientAuth
ch.qos.logback.core.net.ssl.SSLConfigurableServerSocket -> ch.qos.logback.core.net.ssl.SSLConfigurableServerSocket:
    javax.net.ssl.SSLServerSocket delegate -> delegate
    java.lang.String[] getDefaultProtocols() -> getDefaultProtocols
    java.lang.String[] getSupportedProtocols() -> getSupportedProtocols
    void setEnabledProtocols(java.lang.String[]) -> setEnabledProtocols
    java.lang.String[] getDefaultCipherSuites() -> getDefaultCipherSuites
    java.lang.String[] getSupportedCipherSuites() -> getSupportedCipherSuites
    void setEnabledCipherSuites(java.lang.String[]) -> setEnabledCipherSuites
    void setNeedClientAuth(boolean) -> setNeedClientAuth
    void setWantClientAuth(boolean) -> setWantClientAuth
ch.qos.logback.core.net.ssl.SSLConfigurableSocket -> ch.qos.logback.core.net.ssl.SSLConfigurableSocket:
    javax.net.ssl.SSLSocket delegate -> delegate
    java.lang.String[] getDefaultProtocols() -> getDefaultProtocols
    java.lang.String[] getSupportedProtocols() -> getSupportedProtocols
    void setEnabledProtocols(java.lang.String[]) -> setEnabledProtocols
    java.lang.String[] getDefaultCipherSuites() -> getDefaultCipherSuites
    java.lang.String[] getSupportedCipherSuites() -> getSupportedCipherSuites
    void setEnabledCipherSuites(java.lang.String[]) -> setEnabledCipherSuites
    void setNeedClientAuth(boolean) -> setNeedClientAuth
    void setWantClientAuth(boolean) -> setWantClientAuth
ch.qos.logback.core.net.ssl.SSLConfiguration -> ch.qos.logback.core.net.ssl.SSLConfiguration:
    ch.qos.logback.core.net.ssl.SSLParametersConfiguration parameters -> parameters
    ch.qos.logback.core.net.ssl.SSLParametersConfiguration getParameters() -> getParameters
    void setParameters(ch.qos.logback.core.net.ssl.SSLParametersConfiguration) -> setParameters
ch.qos.logback.core.net.ssl.SSLContextFactoryBean -> ch.qos.logback.core.net.ssl.SSLContextFactoryBean:
    java.lang.String JSSE_KEY_STORE_PROPERTY -> JSSE_KEY_STORE_PROPERTY
    java.lang.String JSSE_TRUST_STORE_PROPERTY -> JSSE_TRUST_STORE_PROPERTY
    ch.qos.logback.core.net.ssl.KeyStoreFactoryBean keyStore -> keyStore
    ch.qos.logback.core.net.ssl.KeyStoreFactoryBean trustStore -> trustStore
    ch.qos.logback.core.net.ssl.SecureRandomFactoryBean secureRandom -> secureRandom
    ch.qos.logback.core.net.ssl.KeyManagerFactoryFactoryBean keyManagerFactory -> keyManagerFactory
    ch.qos.logback.core.net.ssl.TrustManagerFactoryFactoryBean trustManagerFactory -> trustManagerFactory
    java.lang.String protocol -> protocol
    java.lang.String provider -> provider
    javax.net.ssl.SSLContext createContext(ch.qos.logback.core.spi.ContextAware) -> createContext
    javax.net.ssl.KeyManager[] createKeyManagers(ch.qos.logback.core.spi.ContextAware) -> createKeyManagers
    javax.net.ssl.TrustManager[] createTrustManagers(ch.qos.logback.core.spi.ContextAware) -> createTrustManagers
    java.security.SecureRandom createSecureRandom(ch.qos.logback.core.spi.ContextAware) -> createSecureRandom
    ch.qos.logback.core.net.ssl.KeyStoreFactoryBean getKeyStore() -> getKeyStore
    void setKeyStore(ch.qos.logback.core.net.ssl.KeyStoreFactoryBean) -> setKeyStore
    ch.qos.logback.core.net.ssl.KeyStoreFactoryBean getTrustStore() -> getTrustStore
    void setTrustStore(ch.qos.logback.core.net.ssl.KeyStoreFactoryBean) -> setTrustStore
    ch.qos.logback.core.net.ssl.KeyStoreFactoryBean keyStoreFromSystemProperties(java.lang.String) -> keyStoreFromSystemProperties
    java.lang.String locationFromSystemProperty(java.lang.String) -> locationFromSystemProperty
    ch.qos.logback.core.net.ssl.SecureRandomFactoryBean getSecureRandom() -> getSecureRandom
    void setSecureRandom(ch.qos.logback.core.net.ssl.SecureRandomFactoryBean) -> setSecureRandom
    ch.qos.logback.core.net.ssl.KeyManagerFactoryFactoryBean getKeyManagerFactory() -> getKeyManagerFactory
    void setKeyManagerFactory(ch.qos.logback.core.net.ssl.KeyManagerFactoryFactoryBean) -> setKeyManagerFactory
    ch.qos.logback.core.net.ssl.TrustManagerFactoryFactoryBean getTrustManagerFactory() -> getTrustManagerFactory
    void setTrustManagerFactory(ch.qos.logback.core.net.ssl.TrustManagerFactoryFactoryBean) -> setTrustManagerFactory
    java.lang.String getProtocol() -> getProtocol
    void setProtocol(java.lang.String) -> setProtocol
    java.lang.String getProvider() -> getProvider
    void setProvider(java.lang.String) -> setProvider
ch.qos.logback.core.net.ssl.SSLNestedComponentRegistryRules -> ch.qos.logback.core.net.ssl.SSLNestedComponentRegistryRules:
    void addDefaultNestedComponentRegistryRules(ch.qos.logback.core.joran.spi.DefaultNestedComponentRegistry) -> addDefaultNestedComponentRegistryRules
ch.qos.logback.core.net.ssl.SSLParametersConfiguration -> ch.qos.logback.core.net.ssl.SSLParametersConfiguration:
    java.lang.String includedProtocols -> includedProtocols
    java.lang.String excludedProtocols -> excludedProtocols
    java.lang.String includedCipherSuites -> includedCipherSuites
    java.lang.String excludedCipherSuites -> excludedCipherSuites
    java.lang.Boolean needClientAuth -> needClientAuth
    java.lang.Boolean wantClientAuth -> wantClientAuth
    java.lang.String[] enabledProtocols -> enabledProtocols
    java.lang.String[] enabledCipherSuites -> enabledCipherSuites
    void configure(ch.qos.logback.core.net.ssl.SSLConfigurable) -> configure
    java.lang.String[] enabledProtocols(java.lang.String[],java.lang.String[]) -> enabledProtocols
    java.lang.String[] enabledCipherSuites(java.lang.String[],java.lang.String[]) -> enabledCipherSuites
    java.lang.String[] includedStrings(java.lang.String[],java.lang.String,java.lang.String) -> includedStrings
    java.lang.String[] stringToArray(java.lang.String) -> stringToArray
    java.lang.String getIncludedProtocols() -> getIncludedProtocols
    void setIncludedProtocols(java.lang.String) -> setIncludedProtocols
    java.lang.String getExcludedProtocols() -> getExcludedProtocols
    void setExcludedProtocols(java.lang.String) -> setExcludedProtocols
    java.lang.String getIncludedCipherSuites() -> getIncludedCipherSuites
    void setIncludedCipherSuites(java.lang.String) -> setIncludedCipherSuites
    java.lang.String getExcludedCipherSuites() -> getExcludedCipherSuites
    void setExcludedCipherSuites(java.lang.String) -> setExcludedCipherSuites
    java.lang.Boolean isNeedClientAuth() -> isNeedClientAuth
    void setNeedClientAuth(java.lang.Boolean) -> setNeedClientAuth
    java.lang.Boolean isWantClientAuth() -> isWantClientAuth
    void setWantClientAuth(java.lang.Boolean) -> setWantClientAuth
ch.qos.logback.core.net.ssl.SecureRandomFactoryBean -> ch.qos.logback.core.net.ssl.SecureRandomFactoryBean:
    java.lang.String algorithm -> algorithm
    java.lang.String provider -> provider
    java.security.SecureRandom createSecureRandom() -> createSecureRandom
    java.lang.String getAlgorithm() -> getAlgorithm
    void setAlgorithm(java.lang.String) -> setAlgorithm
    java.lang.String getProvider() -> getProvider
    void setProvider(java.lang.String) -> setProvider
ch.qos.logback.core.net.ssl.TrustManagerFactoryFactoryBean -> ch.qos.logback.core.net.ssl.TrustManagerFactoryFactoryBean:
    java.lang.String algorithm -> algorithm
    java.lang.String provider -> provider
    javax.net.ssl.TrustManagerFactory createTrustManagerFactory() -> createTrustManagerFactory
    java.lang.String getAlgorithm() -> getAlgorithm
    void setAlgorithm(java.lang.String) -> setAlgorithm
    java.lang.String getProvider() -> getProvider
    void setProvider(java.lang.String) -> setProvider
ch.qos.logback.core.pattern.CompositeConverter -> ch.qos.logback.core.pattern.CompositeConverter:
    ch.qos.logback.core.pattern.Converter childConverter -> childConverter
    java.lang.String convert(java.lang.Object) -> convert
    java.lang.String transform(java.lang.Object,java.lang.String) -> transform
    ch.qos.logback.core.pattern.Converter getChildConverter() -> getChildConverter
    void setChildConverter(ch.qos.logback.core.pattern.Converter) -> setChildConverter
    java.lang.String toString() -> toString
ch.qos.logback.core.pattern.Converter -> ch.qos.logback.core.pattern.Converter:
    ch.qos.logback.core.pattern.Converter next -> next
    java.lang.String convert(java.lang.Object) -> convert
    void write(java.lang.StringBuilder,java.lang.Object) -> write
    void setNext(ch.qos.logback.core.pattern.Converter) -> setNext
    ch.qos.logback.core.pattern.Converter getNext() -> getNext
ch.qos.logback.core.pattern.ConverterUtil -> ch.qos.logback.core.pattern.ConverterUtil:
    void startConverters(ch.qos.logback.core.pattern.Converter) -> startConverters
    ch.qos.logback.core.pattern.Converter findTail(ch.qos.logback.core.pattern.Converter) -> findTail
    void setContextForConverters(ch.qos.logback.core.Context,ch.qos.logback.core.pattern.Converter) -> setContextForConverters
ch.qos.logback.core.pattern.DynamicConverter -> ch.qos.logback.core.pattern.DynamicConverter:
    ch.qos.logback.core.spi.ContextAwareBase cab -> cab
    java.util.List optionList -> optionList
    boolean started -> started
    void start() -> start
    void stop() -> stop
    boolean isStarted() -> isStarted
    void setOptionList(java.util.List) -> setOptionList
    java.lang.String getFirstOption() -> getFirstOption
    java.util.List getOptionList() -> getOptionList
    void setContext(ch.qos.logback.core.Context) -> setContext
    ch.qos.logback.core.Context getContext() -> getContext
    void addStatus(ch.qos.logback.core.status.Status) -> addStatus
    void addInfo(java.lang.String) -> addInfo
    void addInfo(java.lang.String,java.lang.Throwable) -> addInfo
    void addWarn(java.lang.String) -> addWarn
    void addWarn(java.lang.String,java.lang.Throwable) -> addWarn
    void addError(java.lang.String) -> addError
    void addError(java.lang.String,java.lang.Throwable) -> addError
ch.qos.logback.core.pattern.FormatInfo -> ch.qos.logback.core.pattern.FormatInfo:
    int min -> min
    int max -> max
    boolean leftPad -> leftPad
    boolean leftTruncate -> leftTruncate
    ch.qos.logback.core.pattern.FormatInfo valueOf(java.lang.String) -> valueOf
    boolean isLeftPad() -> isLeftPad
    void setLeftPad(boolean) -> setLeftPad
    int getMax() -> getMax
    void setMax(int) -> setMax
    int getMin() -> getMin
    void setMin(int) -> setMin
    boolean isLeftTruncate() -> isLeftTruncate
    void setLeftTruncate(boolean) -> setLeftTruncate
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
ch.qos.logback.core.pattern.FormattingConverter -> ch.qos.logback.core.pattern.FormattingConverter:
    int INITIAL_BUF_SIZE -> INITIAL_BUF_SIZE
    int MAX_CAPACITY -> MAX_CAPACITY
    ch.qos.logback.core.pattern.FormatInfo formattingInfo -> formattingInfo
    ch.qos.logback.core.pattern.FormatInfo getFormattingInfo() -> getFormattingInfo
    void setFormattingInfo(ch.qos.logback.core.pattern.FormatInfo) -> setFormattingInfo
    void write(java.lang.StringBuilder,java.lang.Object) -> write
ch.qos.logback.core.pattern.IdentityCompositeConverter -> ch.qos.logback.core.pattern.IdentityCompositeConverter:
    java.lang.String transform(java.lang.Object,java.lang.String) -> transform
ch.qos.logback.core.pattern.LiteralConverter -> ch.qos.logback.core.pattern.LiteralConverter:
    java.lang.String literal -> literal
    java.lang.String convert(java.lang.Object) -> convert
ch.qos.logback.core.pattern.PatternLayoutBase -> ch.qos.logback.core.pattern.PatternLayoutBase:
    ch.qos.logback.core.pattern.Converter head -> head
    java.lang.String pattern -> pattern
    ch.qos.logback.core.pattern.PostCompileProcessor postCompileProcessor -> postCompileProcessor
    java.util.Map instanceConverterMap -> instanceConverterMap
    boolean outputPatternAsHeader -> outputPatternAsHeader
    java.util.Map getDefaultConverterMap() -> getDefaultConverterMap
    java.util.Map getEffectiveConverterMap() -> getEffectiveConverterMap
    void start() -> start
    void setPostCompileProcessor(ch.qos.logback.core.pattern.PostCompileProcessor) -> setPostCompileProcessor
    void setContextForConverters(ch.qos.logback.core.pattern.Converter) -> setContextForConverters
    java.lang.String writeLoopOnConverters(java.lang.Object) -> writeLoopOnConverters
    java.lang.String getPattern() -> getPattern
    void setPattern(java.lang.String) -> setPattern
    java.lang.String toString() -> toString
    java.util.Map getInstanceConverterMap() -> getInstanceConverterMap
    java.lang.String getPresentationHeaderPrefix() -> getPresentationHeaderPrefix
    boolean isOutputPatternAsHeader() -> isOutputPatternAsHeader
    void setOutputPatternAsHeader(boolean) -> setOutputPatternAsHeader
    java.lang.String getPresentationHeader() -> getPresentationHeader
ch.qos.logback.core.pattern.PatternLayoutEncoderBase -> ch.qos.logback.core.pattern.PatternLayoutEncoderBase:
    java.lang.String pattern -> pattern
    boolean outputPatternAsHeader -> outputPatternAsHeader
    java.lang.String getPattern() -> getPattern
    void setPattern(java.lang.String) -> setPattern
    boolean isOutputPatternAsHeader() -> isOutputPatternAsHeader
    void setOutputPatternAsHeader(boolean) -> setOutputPatternAsHeader
    boolean isOutputPatternAsPresentationHeader() -> isOutputPatternAsPresentationHeader
    void setOutputPatternAsPresentationHeader(boolean) -> setOutputPatternAsPresentationHeader
    void setLayout(ch.qos.logback.core.Layout) -> setLayout
ch.qos.logback.core.pattern.PostCompileProcessor -> ch.qos.logback.core.pattern.PostCompileProcessor:
    void process(ch.qos.logback.core.pattern.Converter) -> process
ch.qos.logback.core.pattern.ReplacingCompositeConverter -> ch.qos.logback.core.pattern.ReplacingCompositeConverter:
    java.util.regex.Pattern pattern -> pattern
    java.lang.String regex -> regex
    java.lang.String replacement -> replacement
    void start() -> start
    java.lang.String transform(java.lang.Object,java.lang.String) -> transform
ch.qos.logback.core.pattern.SpacePadder -> ch.qos.logback.core.pattern.SpacePadder:
    java.lang.String[] SPACES -> SPACES
    void leftPad(java.lang.StringBuilder,java.lang.String,int) -> leftPad
    void rightPad(java.lang.StringBuilder,java.lang.String,int) -> rightPad
    void spacePad(java.lang.StringBuilder,int) -> spacePad
ch.qos.logback.core.pattern.parser.Compiler -> ch.qos.logback.core.pattern.parser.a:
    ch.qos.logback.core.pattern.Converter head -> a
    ch.qos.logback.core.pattern.Converter tail -> b
    ch.qos.logback.core.pattern.parser.Node top -> c
    java.util.Map converterMap -> d
    ch.qos.logback.core.pattern.Converter compile() -> a
    void addToList(ch.qos.logback.core.pattern.Converter) -> a
    ch.qos.logback.core.pattern.DynamicConverter createConverter(ch.qos.logback.core.pattern.parser.SimpleKeywordNode) -> a
    ch.qos.logback.core.pattern.CompositeConverter createCompositeConverter(ch.qos.logback.core.pattern.parser.CompositeNode) -> a
ch.qos.logback.core.pattern.parser.CompositeNode -> ch.qos.logback.core.pattern.parser.CompositeNode:
    ch.qos.logback.core.pattern.parser.Node childNode -> childNode
    ch.qos.logback.core.pattern.parser.Node getChildNode() -> getChildNode
    void setChildNode(ch.qos.logback.core.pattern.parser.Node) -> setChildNode
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
ch.qos.logback.core.pattern.parser.FormattingNode -> ch.qos.logback.core.pattern.parser.FormattingNode:
    ch.qos.logback.core.pattern.FormatInfo formatInfo -> formatInfo
    ch.qos.logback.core.pattern.FormatInfo getFormatInfo() -> getFormatInfo
    void setFormatInfo(ch.qos.logback.core.pattern.FormatInfo) -> setFormatInfo
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
ch.qos.logback.core.pattern.parser.Node -> ch.qos.logback.core.pattern.parser.Node:
    int LITERAL -> LITERAL
    int SIMPLE_KEYWORD -> SIMPLE_KEYWORD
    int COMPOSITE_KEYWORD -> COMPOSITE_KEYWORD
    int type -> type
    java.lang.Object value -> value
    ch.qos.logback.core.pattern.parser.Node next -> next
    int getType() -> getType
    java.lang.Object getValue() -> getValue
    ch.qos.logback.core.pattern.parser.Node getNext() -> getNext
    void setNext(ch.qos.logback.core.pattern.parser.Node) -> setNext
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String printNext() -> printNext
    java.lang.String toString() -> toString
ch.qos.logback.core.pattern.parser.OptionTokenizer -> ch.qos.logback.core.pattern.parser.OptionTokenizer:
    int EXPECTING_STATE -> EXPECTING_STATE
    int RAW_COLLECTING_STATE -> RAW_COLLECTING_STATE
    int QUOTED_COLLECTING_STATE -> QUOTED_COLLECTING_STATE
    ch.qos.logback.core.pattern.util.IEscapeUtil escapeUtil -> escapeUtil
    ch.qos.logback.core.pattern.parser.TokenStream tokenStream -> tokenStream
    java.lang.String pattern -> pattern
    int patternLength -> patternLength
    char quoteChar -> quoteChar
    int state -> state
    void tokenize(char,java.util.List) -> tokenize
    void emitOptionToken(java.util.List,java.util.List) -> emitOptionToken
    void escape(java.lang.String,java.lang.StringBuffer) -> escape
ch.qos.logback.core.pattern.parser.Parser -> ch.qos.logback.core.pattern.parser.Parser:
    java.lang.String MISSING_RIGHT_PARENTHESIS -> MISSING_RIGHT_PARENTHESIS
    java.util.Map DEFAULT_COMPOSITE_CONVERTER_MAP -> DEFAULT_COMPOSITE_CONVERTER_MAP
    java.lang.String REPLACE_CONVERTER_WORD -> REPLACE_CONVERTER_WORD
    java.util.List tokenList -> tokenList
    int pointer -> pointer
    ch.qos.logback.core.pattern.Converter compile(ch.qos.logback.core.pattern.parser.Node,java.util.Map) -> compile
    ch.qos.logback.core.pattern.parser.Node parse() -> parse
    ch.qos.logback.core.pattern.parser.Node E() -> E
    ch.qos.logback.core.pattern.parser.Node Eopt() -> Eopt
    ch.qos.logback.core.pattern.parser.Node T() -> T
    ch.qos.logback.core.pattern.parser.FormattingNode C() -> C
    ch.qos.logback.core.pattern.parser.FormattingNode SINGLE() -> SINGLE
    ch.qos.logback.core.pattern.parser.FormattingNode COMPOSITE(java.lang.String) -> COMPOSITE
    ch.qos.logback.core.pattern.parser.Token getNextToken() -> getNextToken
    ch.qos.logback.core.pattern.parser.Token getCurentToken() -> getCurentToken
    void advanceTokenPointer() -> advanceTokenPointer
    void expectNotNull(ch.qos.logback.core.pattern.parser.Token,java.lang.String) -> expectNotNull
ch.qos.logback.core.pattern.parser.SimpleKeywordNode -> ch.qos.logback.core.pattern.parser.SimpleKeywordNode:
    java.util.List optionList -> optionList
    java.util.List getOptions() -> getOptions
    void setOptions(java.util.List) -> setOptions
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
ch.qos.logback.core.pattern.parser.Token -> ch.qos.logback.core.pattern.parser.b:
    ch.qos.logback.core.pattern.parser.Token EOF_TOKEN -> a
    ch.qos.logback.core.pattern.parser.Token RIGHT_PARENTHESIS_TOKEN -> b
    ch.qos.logback.core.pattern.parser.Token BARE_COMPOSITE_KEYWORD_TOKEN -> c
    ch.qos.logback.core.pattern.parser.Token PERCENT_TOKEN -> d
    int type -> e
    java.lang.Object value -> f
    int getType() -> a
    java.lang.Object getValue() -> b
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
ch.qos.logback.core.pattern.parser.TokenStream -> ch.qos.logback.core.pattern.parser.c:
    java.lang.String pattern -> a
    int patternLength -> b
    ch.qos.logback.core.pattern.util.IEscapeUtil escapeUtil -> c
    ch.qos.logback.core.pattern.util.IEscapeUtil optionEscapeUtil -> d
    ch.qos.logback.core.pattern.parser.TokenStream$TokenizerState state -> e
    int pointer -> f
    java.util.List tokenize() -> a
    void handleRightParenthesisState(char,java.util.List,java.lang.StringBuffer) -> a
    void processOption(char,java.util.List,java.lang.StringBuffer) -> b
    void handleFormatModifierState(char,java.util.List,java.lang.StringBuffer) -> c
    void handleLiteralState(char,java.util.List,java.lang.StringBuffer) -> d
    void handleKeywordState(char,java.util.List,java.lang.StringBuffer) -> e
    void escape(java.lang.String,java.lang.StringBuffer) -> a
    void addValuedToken(int,java.lang.StringBuffer,java.util.List) -> a
ch.qos.logback.core.pattern.parser.TokenStream$1 -> ch.qos.logback.core.pattern.parser.d:
    int[] $SwitchMap$ch$qos$logback$core$pattern$parser$TokenStream$TokenizerState -> a
ch.qos.logback.core.pattern.parser.TokenStream$TokenizerState -> ch.qos.logback.core.pattern.parser.e:
    ch.qos.logback.core.pattern.parser.TokenStream$TokenizerState LITERAL_STATE -> a
    ch.qos.logback.core.pattern.parser.TokenStream$TokenizerState FORMAT_MODIFIER_STATE -> b
    ch.qos.logback.core.pattern.parser.TokenStream$TokenizerState KEYWORD_STATE -> c
    ch.qos.logback.core.pattern.parser.TokenStream$TokenizerState OPTION_STATE -> d
    ch.qos.logback.core.pattern.parser.TokenStream$TokenizerState RIGHT_PARENTHESIS_STATE -> e
    ch.qos.logback.core.pattern.parser.TokenStream$TokenizerState[] $VALUES -> f
    ch.qos.logback.core.pattern.parser.TokenStream$TokenizerState[] values() -> values
    ch.qos.logback.core.pattern.parser.TokenStream$TokenizerState valueOf(java.lang.String) -> valueOf
ch.qos.logback.core.pattern.util.AlmostAsIsEscapeUtil -> ch.qos.logback.core.pattern.util.AlmostAsIsEscapeUtil:
    void escape(java.lang.String,java.lang.StringBuffer,char,int) -> escape
ch.qos.logback.core.pattern.util.AsIsEscapeUtil -> ch.qos.logback.core.pattern.util.AsIsEscapeUtil:
    void escape(java.lang.String,java.lang.StringBuffer,char,int) -> escape
ch.qos.logback.core.pattern.util.IEscapeUtil -> ch.qos.logback.core.pattern.util.IEscapeUtil:
    void escape(java.lang.String,java.lang.StringBuffer,char,int) -> escape
ch.qos.logback.core.pattern.util.RegularEscapeUtil -> ch.qos.logback.core.pattern.util.RegularEscapeUtil:
    void escape(java.lang.String,java.lang.StringBuffer,char,int) -> escape
    java.lang.String formatEscapeCharsForListing(java.lang.String) -> formatEscapeCharsForListing
    java.lang.String basicEscape(java.lang.String) -> basicEscape
ch.qos.logback.core.pattern.util.RestrictedEscapeUtil -> ch.qos.logback.core.pattern.util.RestrictedEscapeUtil:
    void escape(java.lang.String,java.lang.StringBuffer,char,int) -> escape
ch.qos.logback.core.property.FileExistsPropertyDefiner -> ch.qos.logback.core.property.FileExistsPropertyDefiner:
    java.lang.String path -> path
    java.lang.String getPath() -> getPath
    void setPath(java.lang.String) -> setPath
    java.lang.String getPropertyValue() -> getPropertyValue
ch.qos.logback.core.property.ResourceExistsPropertyDefiner -> ch.qos.logback.core.property.ResourceExistsPropertyDefiner:
    java.lang.String resourceStr -> resourceStr
    java.lang.String getResource() -> getResource
    void setResource(java.lang.String) -> setResource
    java.lang.String getPropertyValue() -> getPropertyValue
ch.qos.logback.core.read.CyclicBufferAppender -> ch.qos.logback.core.read.CyclicBufferAppender:
    ch.qos.logback.core.helpers.CyclicBuffer cb -> cb
    int maxSize -> maxSize
    void start() -> start
    void stop() -> stop
    void append(java.lang.Object) -> append
    int getLength() -> getLength
    java.lang.Object get(int) -> get
    void reset() -> reset
    int getMaxSize() -> getMaxSize
    void setMaxSize(int) -> setMaxSize
ch.qos.logback.core.recovery.RecoveryCoordinator -> ch.qos.logback.core.recovery.RecoveryCoordinator:
    long BACKOFF_COEFFICIENT_MIN -> BACKOFF_COEFFICIENT_MIN
    long BACKOFF_COEFFICIENT_MAX -> BACKOFF_COEFFICIENT_MAX
    long backOffCoefficient -> backOffCoefficient
    long UNSET -> UNSET
    long currentTime -> currentTime
    long next -> next
    boolean isTooSoon() -> isTooSoon
    void setCurrentTime(long) -> setCurrentTime
    long getCurrentTime() -> getCurrentTime
    long getBackoffCoefficient() -> getBackoffCoefficient
ch.qos.logback.core.recovery.ResilientFileOutputStream -> ch.qos.logback.core.recovery.ResilientFileOutputStream:
    java.io.File file -> file
    java.io.FileOutputStream fos -> fos
    java.nio.channels.FileChannel getChannel() -> getChannel
    java.io.File getFile() -> getFile
    java.lang.String getDescription() -> getDescription
    java.io.OutputStream openNewOutputStream() -> openNewOutputStream
    java.lang.String toString() -> toString
ch.qos.logback.core.recovery.ResilientOutputStreamBase -> ch.qos.logback.core.recovery.ResilientOutputStreamBase:
    int STATUS_COUNT_LIMIT -> STATUS_COUNT_LIMIT
    int noContextWarning -> noContextWarning
    int statusCount -> statusCount
    ch.qos.logback.core.Context context -> context
    ch.qos.logback.core.recovery.RecoveryCoordinator recoveryCoordinator -> recoveryCoordinator
    java.io.OutputStream os -> os
    boolean presumedClean -> presumedClean
    boolean isPresumedInError() -> isPresumedInError
    void write(byte[],int,int) -> write
    void write(int) -> write
    void flush() -> flush
    java.lang.String getDescription() -> getDescription
    java.io.OutputStream openNewOutputStream() -> openNewOutputStream
    void postSuccessfulWrite() -> postSuccessfulWrite
    void postIOFailure(java.io.IOException) -> postIOFailure
    void close() -> close
    void attemptRecovery() -> attemptRecovery
    void addStatusIfCountNotOverLimit(ch.qos.logback.core.status.Status) -> addStatusIfCountNotOverLimit
    void addStatus(ch.qos.logback.core.status.Status) -> addStatus
    ch.qos.logback.core.Context getContext() -> getContext
    void setContext(ch.qos.logback.core.Context) -> setContext
ch.qos.logback.core.recovery.ResilientSyslogOutputStream -> ch.qos.logback.core.recovery.ResilientSyslogOutputStream:
    java.lang.String syslogHost -> syslogHost
    int port -> port
    java.lang.String getDescription() -> getDescription
    java.io.OutputStream openNewOutputStream() -> openNewOutputStream
    java.lang.String toString() -> toString
ch.qos.logback.core.rolling.DefaultTimeBasedFileNamingAndTriggeringPolicy -> ch.qos.logback.core.rolling.DefaultTimeBasedFileNamingAndTriggeringPolicy:
    void start() -> start
    boolean isTriggeringEvent(java.io.File,java.lang.Object) -> isTriggeringEvent
    java.lang.String toString() -> toString
ch.qos.logback.core.rolling.FixedWindowRollingPolicy -> ch.qos.logback.core.rolling.FixedWindowRollingPolicy:
    java.lang.String FNP_NOT_SET -> FNP_NOT_SET
    java.lang.String PRUDENT_MODE_UNSUPPORTED -> PRUDENT_MODE_UNSUPPORTED
    java.lang.String SEE_PARENT_FN_NOT_SET -> SEE_PARENT_FN_NOT_SET
    int maxIndex -> maxIndex
    int minIndex -> minIndex
    ch.qos.logback.core.rolling.helper.RenameUtil util -> util
    ch.qos.logback.core.rolling.helper.Compressor compressor -> compressor
    java.lang.String ZIP_ENTRY_DATE_PATTERN -> ZIP_ENTRY_DATE_PATTERN
    int MAX_WINDOW_SIZE -> MAX_WINDOW_SIZE
    void start() -> start
    int getMaxWindowSize() -> getMaxWindowSize
    java.lang.String transformFileNamePatternFromInt2Date(java.lang.String) -> transformFileNamePatternFromInt2Date
    void rollover() -> rollover
    java.lang.String getActiveFileName() -> getActiveFileName
    int getMaxIndex() -> getMaxIndex
    int getMinIndex() -> getMinIndex
    void setMaxIndex(int) -> setMaxIndex
    void setMinIndex(int) -> setMinIndex
ch.qos.logback.core.rolling.FixedWindowRollingPolicy$1 -> ch.qos.logback.core.rolling.a:
    int[] $SwitchMap$ch$qos$logback$core$rolling$helper$CompressionMode -> a
ch.qos.logback.core.rolling.RollingFileAppender -> ch.qos.logback.core.rolling.RollingFileAppender:
    java.io.File currentlyActiveFile -> currentlyActiveFile
    ch.qos.logback.core.rolling.TriggeringPolicy triggeringPolicy -> triggeringPolicy
    ch.qos.logback.core.rolling.RollingPolicy rollingPolicy -> rollingPolicy
    java.lang.String RFA_NO_TP_URL -> RFA_NO_TP_URL
    java.lang.String RFA_NO_RP_URL -> RFA_NO_RP_URL
    java.lang.String COLLISION_URL -> COLLISION_URL
    void start() -> start
    boolean fileAndPatternCollide() -> fileAndPatternCollide
    void stop() -> stop
    void setFile(java.lang.String) -> setFile
    java.lang.String getFile() -> getFile
    void rollover() -> rollover
    void subAppend(java.lang.Object) -> subAppend
    ch.qos.logback.core.rolling.RollingPolicy getRollingPolicy() -> getRollingPolicy
    ch.qos.logback.core.rolling.TriggeringPolicy getTriggeringPolicy() -> getTriggeringPolicy
    void setRollingPolicy(ch.qos.logback.core.rolling.RollingPolicy) -> setRollingPolicy
    void setTriggeringPolicy(ch.qos.logback.core.rolling.TriggeringPolicy) -> setTriggeringPolicy
ch.qos.logback.core.rolling.RollingPolicy -> ch.qos.logback.core.rolling.RollingPolicy:
    void rollover() -> rollover
    java.lang.String getActiveFileName() -> getActiveFileName
    ch.qos.logback.core.rolling.helper.CompressionMode getCompressionMode() -> getCompressionMode
    void setParent(ch.qos.logback.core.FileAppender) -> setParent
ch.qos.logback.core.rolling.RollingPolicyBase -> ch.qos.logback.core.rolling.RollingPolicyBase:
    ch.qos.logback.core.rolling.helper.CompressionMode compressionMode -> compressionMode
    ch.qos.logback.core.rolling.helper.FileNamePattern fileNamePattern -> fileNamePattern
    java.lang.String fileNamePatternStr -> fileNamePatternStr
    ch.qos.logback.core.FileAppender parent -> parent
    ch.qos.logback.core.rolling.helper.FileNamePattern zipEntryFileNamePattern -> zipEntryFileNamePattern
    boolean started -> started
    void determineCompressionMode() -> determineCompressionMode
    void setFileNamePattern(java.lang.String) -> setFileNamePattern
    java.lang.String getFileNamePattern() -> getFileNamePattern
    ch.qos.logback.core.rolling.helper.CompressionMode getCompressionMode() -> getCompressionMode
    boolean isStarted() -> isStarted
    void start() -> start
    void stop() -> stop
    void setParent(ch.qos.logback.core.FileAppender) -> setParent
    boolean isParentPrudent() -> isParentPrudent
    java.lang.String getParentsRawFileProperty() -> getParentsRawFileProperty
ch.qos.logback.core.rolling.RolloverFailure -> ch.qos.logback.core.rolling.RolloverFailure:
    long serialVersionUID -> serialVersionUID
ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP -> ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP:
    int currentPeriodsCounter -> currentPeriodsCounter
    ch.qos.logback.core.util.FileSize maxFileSize -> maxFileSize
    java.lang.String maxFileSizeAsString -> maxFileSizeAsString
    int invocationCounter -> invocationCounter
    int invocationMask -> invocationMask
    void start() -> start
    ch.qos.logback.core.rolling.helper.ArchiveRemover createArchiveRemover() -> createArchiveRemover
    void computeCurrentPeriodsHighestCounterValue(java.lang.String) -> computeCurrentPeriodsHighestCounterValue
    boolean isTriggeringEvent(java.io.File,java.lang.Object) -> isTriggeringEvent
    java.lang.String getFileNameIncludingCompressionSuffix(java.util.Date,int) -> getFileNameIncludingCompressionSuffix
    java.lang.String getCurrentPeriodsFileNameWithoutCompressionSuffix() -> getCurrentPeriodsFileNameWithoutCompressionSuffix
    java.lang.String getMaxFileSize() -> getMaxFileSize
    void setMaxFileSize(java.lang.String) -> setMaxFileSize
ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy -> ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy:
    java.lang.String SEE_SIZE_FORMAT -> SEE_SIZE_FORMAT
    long DEFAULT_MAX_FILE_SIZE -> DEFAULT_MAX_FILE_SIZE
    java.lang.String maxFileSizeAsString -> maxFileSizeAsString
    ch.qos.logback.core.util.FileSize maxFileSize -> maxFileSize
    ch.qos.logback.core.util.InvocationGate invocationGate -> invocationGate
    boolean isTriggeringEvent(java.io.File,java.lang.Object) -> isTriggeringEvent
    java.lang.String getMaxFileSize() -> getMaxFileSize
    void setMaxFileSize(java.lang.String) -> setMaxFileSize
    long toFileSize(java.lang.String) -> toFileSize
ch.qos.logback.core.rolling.TimeBasedFileNamingAndTriggeringPolicy -> ch.qos.logback.core.rolling.TimeBasedFileNamingAndTriggeringPolicy:
    void setTimeBasedRollingPolicy(ch.qos.logback.core.rolling.TimeBasedRollingPolicy) -> setTimeBasedRollingPolicy
    java.lang.String getElapsedPeriodsFileName() -> getElapsedPeriodsFileName
    java.lang.String getCurrentPeriodsFileNameWithoutCompressionSuffix() -> getCurrentPeriodsFileNameWithoutCompressionSuffix
    ch.qos.logback.core.rolling.helper.ArchiveRemover getArchiveRemover() -> getArchiveRemover
    long getCurrentTime() -> getCurrentTime
    void setCurrentTime(long) -> setCurrentTime
ch.qos.logback.core.rolling.TimeBasedFileNamingAndTriggeringPolicyBase -> ch.qos.logback.core.rolling.TimeBasedFileNamingAndTriggeringPolicyBase:
    ch.qos.logback.core.rolling.TimeBasedRollingPolicy tbrp -> tbrp
    ch.qos.logback.core.rolling.helper.ArchiveRemover archiveRemover -> archiveRemover
    java.lang.String elapsedPeriodsFileName -> elapsedPeriodsFileName
    ch.qos.logback.core.rolling.helper.RollingCalendar rc -> rc
    long artificialCurrentTime -> artificialCurrentTime
    java.util.Date dateInCurrentPeriod -> dateInCurrentPeriod
    long nextCheck -> nextCheck
    boolean started -> started
    boolean isStarted() -> isStarted
    void start() -> start
    void stop() -> stop
    void computeNextCheck() -> computeNextCheck
    void setDateInCurrentPeriod(long) -> setDateInCurrentPeriod
    void setDateInCurrentPeriod(java.util.Date) -> setDateInCurrentPeriod
    java.lang.String getElapsedPeriodsFileName() -> getElapsedPeriodsFileName
    java.lang.String getCurrentPeriodsFileNameWithoutCompressionSuffix() -> getCurrentPeriodsFileNameWithoutCompressionSuffix
    void setCurrentTime(long) -> setCurrentTime
    long getCurrentTime() -> getCurrentTime
    void setTimeBasedRollingPolicy(ch.qos.logback.core.rolling.TimeBasedRollingPolicy) -> setTimeBasedRollingPolicy
    ch.qos.logback.core.rolling.helper.ArchiveRemover getArchiveRemover() -> getArchiveRemover
ch.qos.logback.core.rolling.TimeBasedRollingPolicy -> ch.qos.logback.core.rolling.TimeBasedRollingPolicy:
    java.lang.String FNP_NOT_SET -> FNP_NOT_SET
    int INFINITE_HISTORY -> INFINITE_HISTORY
    ch.qos.logback.core.rolling.helper.FileNamePattern fileNamePatternWCS -> fileNamePatternWCS
    ch.qos.logback.core.rolling.helper.Compressor compressor -> compressor
    ch.qos.logback.core.rolling.helper.RenameUtil renameUtil -> renameUtil
    java.util.concurrent.Future future -> future
    int maxHistory -> maxHistory
    ch.qos.logback.core.rolling.helper.ArchiveRemover archiveRemover -> archiveRemover
    ch.qos.logback.core.rolling.TimeBasedFileNamingAndTriggeringPolicy timeBasedFileNamingAndTriggeringPolicy -> timeBasedFileNamingAndTriggeringPolicy
    boolean cleanHistoryOnStart -> cleanHistoryOnStart
    void start() -> start
    void stop() -> stop
    void waitForAsynchronousJobToStop() -> waitForAsynchronousJobToStop
    java.lang.String transformFileNamePattern2ZipEntry(java.lang.String) -> transformFileNamePattern2ZipEntry
    void setTimeBasedFileNamingAndTriggeringPolicy(ch.qos.logback.core.rolling.TimeBasedFileNamingAndTriggeringPolicy) -> setTimeBasedFileNamingAndTriggeringPolicy
    ch.qos.logback.core.rolling.TimeBasedFileNamingAndTriggeringPolicy getTimeBasedFileNamingAndTriggeringPolicy() -> getTimeBasedFileNamingAndTriggeringPolicy
    void rollover() -> rollover
    java.util.concurrent.Future asyncCompress(java.lang.String,java.lang.String,java.lang.String) -> asyncCompress
    java.util.concurrent.Future renamedRawAndAsyncCompress(java.lang.String,java.lang.String) -> renamedRawAndAsyncCompress
    java.lang.String getActiveFileName() -> getActiveFileName
    boolean isTriggeringEvent(java.io.File,java.lang.Object) -> isTriggeringEvent
    int getMaxHistory() -> getMaxHistory
    void setMaxHistory(int) -> setMaxHistory
    boolean isCleanHistoryOnStart() -> isCleanHistoryOnStart
    void setCleanHistoryOnStart(boolean) -> setCleanHistoryOnStart
    java.lang.String toString() -> toString
ch.qos.logback.core.rolling.TriggeringPolicy -> ch.qos.logback.core.rolling.TriggeringPolicy:
    boolean isTriggeringEvent(java.io.File,java.lang.Object) -> isTriggeringEvent
ch.qos.logback.core.rolling.TriggeringPolicyBase -> ch.qos.logback.core.rolling.TriggeringPolicyBase:
    boolean start -> start
    void start() -> start
    void stop() -> stop
    boolean isStarted() -> isStarted
ch.qos.logback.core.rolling.helper.ArchiveRemover -> ch.qos.logback.core.rolling.helper.ArchiveRemover:
    void clean(java.util.Date) -> clean
    void setMaxHistory(int) -> setMaxHistory
ch.qos.logback.core.rolling.helper.AsynchronousCompressor -> ch.qos.logback.core.rolling.helper.AsynchronousCompressor:
    ch.qos.logback.core.rolling.helper.Compressor compressor -> compressor
    java.util.concurrent.Future compressAsynchronously(java.lang.String,java.lang.String,java.lang.String) -> compressAsynchronously
ch.qos.logback.core.rolling.helper.CompressionMode -> ch.qos.logback.core.rolling.helper.CompressionMode:
    ch.qos.logback.core.rolling.helper.CompressionMode NONE -> NONE
    ch.qos.logback.core.rolling.helper.CompressionMode GZ -> GZ
    ch.qos.logback.core.rolling.helper.CompressionMode ZIP -> ZIP
    ch.qos.logback.core.rolling.helper.CompressionMode[] $VALUES -> $VALUES
    ch.qos.logback.core.rolling.helper.CompressionMode[] values() -> values
    ch.qos.logback.core.rolling.helper.CompressionMode valueOf(java.lang.String) -> valueOf
ch.qos.logback.core.rolling.helper.CompressionRunnable -> ch.qos.logback.core.rolling.helper.CompressionRunnable:
    ch.qos.logback.core.rolling.helper.Compressor compressor -> compressor
    java.lang.String nameOfFile2Compress -> nameOfFile2Compress
    java.lang.String nameOfCompressedFile -> nameOfCompressedFile
    java.lang.String innerEntryName -> innerEntryName
    void run() -> run
ch.qos.logback.core.rolling.helper.Compressor -> ch.qos.logback.core.rolling.helper.Compressor:
    ch.qos.logback.core.rolling.helper.CompressionMode compressionMode -> compressionMode
    int BUFFER_SIZE -> BUFFER_SIZE
    void compress(java.lang.String,java.lang.String,java.lang.String) -> compress
    void zipCompress(java.lang.String,java.lang.String,java.lang.String) -> zipCompress
    java.util.zip.ZipEntry computeZipEntry(java.io.File) -> computeZipEntry
    java.util.zip.ZipEntry computeZipEntry(java.lang.String) -> computeZipEntry
    void gzCompress(java.lang.String,java.lang.String) -> gzCompress
    java.lang.String computeFileNameStr_WCS(java.lang.String,ch.qos.logback.core.rolling.helper.CompressionMode) -> computeFileNameStr_WCS
    void createMissingTargetDirsIfNecessary(java.io.File) -> createMissingTargetDirsIfNecessary
    java.lang.String toString() -> toString
ch.qos.logback.core.rolling.helper.Compressor$1 -> ch.qos.logback.core.rolling.helper.a:
    int[] $SwitchMap$ch$qos$logback$core$rolling$helper$CompressionMode -> a
ch.qos.logback.core.rolling.helper.DateTokenConverter -> ch.qos.logback.core.rolling.helper.DateTokenConverter:
    java.lang.String CONVERTER_KEY -> CONVERTER_KEY
    java.lang.String AUXILIARY_TOKEN -> AUXILIARY_TOKEN
    java.lang.String DEFAULT_DATE_PATTERN -> DEFAULT_DATE_PATTERN
    java.lang.String datePattern -> datePattern
    ch.qos.logback.core.util.CachingDateFormatter cdf -> cdf
    boolean primary -> primary
    void start() -> start
    java.lang.String convert(java.util.Date) -> convert
    java.lang.String convert(java.lang.Object) -> convert
    java.lang.String getDatePattern() -> getDatePattern
    boolean isApplicable(java.lang.Object) -> isApplicable
    java.lang.String toRegex() -> toRegex
    boolean isPrimary() -> isPrimary
ch.qos.logback.core.rolling.helper.DefaultArchiveRemover -> ch.qos.logback.core.rolling.helper.DefaultArchiveRemover:
    long UNINITIALIZED -> UNINITIALIZED
    long INACTIVITY_TOLERANCE_IN_MILLIS -> INACTIVITY_TOLERANCE_IN_MILLIS
    int MAX_VALUE_FOR_INACTIVITY_PERIODS -> MAX_VALUE_FOR_INACTIVITY_PERIODS
    ch.qos.logback.core.rolling.helper.FileNamePattern fileNamePattern -> fileNamePattern
    ch.qos.logback.core.rolling.helper.RollingCalendar rc -> rc
    int periodOffsetForDeletionTarget -> periodOffsetForDeletionTarget
    boolean parentClean -> parentClean
    long lastHeartBeat -> lastHeartBeat
    int computeElapsedPeriodsSinceLastClean(long) -> computeElapsedPeriodsSinceLastClean
    void clean(java.util.Date) -> clean
    void cleanByPeriodOffset(java.util.Date,int) -> cleanByPeriodOffset
    boolean computeParentCleaningFlag(ch.qos.logback.core.rolling.helper.FileNamePattern) -> computeParentCleaningFlag
    void removeFolderIfEmpty(java.io.File) -> removeFolderIfEmpty
    void removeFolderIfEmpty(java.io.File,int) -> removeFolderIfEmpty
    void setMaxHistory(int) -> setMaxHistory
ch.qos.logback.core.rolling.helper.FileFilterUtil -> ch.qos.logback.core.rolling.helper.FileFilterUtil:
    void sortFileArrayByName(java.io.File[]) -> sortFileArrayByName
    void reverseSortFileArrayByName(java.io.File[]) -> reverseSortFileArrayByName
    java.lang.String afterLastSlash(java.lang.String) -> afterLastSlash
    boolean isEmptyDirectory(java.io.File) -> isEmptyDirectory
    java.io.File[] filesInFolderMatchingStemRegex(java.io.File,java.lang.String) -> filesInFolderMatchingStemRegex
    int findHighestCounter(java.io.File[],java.lang.String) -> findHighestCounter
    int extractCounter(java.io.File,java.lang.String) -> extractCounter
    java.lang.String slashify(java.lang.String) -> slashify
    void removeEmptyParentDirectories(java.io.File,int) -> removeEmptyParentDirectories
ch.qos.logback.core.rolling.helper.FileFilterUtil$1 -> ch.qos.logback.core.rolling.helper.b:
    int compare(java.io.File,java.io.File) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
ch.qos.logback.core.rolling.helper.FileFilterUtil$2 -> ch.qos.logback.core.rolling.helper.c:
    int compare(java.io.File,java.io.File) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
ch.qos.logback.core.rolling.helper.FileFilterUtil$3 -> ch.qos.logback.core.rolling.helper.d:
    java.lang.String val$stemRegex -> a
    boolean accept(java.io.File,java.lang.String) -> accept
ch.qos.logback.core.rolling.helper.FileNamePattern -> ch.qos.logback.core.rolling.helper.FileNamePattern:
    java.util.Map CONVERTER_MAP -> CONVERTER_MAP
    java.lang.String pattern -> pattern
    ch.qos.logback.core.pattern.Converter headTokenConverter -> headTokenConverter
    void parse() -> parse
    java.lang.String escapeRightParantesis(java.lang.String) -> escapeRightParantesis
    java.lang.String toString() -> toString
    ch.qos.logback.core.rolling.helper.DateTokenConverter getPrimaryDateTokenConverter() -> getPrimaryDateTokenConverter
    ch.qos.logback.core.rolling.helper.IntegerTokenConverter getIntegerTokenConverter() -> getIntegerTokenConverter
    java.lang.String convertMultipleArguments(java.lang.Object[]) -> convertMultipleArguments
    java.lang.String convert(java.lang.Object) -> convert
    java.lang.String convertInt(int) -> convertInt
    void setPattern(java.lang.String) -> setPattern
    java.lang.String getPattern() -> getPattern
    java.lang.String toRegexForFixedDate(java.util.Date) -> toRegexForFixedDate
    java.lang.String toRegex() -> toRegex
ch.qos.logback.core.rolling.helper.FileStoreUtil -> ch.qos.logback.core.rolling.helper.FileStoreUtil:
    java.lang.String PATH_CLASS_STR -> PATH_CLASS_STR
    java.lang.String FILES_CLASS_STR -> FILES_CLASS_STR
    boolean areOnSameFileStore(java.io.File,java.io.File) -> areOnSameFileStore
ch.qos.logback.core.rolling.helper.IntegerTokenConverter -> ch.qos.logback.core.rolling.helper.IntegerTokenConverter:
    java.lang.String CONVERTER_KEY -> CONVERTER_KEY
    java.lang.String convert(int) -> convert
    java.lang.String convert(java.lang.Object) -> convert
    boolean isApplicable(java.lang.Object) -> isApplicable
ch.qos.logback.core.rolling.helper.MonoTypedConverter -> ch.qos.logback.core.rolling.helper.MonoTypedConverter:
    boolean isApplicable(java.lang.Object) -> isApplicable
ch.qos.logback.core.rolling.helper.PeriodicityType -> ch.qos.logback.core.rolling.helper.PeriodicityType:
    ch.qos.logback.core.rolling.helper.PeriodicityType ERRONEOUS -> ERRONEOUS
    ch.qos.logback.core.rolling.helper.PeriodicityType TOP_OF_MILLISECOND -> TOP_OF_MILLISECOND
    ch.qos.logback.core.rolling.helper.PeriodicityType TOP_OF_SECOND -> TOP_OF_SECOND
    ch.qos.logback.core.rolling.helper.PeriodicityType TOP_OF_MINUTE -> TOP_OF_MINUTE
    ch.qos.logback.core.rolling.helper.PeriodicityType TOP_OF_HOUR -> TOP_OF_HOUR
    ch.qos.logback.core.rolling.helper.PeriodicityType HALF_DAY -> HALF_DAY
    ch.qos.logback.core.rolling.helper.PeriodicityType TOP_OF_DAY -> TOP_OF_DAY
    ch.qos.logback.core.rolling.helper.PeriodicityType TOP_OF_WEEK -> TOP_OF_WEEK
    ch.qos.logback.core.rolling.helper.PeriodicityType TOP_OF_MONTH -> TOP_OF_MONTH
    ch.qos.logback.core.rolling.helper.PeriodicityType[] VALID_ORDERED_LIST -> VALID_ORDERED_LIST
    ch.qos.logback.core.rolling.helper.PeriodicityType[] $VALUES -> $VALUES
    ch.qos.logback.core.rolling.helper.PeriodicityType[] values() -> values
    ch.qos.logback.core.rolling.helper.PeriodicityType valueOf(java.lang.String) -> valueOf
ch.qos.logback.core.rolling.helper.RenameUtil -> ch.qos.logback.core.rolling.helper.RenameUtil:
    java.lang.String RENAMING_ERROR_URL -> RENAMING_ERROR_URL
    void rename(java.lang.String,java.lang.String) -> rename
    boolean areOnDifferentVolumes(java.io.File,java.io.File) -> areOnDifferentVolumes
    void renameByCopying(java.lang.String,java.lang.String) -> renameByCopying
    void createMissingTargetDirsIfNecessary(java.io.File) -> createMissingTargetDirsIfNecessary
    java.lang.String toString() -> toString
ch.qos.logback.core.rolling.helper.RollingCalendar -> ch.qos.logback.core.rolling.helper.RollingCalendar:
    long serialVersionUID -> serialVersionUID
    java.util.TimeZone GMT_TIMEZONE -> GMT_TIMEZONE
    ch.qos.logback.core.rolling.helper.PeriodicityType periodicityType -> periodicityType
    void init(java.lang.String) -> init
    void setPeriodicityType(ch.qos.logback.core.rolling.helper.PeriodicityType) -> setPeriodicityType
    ch.qos.logback.core.rolling.helper.PeriodicityType getPeriodicityType() -> getPeriodicityType
    long getNextTriggeringMillis(java.util.Date) -> getNextTriggeringMillis
    ch.qos.logback.core.rolling.helper.PeriodicityType computePeriodicityType(java.lang.String) -> computePeriodicityType
    void printPeriodicity(ch.qos.logback.core.spi.ContextAwareBase) -> printPeriodicity
    long periodsElapsed(long,long) -> periodsElapsed
    int diffInMonths(long,long) -> diffInMonths
    java.util.Date getRelativeDate(java.util.Date,int) -> getRelativeDate
    java.util.Date getNextTriggeringDate(java.util.Date) -> getNextTriggeringDate
ch.qos.logback.core.rolling.helper.RollingCalendar$1 -> ch.qos.logback.core.rolling.helper.e:
    int[] $SwitchMap$ch$qos$logback$core$rolling$helper$PeriodicityType -> a
ch.qos.logback.core.rolling.helper.SizeAndTimeBasedArchiveRemover -> ch.qos.logback.core.rolling.helper.SizeAndTimeBasedArchiveRemover:
    void cleanByPeriodOffset(java.util.Date,int) -> cleanByPeriodOffset
ch.qos.logback.core.rolling.helper.TimeBasedArchiveRemover -> ch.qos.logback.core.rolling.helper.TimeBasedArchiveRemover:
    void cleanByPeriodOffset(java.util.Date,int) -> cleanByPeriodOffset
    java.lang.String toString() -> toString
ch.qos.logback.core.rolling.helper.TokenConverter -> ch.qos.logback.core.rolling.helper.TokenConverter:
    int IDENTITY -> IDENTITY
    int INTEGER -> INTEGER
    int DATE -> DATE
    int type -> type
    ch.qos.logback.core.rolling.helper.TokenConverter next -> next
    ch.qos.logback.core.rolling.helper.TokenConverter getNext() -> getNext
    void setNext(ch.qos.logback.core.rolling.helper.TokenConverter) -> setNext
    int getType() -> getType
    void setType(int) -> setType
ch.qos.logback.core.sift.AbstractAppenderFactoryUsingJoran -> ch.qos.logback.core.sift.AbstractAppenderFactoryUsingJoran:
    java.util.List eventList -> eventList
    java.lang.String key -> key
    java.util.Map parentPropertyMap -> parentPropertyMap
    java.util.List removeSiftElement(java.util.List) -> removeSiftElement
    ch.qos.logback.core.sift.SiftingJoranConfiguratorBase getSiftingJoranConfigurator(java.lang.String) -> getSiftingJoranConfigurator
    ch.qos.logback.core.Appender buildAppender(ch.qos.logback.core.Context,java.lang.String) -> buildAppender
    java.util.List getEventList() -> getEventList
ch.qos.logback.core.sift.AbstractDiscriminator -> ch.qos.logback.core.sift.AbstractDiscriminator:
    boolean started -> started
    void start() -> start
    void stop() -> stop
    boolean isStarted() -> isStarted
ch.qos.logback.core.sift.AppenderFactory -> ch.qos.logback.core.sift.AppenderFactory:
    ch.qos.logback.core.Appender buildAppender(ch.qos.logback.core.Context,java.lang.String) -> buildAppender
ch.qos.logback.core.sift.AppenderTracker -> ch.qos.logback.core.sift.AppenderTracker:
    int nopaWarningCount -> nopaWarningCount
    ch.qos.logback.core.Context context -> context
    ch.qos.logback.core.sift.AppenderFactory appenderFactory -> appenderFactory
    ch.qos.logback.core.spi.ContextAwareImpl contextAware -> contextAware
    void processPriorToRemoval(ch.qos.logback.core.Appender) -> processPriorToRemoval
    ch.qos.logback.core.Appender buildComponent(java.lang.String) -> buildComponent
    ch.qos.logback.core.helpers.NOPAppender buildNOPAppender(java.lang.String) -> buildNOPAppender
    boolean isComponentStale(ch.qos.logback.core.Appender) -> isComponentStale
    boolean isComponentStale(java.lang.Object) -> isComponentStale
    java.lang.Object buildComponent(java.lang.String) -> buildComponent
    void processPriorToRemoval(java.lang.Object) -> processPriorToRemoval
ch.qos.logback.core.sift.DefaultDiscriminator -> ch.qos.logback.core.sift.DefaultDiscriminator:
    java.lang.String DEFAULT -> DEFAULT
    java.lang.String getDiscriminatingValue(java.lang.Object) -> getDiscriminatingValue
    java.lang.String getKey() -> getKey
ch.qos.logback.core.sift.Discriminator -> ch.qos.logback.core.sift.Discriminator:
    java.lang.String getDiscriminatingValue(java.lang.Object) -> getDiscriminatingValue
    java.lang.String getKey() -> getKey
ch.qos.logback.core.sift.SiftingAppenderBase -> ch.qos.logback.core.sift.SiftingAppenderBase:
    ch.qos.logback.core.sift.AppenderTracker appenderTracker -> appenderTracker
    ch.qos.logback.core.sift.AppenderFactory appenderFactory -> appenderFactory
    ch.qos.logback.core.util.Duration timeout -> timeout
    int maxAppenderCount -> maxAppenderCount
    ch.qos.logback.core.sift.Discriminator discriminator -> discriminator
    ch.qos.logback.core.util.Duration getTimeout() -> getTimeout
    void setTimeout(ch.qos.logback.core.util.Duration) -> setTimeout
    int getMaxAppenderCount() -> getMaxAppenderCount
    void setMaxAppenderCount(int) -> setMaxAppenderCount
    void setAppenderFactory(ch.qos.logback.core.sift.AppenderFactory) -> setAppenderFactory
    void start() -> start
    void stop() -> stop
    long getTimestamp(java.lang.Object) -> getTimestamp
    void append(java.lang.Object) -> append
    boolean eventMarksEndOfLife(java.lang.Object) -> eventMarksEndOfLife
    ch.qos.logback.core.sift.Discriminator getDiscriminator() -> getDiscriminator
    void setDiscriminator(ch.qos.logback.core.sift.Discriminator) -> setDiscriminator
    ch.qos.logback.core.sift.AppenderTracker getAppenderTracker() -> getAppenderTracker
    java.lang.String getDiscriminatorKey() -> getDiscriminatorKey
ch.qos.logback.core.sift.SiftingJoranConfiguratorBase -> ch.qos.logback.core.sift.SiftingJoranConfiguratorBase:
    java.lang.String key -> key
    java.lang.String value -> value
    java.util.Map parentPropertyMap -> parentPropertyMap
    java.lang.String ONE_AND_ONLY_ONE_URL -> ONE_AND_ONLY_ONE_URL
    int errorEmmissionCount -> errorEmmissionCount
    void addImplicitRules(ch.qos.logback.core.joran.spi.Interpreter) -> addImplicitRules
    void addInstanceRules(ch.qos.logback.core.joran.spi.RuleStore) -> addInstanceRules
    ch.qos.logback.core.Appender getAppender() -> getAppender
    void oneAndOnlyOneCheck(java.util.Map) -> oneAndOnlyOneCheck
    void doConfigure(java.util.List) -> doConfigure
    java.lang.String toString() -> toString
ch.qos.logback.core.spi.AbstractComponentTracker -> ch.qos.logback.core.spi.AbstractComponentTracker:
    boolean ACCESS_ORDERED -> ACCESS_ORDERED
    long LINGERING_TIMEOUT -> LINGERING_TIMEOUT
    long WAIT_BETWEEN_SUCCESSIVE_REMOVAL_ITERATIONS -> WAIT_BETWEEN_SUCCESSIVE_REMOVAL_ITERATIONS
    int maxComponents -> maxComponents
    long timeout -> timeout
    java.util.LinkedHashMap liveMap -> liveMap
    java.util.LinkedHashMap lingerersMap -> lingerersMap
    long lastCheck -> lastCheck
    ch.qos.logback.core.spi.AbstractComponentTracker$RemovalPredicator byExcedent -> byExcedent
    ch.qos.logback.core.spi.AbstractComponentTracker$RemovalPredicator byTimeout -> byTimeout
    ch.qos.logback.core.spi.AbstractComponentTracker$RemovalPredicator byLingering -> byLingering
    void processPriorToRemoval(java.lang.Object) -> processPriorToRemoval
    java.lang.Object buildComponent(java.lang.String) -> buildComponent
    boolean isComponentStale(java.lang.Object) -> isComponentStale
    int getComponentCount() -> getComponentCount
    ch.qos.logback.core.spi.AbstractComponentTracker$Entry getFromEitherMap(java.lang.String) -> getFromEitherMap
    java.lang.Object find(java.lang.String) -> find
    java.lang.Object getOrCreate(java.lang.String,long) -> getOrCreate
    void endOfLife(java.lang.String) -> endOfLife
    void removeStaleComponents(long) -> removeStaleComponents
    void removeExcedentComponents() -> removeExcedentComponents
    void removeStaleComponentsFromMainMap(long) -> removeStaleComponentsFromMainMap
    void removeStaleComponentsFromLingerersMap(long) -> removeStaleComponentsFromLingerersMap
    void genericStaleComponentRemover(java.util.LinkedHashMap,long,ch.qos.logback.core.spi.AbstractComponentTracker$RemovalPredicator) -> genericStaleComponentRemover
    boolean isTooSoonForRemovalIteration(long) -> isTooSoonForRemovalIteration
    boolean isEntryStale(ch.qos.logback.core.spi.AbstractComponentTracker$Entry,long) -> isEntryStale
    boolean isEntryDoneLingering(ch.qos.logback.core.spi.AbstractComponentTracker$Entry,long) -> isEntryDoneLingering
    java.util.Set allKeys() -> allKeys
    java.util.Collection allComponents() -> allComponents
    long getTimeout() -> getTimeout
    void setTimeout(long) -> setTimeout
    int getMaxComponents() -> getMaxComponents
    void setMaxComponents(int) -> setMaxComponents
    boolean access$000(ch.qos.logback.core.spi.AbstractComponentTracker,ch.qos.logback.core.spi.AbstractComponentTracker$Entry,long) -> access$000
    boolean access$100(ch.qos.logback.core.spi.AbstractComponentTracker,ch.qos.logback.core.spi.AbstractComponentTracker$Entry,long) -> access$100
ch.qos.logback.core.spi.AbstractComponentTracker$1 -> ch.qos.logback.core.spi.a:
    ch.qos.logback.core.spi.AbstractComponentTracker this$0 -> a
    boolean isSlatedForRemoval(ch.qos.logback.core.spi.AbstractComponentTracker$Entry,long) -> a
ch.qos.logback.core.spi.AbstractComponentTracker$2 -> ch.qos.logback.core.spi.b:
    ch.qos.logback.core.spi.AbstractComponentTracker this$0 -> a
    boolean isSlatedForRemoval(ch.qos.logback.core.spi.AbstractComponentTracker$Entry,long) -> a
ch.qos.logback.core.spi.AbstractComponentTracker$3 -> ch.qos.logback.core.spi.c:
    ch.qos.logback.core.spi.AbstractComponentTracker this$0 -> a
    boolean isSlatedForRemoval(ch.qos.logback.core.spi.AbstractComponentTracker$Entry,long) -> a
ch.qos.logback.core.spi.AbstractComponentTracker$Entry -> ch.qos.logback.core.spi.d:
    java.lang.String key -> a
    java.lang.Object component -> b
    long timestamp -> c
    void setTimestamp(long) -> a
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
ch.qos.logback.core.spi.AbstractComponentTracker$RemovalPredicator -> ch.qos.logback.core.spi.e:
    boolean isSlatedForRemoval(ch.qos.logback.core.spi.AbstractComponentTracker$Entry,long) -> a
ch.qos.logback.core.spi.AppenderAttachable -> ch.qos.logback.core.spi.AppenderAttachable:
    void addAppender(ch.qos.logback.core.Appender) -> addAppender
    java.util.Iterator iteratorForAppenders() -> iteratorForAppenders
    ch.qos.logback.core.Appender getAppender(java.lang.String) -> getAppender
    boolean isAttached(ch.qos.logback.core.Appender) -> isAttached
    void detachAndStopAllAppenders() -> detachAndStopAllAppenders
    boolean detachAppender(ch.qos.logback.core.Appender) -> detachAppender
    boolean detachAppender(java.lang.String) -> detachAppender
ch.qos.logback.core.spi.AppenderAttachableImpl -> ch.qos.logback.core.spi.AppenderAttachableImpl:
    java.util.concurrent.CopyOnWriteArrayList appenderList -> appenderList
    long START -> START
    void addAppender(ch.qos.logback.core.Appender) -> addAppender
    int appendLoopOnAppenders(java.lang.Object) -> appendLoopOnAppenders
    java.util.Iterator iteratorForAppenders() -> iteratorForAppenders
    ch.qos.logback.core.Appender getAppender(java.lang.String) -> getAppender
    boolean isAttached(ch.qos.logback.core.Appender) -> isAttached
    void detachAndStopAllAppenders() -> detachAndStopAllAppenders
    boolean detachAppender(ch.qos.logback.core.Appender) -> detachAppender
    boolean detachAppender(java.lang.String) -> detachAppender
ch.qos.logback.core.spi.ComponentTracker -> ch.qos.logback.core.spi.ComponentTracker:
    int DEFAULT_TIMEOUT -> DEFAULT_TIMEOUT
    int DEFAULT_MAX_COMPONENTS -> DEFAULT_MAX_COMPONENTS
    int getComponentCount() -> getComponentCount
    java.lang.Object find(java.lang.String) -> find
    java.lang.Object getOrCreate(java.lang.String,long) -> getOrCreate
    void removeStaleComponents(long) -> removeStaleComponents
    void endOfLife(java.lang.String) -> endOfLife
    java.util.Collection allComponents() -> allComponents
    java.util.Set allKeys() -> allKeys
ch.qos.logback.core.spi.ContextAware -> ch.qos.logback.core.spi.ContextAware:
    void setContext(ch.qos.logback.core.Context) -> setContext
    ch.qos.logback.core.Context getContext() -> getContext
    void addStatus(ch.qos.logback.core.status.Status) -> addStatus
    void addInfo(java.lang.String) -> addInfo
    void addInfo(java.lang.String,java.lang.Throwable) -> addInfo
    void addWarn(java.lang.String) -> addWarn
    void addWarn(java.lang.String,java.lang.Throwable) -> addWarn
    void addError(java.lang.String) -> addError
    void addError(java.lang.String,java.lang.Throwable) -> addError
ch.qos.logback.core.spi.ContextAwareBase -> ch.qos.logback.core.spi.ContextAwareBase:
    int noContextWarning -> noContextWarning
    ch.qos.logback.core.Context context -> context
    java.lang.Object declaredOrigin -> declaredOrigin
    void setContext(ch.qos.logback.core.Context) -> setContext
    ch.qos.logback.core.Context getContext() -> getContext
    ch.qos.logback.core.status.StatusManager getStatusManager() -> getStatusManager
    java.lang.Object getDeclaredOrigin() -> getDeclaredOrigin
    void addStatus(ch.qos.logback.core.status.Status) -> addStatus
    void addInfo(java.lang.String) -> addInfo
    void addInfo(java.lang.String,java.lang.Throwable) -> addInfo
    void addWarn(java.lang.String) -> addWarn
    void addWarn(java.lang.String,java.lang.Throwable) -> addWarn
    void addError(java.lang.String) -> addError
    void addError(java.lang.String,java.lang.Throwable) -> addError
ch.qos.logback.core.spi.ContextAwareImpl -> ch.qos.logback.core.spi.ContextAwareImpl:
    int noContextWarning -> noContextWarning
    ch.qos.logback.core.Context context -> context
    java.lang.Object origin -> origin
    java.lang.Object getOrigin() -> getOrigin
    void setContext(ch.qos.logback.core.Context) -> setContext
    ch.qos.logback.core.Context getContext() -> getContext
    ch.qos.logback.core.status.StatusManager getStatusManager() -> getStatusManager
    void addStatus(ch.qos.logback.core.status.Status) -> addStatus
    void addInfo(java.lang.String) -> addInfo
    void addInfo(java.lang.String,java.lang.Throwable) -> addInfo
    void addWarn(java.lang.String) -> addWarn
    void addWarn(java.lang.String,java.lang.Throwable) -> addWarn
    void addError(java.lang.String) -> addError
    void addError(java.lang.String,java.lang.Throwable) -> addError
ch.qos.logback.core.spi.CyclicBufferTracker -> ch.qos.logback.core.spi.CyclicBufferTracker:
    int DEFAULT_NUMBER_OF_BUFFERS -> DEFAULT_NUMBER_OF_BUFFERS
    int DEFAULT_BUFFER_SIZE -> DEFAULT_BUFFER_SIZE
    int bufferSize -> bufferSize
    int getBufferSize() -> getBufferSize
    void setBufferSize(int) -> setBufferSize
    void processPriorToRemoval(ch.qos.logback.core.helpers.CyclicBuffer) -> processPriorToRemoval
    ch.qos.logback.core.helpers.CyclicBuffer buildComponent(java.lang.String) -> buildComponent
    boolean isComponentStale(ch.qos.logback.core.helpers.CyclicBuffer) -> isComponentStale
    java.util.List liveKeysAsOrderedList() -> liveKeysAsOrderedList
    java.util.List lingererKeysAsOrderedList() -> lingererKeysAsOrderedList
    boolean isComponentStale(java.lang.Object) -> isComponentStale
    java.lang.Object buildComponent(java.lang.String) -> buildComponent
    void processPriorToRemoval(java.lang.Object) -> processPriorToRemoval
ch.qos.logback.core.spi.DeferredProcessingAware -> ch.qos.logback.core.spi.DeferredProcessingAware:
    void prepareForDeferredProcessing() -> prepareForDeferredProcessing
ch.qos.logback.core.spi.FilterAttachable -> ch.qos.logback.core.spi.FilterAttachable:
    void addFilter(ch.qos.logback.core.filter.Filter) -> addFilter
    void clearAllFilters() -> clearAllFilters
    java.util.List getCopyOfAttachedFiltersList() -> getCopyOfAttachedFiltersList
    ch.qos.logback.core.spi.FilterReply getFilterChainDecision(java.lang.Object) -> getFilterChainDecision
ch.qos.logback.core.spi.FilterAttachableImpl -> ch.qos.logback.core.spi.FilterAttachableImpl:
    java.util.concurrent.CopyOnWriteArrayList filterList -> filterList
    void addFilter(ch.qos.logback.core.filter.Filter) -> addFilter
    void clearAllFilters() -> clearAllFilters
    ch.qos.logback.core.spi.FilterReply getFilterChainDecision(java.lang.Object) -> getFilterChainDecision
    java.util.List getCopyOfAttachedFiltersList() -> getCopyOfAttachedFiltersList
ch.qos.logback.core.spi.FilterReply -> ch.qos.logback.core.spi.FilterReply:
    ch.qos.logback.core.spi.FilterReply DENY -> DENY
    ch.qos.logback.core.spi.FilterReply NEUTRAL -> NEUTRAL
    ch.qos.logback.core.spi.FilterReply ACCEPT -> ACCEPT
    ch.qos.logback.core.spi.FilterReply[] $VALUES -> $VALUES
    ch.qos.logback.core.spi.FilterReply[] values() -> values
    ch.qos.logback.core.spi.FilterReply valueOf(java.lang.String) -> valueOf
ch.qos.logback.core.spi.LifeCycle -> ch.qos.logback.core.spi.LifeCycle:
    void start() -> start
    void stop() -> stop
    boolean isStarted() -> isStarted
ch.qos.logback.core.spi.LogbackLock -> ch.qos.logback.core.spi.LogbackLock:
ch.qos.logback.core.spi.PreSerializationTransformer -> ch.qos.logback.core.spi.PreSerializationTransformer:
    java.io.Serializable transform(java.lang.Object) -> transform
ch.qos.logback.core.spi.PropertyContainer -> ch.qos.logback.core.spi.PropertyContainer:
    java.lang.String getProperty(java.lang.String) -> getProperty
    java.util.Map getCopyOfPropertyMap() -> getCopyOfPropertyMap
ch.qos.logback.core.spi.PropertyDefiner -> ch.qos.logback.core.spi.PropertyDefiner:
    java.lang.String getPropertyValue() -> getPropertyValue
ch.qos.logback.core.spi.ScanException -> ch.qos.logback.core.spi.ScanException:
    long serialVersionUID -> serialVersionUID
    java.lang.Throwable cause -> cause
    java.lang.Throwable getCause() -> getCause
ch.qos.logback.core.status.ErrorStatus -> ch.qos.logback.core.status.ErrorStatus:
ch.qos.logback.core.status.InfoStatus -> ch.qos.logback.core.status.InfoStatus:
ch.qos.logback.core.status.NopStatusListener -> ch.qos.logback.core.status.NopStatusListener:
    void addStatusEvent(ch.qos.logback.core.status.Status) -> addStatusEvent
ch.qos.logback.core.status.OnConsoleStatusListener -> ch.qos.logback.core.status.OnConsoleStatusListener:
    java.io.PrintStream getPrintStream() -> getPrintStream
    void addNewInstanceToContext(ch.qos.logback.core.Context) -> addNewInstanceToContext
    boolean isStarted() -> isStarted
    void stop() -> stop
    long getRetrospective() -> getRetrospective
    void setRetrospective(long) -> setRetrospective
    void start() -> start
    void addStatusEvent(ch.qos.logback.core.status.Status) -> addStatusEvent
ch.qos.logback.core.status.OnErrorConsoleStatusListener -> ch.qos.logback.core.status.OnErrorConsoleStatusListener:
    java.io.PrintStream getPrintStream() -> getPrintStream
    boolean isStarted() -> isStarted
    void stop() -> stop
    long getRetrospective() -> getRetrospective
    void setRetrospective(long) -> setRetrospective
    void start() -> start
    void addStatusEvent(ch.qos.logback.core.status.Status) -> addStatusEvent
ch.qos.logback.core.status.OnPrintStreamStatusListenerBase -> ch.qos.logback.core.status.a:
    boolean isStarted -> isStarted
    long DEFAULT_RETROSPECTIVE -> DEFAULT_RETROSPECTIVE
    long retrospective -> retrospective
    java.io.PrintStream getPrintStream() -> getPrintStream
    void print(ch.qos.logback.core.status.Status) -> print
    void addStatusEvent(ch.qos.logback.core.status.Status) -> addStatusEvent
    void retrospectivePrint() -> retrospectivePrint
    void start() -> start
    void setRetrospective(long) -> setRetrospective
    long getRetrospective() -> getRetrospective
    void stop() -> stop
    boolean isStarted() -> isStarted
ch.qos.logback.core.status.Status -> ch.qos.logback.core.status.Status:
    int INFO -> INFO
    int WARN -> WARN
    int ERROR -> ERROR
    int getLevel() -> getLevel
    int getEffectiveLevel() -> getEffectiveLevel
    java.lang.Object getOrigin() -> getOrigin
    java.lang.String getMessage() -> getMessage
    java.lang.Throwable getThrowable() -> getThrowable
    java.lang.Long getDate() -> getDate
    boolean hasChildren() -> hasChildren
    void add(ch.qos.logback.core.status.Status) -> add
    boolean remove(ch.qos.logback.core.status.Status) -> remove
    java.util.Iterator iterator() -> iterator
ch.qos.logback.core.status.StatusBase -> ch.qos.logback.core.status.StatusBase:
    java.util.List EMPTY_LIST -> EMPTY_LIST
    int level -> level
    java.lang.String message -> message
    java.lang.Object origin -> origin
    java.util.List childrenList -> childrenList
    java.lang.Throwable throwable -> throwable
    long date -> date
    void add(ch.qos.logback.core.status.Status) -> add
    boolean hasChildren() -> hasChildren
    java.util.Iterator iterator() -> iterator
    boolean remove(ch.qos.logback.core.status.Status) -> remove
    int getLevel() -> getLevel
    int getEffectiveLevel() -> getEffectiveLevel
    java.lang.String getMessage() -> getMessage
    java.lang.Object getOrigin() -> getOrigin
    java.lang.Throwable getThrowable() -> getThrowable
    java.lang.Long getDate() -> getDate
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
ch.qos.logback.core.status.StatusListener -> ch.qos.logback.core.status.StatusListener:
    void addStatusEvent(ch.qos.logback.core.status.Status) -> addStatusEvent
ch.qos.logback.core.status.StatusListenerAsList -> ch.qos.logback.core.status.StatusListenerAsList:
    java.util.List statusList -> statusList
    void addStatusEvent(ch.qos.logback.core.status.Status) -> addStatusEvent
    java.util.List getStatusList() -> getStatusList
ch.qos.logback.core.status.StatusManager -> ch.qos.logback.core.status.StatusManager:
    void add(ch.qos.logback.core.status.Status) -> add
    java.util.List getCopyOfStatusList() -> getCopyOfStatusList
    int getCount() -> getCount
    void add(ch.qos.logback.core.status.StatusListener) -> add
    boolean addUniquely(ch.qos.logback.core.status.StatusListener,java.lang.Object) -> addUniquely
    void remove(ch.qos.logback.core.status.StatusListener) -> remove
    void clear() -> clear
    java.util.List getCopyOfStatusListenerList() -> getCopyOfStatusListenerList
ch.qos.logback.core.status.StatusUtil -> ch.qos.logback.core.status.StatusUtil:
    ch.qos.logback.core.status.StatusManager sm -> sm
    boolean contextHasStatusListener(ch.qos.logback.core.Context) -> contextHasStatusListener
    java.util.List filterStatusListByTimeThreshold(java.util.List,long) -> filterStatusListByTimeThreshold
    void addStatus(ch.qos.logback.core.status.Status) -> addStatus
    void addInfo(java.lang.Object,java.lang.String) -> addInfo
    void addWarn(java.lang.Object,java.lang.String) -> addWarn
    void addError(java.lang.Object,java.lang.String,java.lang.Throwable) -> addError
    boolean hasXMLParsingErrors(long) -> hasXMLParsingErrors
    boolean noXMLParsingErrorsOccurred(long) -> noXMLParsingErrorsOccurred
    int getHighestLevel(long) -> getHighestLevel
    boolean isErrorFree(long) -> isErrorFree
    boolean containsMatch(long,int,java.lang.String) -> containsMatch
    boolean containsMatch(int,java.lang.String) -> containsMatch
    boolean containsMatch(java.lang.String) -> containsMatch
    int matchCount(java.lang.String) -> matchCount
    boolean containsException(java.lang.Class) -> containsException
    long timeOfLastReset() -> timeOfLastReset
ch.qos.logback.core.status.WarnStatus -> ch.qos.logback.core.status.WarnStatus:
ch.qos.logback.core.subst.Node -> ch.qos.logback.core.subst.Node:
    ch.qos.logback.core.subst.Node$Type type -> type
    java.lang.Object payload -> payload
    java.lang.Object defaultPart -> defaultPart
    ch.qos.logback.core.subst.Node next -> next
    void append(ch.qos.logback.core.subst.Node) -> append
    java.lang.String toString() -> toString
    void dump() -> dump
    void recursive(ch.qos.logback.core.subst.Node,java.lang.StringBuilder) -> recursive
    void setNext(ch.qos.logback.core.subst.Node) -> setNext
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
ch.qos.logback.core.subst.Node$1 -> ch.qos.logback.core.subst.a:
    int[] $SwitchMap$ch$qos$logback$core$subst$Node$Type -> a
ch.qos.logback.core.subst.Node$Type -> ch.qos.logback.core.subst.b:
    ch.qos.logback.core.subst.Node$Type LITERAL -> a
    ch.qos.logback.core.subst.Node$Type VARIABLE -> b
    ch.qos.logback.core.subst.Node$Type[] $VALUES -> c
    ch.qos.logback.core.subst.Node$Type[] values() -> values
    ch.qos.logback.core.subst.Node$Type valueOf(java.lang.String) -> valueOf
ch.qos.logback.core.subst.NodeToStringTransformer -> ch.qos.logback.core.subst.NodeToStringTransformer:
    ch.qos.logback.core.subst.Node node -> node
    ch.qos.logback.core.spi.PropertyContainer propertyContainer0 -> propertyContainer0
    ch.qos.logback.core.spi.PropertyContainer propertyContainer1 -> propertyContainer1
    java.lang.String substituteVariable(java.lang.String,ch.qos.logback.core.spi.PropertyContainer,ch.qos.logback.core.spi.PropertyContainer) -> substituteVariable
    ch.qos.logback.core.subst.Node tokenizeAndParseString(java.lang.String) -> tokenizeAndParseString
    java.lang.String transform() -> transform
    void compileNode(ch.qos.logback.core.subst.Node,java.lang.StringBuilder,java.util.Stack) -> compileNode
    void handleVariable(ch.qos.logback.core.subst.Node,java.lang.StringBuilder,java.util.Stack) -> handleVariable
    java.lang.String lookupKey(java.lang.String) -> lookupKey
    void handleLiteral(ch.qos.logback.core.subst.Node,java.lang.StringBuilder) -> handleLiteral
    java.lang.String variableNodeValue(ch.qos.logback.core.subst.Node) -> variableNodeValue
    java.lang.String constructRecursionErrorMessage(java.util.Stack) -> constructRecursionErrorMessage
    boolean haveVisitedNodeAlready(ch.qos.logback.core.subst.Node,java.util.Stack) -> haveVisitedNodeAlready
    boolean equalNodes(ch.qos.logback.core.subst.Node,ch.qos.logback.core.subst.Node) -> equalNodes
ch.qos.logback.core.subst.NodeToStringTransformer$1 -> ch.qos.logback.core.subst.c:
    int[] $SwitchMap$ch$qos$logback$core$subst$Node$Type -> a
ch.qos.logback.core.subst.Parser -> ch.qos.logback.core.subst.Parser:
    java.util.List tokenList -> tokenList
    int pointer -> pointer
    ch.qos.logback.core.subst.Node parse() -> parse
    ch.qos.logback.core.subst.Node E() -> E
    ch.qos.logback.core.subst.Node Eopt() -> Eopt
    ch.qos.logback.core.subst.Node T() -> T
    ch.qos.logback.core.subst.Node makeNewLiteralNode(java.lang.String) -> makeNewLiteralNode
    ch.qos.logback.core.subst.Node V() -> V
    ch.qos.logback.core.subst.Node C() -> C
    boolean isDefaultToken(ch.qos.logback.core.subst.Token) -> isDefaultToken
    void advanceTokenPointer() -> advanceTokenPointer
    void expectNotNull(ch.qos.logback.core.subst.Token,java.lang.String) -> expectNotNull
    void expectCurlyRight(ch.qos.logback.core.subst.Token) -> expectCurlyRight
    ch.qos.logback.core.subst.Token peekAtCurentToken() -> peekAtCurentToken
ch.qos.logback.core.subst.Parser$1 -> ch.qos.logback.core.subst.d:
    int[] $SwitchMap$ch$qos$logback$core$subst$Token$Type -> a
ch.qos.logback.core.subst.Token -> ch.qos.logback.core.subst.Token:
    ch.qos.logback.core.subst.Token START_TOKEN -> START_TOKEN
    ch.qos.logback.core.subst.Token CURLY_LEFT_TOKEN -> CURLY_LEFT_TOKEN
    ch.qos.logback.core.subst.Token CURLY_RIGHT_TOKEN -> CURLY_RIGHT_TOKEN
    ch.qos.logback.core.subst.Token DEFAULT_SEP_TOKEN -> DEFAULT_SEP_TOKEN
    ch.qos.logback.core.subst.Token$Type type -> type
    java.lang.String payload -> payload
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
ch.qos.logback.core.subst.Token$Type -> ch.qos.logback.core.subst.Token$Type:
    ch.qos.logback.core.subst.Token$Type LITERAL -> LITERAL
    ch.qos.logback.core.subst.Token$Type START -> START
    ch.qos.logback.core.subst.Token$Type CURLY_LEFT -> CURLY_LEFT
    ch.qos.logback.core.subst.Token$Type CURLY_RIGHT -> CURLY_RIGHT
    ch.qos.logback.core.subst.Token$Type DEFAULT -> DEFAULT
    ch.qos.logback.core.subst.Token$Type[] $VALUES -> $VALUES
    ch.qos.logback.core.subst.Token$Type[] values() -> values
    ch.qos.logback.core.subst.Token$Type valueOf(java.lang.String) -> valueOf
ch.qos.logback.core.subst.Tokenizer -> ch.qos.logback.core.subst.Tokenizer:
    java.lang.String pattern -> pattern
    int patternLength -> patternLength
    ch.qos.logback.core.subst.Tokenizer$TokenizerState state -> state
    int pointer -> pointer
    java.util.List tokenize() -> tokenize
    void handleDefaultValueState(char,java.util.List,java.lang.StringBuilder) -> handleDefaultValueState
    void handleStartState(char,java.util.List,java.lang.StringBuilder) -> handleStartState
    void handleLiteralState(char,java.util.List,java.lang.StringBuilder) -> handleLiteralState
    void addLiteralToken(java.util.List,java.lang.StringBuilder) -> addLiteralToken
ch.qos.logback.core.subst.Tokenizer$1 -> ch.qos.logback.core.subst.e:
    int[] $SwitchMap$ch$qos$logback$core$subst$Tokenizer$TokenizerState -> a
ch.qos.logback.core.subst.Tokenizer$TokenizerState -> ch.qos.logback.core.subst.f:
    ch.qos.logback.core.subst.Tokenizer$TokenizerState LITERAL_STATE -> a
    ch.qos.logback.core.subst.Tokenizer$TokenizerState START_STATE -> b
    ch.qos.logback.core.subst.Tokenizer$TokenizerState DEFAULT_VAL_STATE -> c
    ch.qos.logback.core.subst.Tokenizer$TokenizerState[] $VALUES -> d
    ch.qos.logback.core.subst.Tokenizer$TokenizerState[] values() -> values
    ch.qos.logback.core.subst.Tokenizer$TokenizerState valueOf(java.lang.String) -> valueOf
ch.qos.logback.core.util.AggregationType -> ch.qos.logback.core.util.AggregationType:
    ch.qos.logback.core.util.AggregationType NOT_FOUND -> NOT_FOUND
    ch.qos.logback.core.util.AggregationType AS_BASIC_PROPERTY -> AS_BASIC_PROPERTY
    ch.qos.logback.core.util.AggregationType AS_COMPLEX_PROPERTY -> AS_COMPLEX_PROPERTY
    ch.qos.logback.core.util.AggregationType AS_BASIC_PROPERTY_COLLECTION -> AS_BASIC_PROPERTY_COLLECTION
    ch.qos.logback.core.util.AggregationType AS_COMPLEX_PROPERTY_COLLECTION -> AS_COMPLEX_PROPERTY_COLLECTION
    ch.qos.logback.core.util.AggregationType[] $VALUES -> $VALUES
    ch.qos.logback.core.util.AggregationType[] values() -> values
    ch.qos.logback.core.util.AggregationType valueOf(java.lang.String) -> valueOf
ch.qos.logback.core.util.CachingDateFormatter -> ch.qos.logback.core.util.CachingDateFormatter:
    long lastTimestamp -> lastTimestamp
    java.lang.String cachedStr -> cachedStr
    java.text.SimpleDateFormat sdf -> sdf
    java.lang.String format(long) -> format
    void setTimeZone(java.util.TimeZone) -> setTimeZone
ch.qos.logback.core.util.CharSequenceState -> ch.qos.logback.core.util.a:
    char c -> a
    int occurrences -> b
    void incrementOccurrences() -> a
ch.qos.logback.core.util.CharSequenceToRegexMapper -> ch.qos.logback.core.util.b:
    java.lang.String toRegex(ch.qos.logback.core.util.CharSequenceState) -> a
    java.lang.String number(int) -> a
ch.qos.logback.core.util.CloseUtil -> ch.qos.logback.core.util.CloseUtil:
    void closeQuietly(java.io.Closeable) -> closeQuietly
    void closeQuietly(java.net.Socket) -> closeQuietly
    void closeQuietly(java.net.ServerSocket) -> closeQuietly
ch.qos.logback.core.util.ContentTypeUtil -> ch.qos.logback.core.util.ContentTypeUtil:
    boolean isTextual(java.lang.String) -> isTextual
    java.lang.String getSubType(java.lang.String) -> getSubType
ch.qos.logback.core.util.ContextUtil -> ch.qos.logback.core.util.ContextUtil:
    void addHostNameAsProperty() -> addHostNameAsProperty
    void addProperties(java.util.Properties) -> addProperties
ch.qos.logback.core.util.DatePatternToRegexUtil -> ch.qos.logback.core.util.DatePatternToRegexUtil:
    java.lang.String datePattern -> datePattern
    int datePatternLength -> datePatternLength
    ch.qos.logback.core.util.CharSequenceToRegexMapper regexMapper -> regexMapper
    java.lang.String toRegex() -> toRegex
    java.util.List tokenize() -> tokenize
ch.qos.logback.core.util.DelayStrategy -> ch.qos.logback.core.util.DelayStrategy:
    long nextDelay() -> nextDelay
ch.qos.logback.core.util.Duration -> ch.qos.logback.core.util.Duration:
    java.lang.String DOUBLE_PART -> DOUBLE_PART
    int DOUBLE_GROUP -> DOUBLE_GROUP
    java.lang.String UNIT_PART -> UNIT_PART
    int UNIT_GROUP -> UNIT_GROUP
    java.util.regex.Pattern DURATION_PATTERN -> DURATION_PATTERN
    long SECONDS_COEFFICIENT -> SECONDS_COEFFICIENT
    long MINUTES_COEFFICIENT -> MINUTES_COEFFICIENT
    long HOURS_COEFFICIENT -> HOURS_COEFFICIENT
    long DAYS_COEFFICIENT -> DAYS_COEFFICIENT
    long millis -> millis
    ch.qos.logback.core.util.Duration buildByMilliseconds(double) -> buildByMilliseconds
    ch.qos.logback.core.util.Duration buildBySeconds(double) -> buildBySeconds
    ch.qos.logback.core.util.Duration buildByMinutes(double) -> buildByMinutes
    ch.qos.logback.core.util.Duration buildByHours(double) -> buildByHours
    ch.qos.logback.core.util.Duration buildByDays(double) -> buildByDays
    ch.qos.logback.core.util.Duration buildUnbounded() -> buildUnbounded
    long getMilliseconds() -> getMilliseconds
    ch.qos.logback.core.util.Duration valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
ch.qos.logback.core.util.DynamicClassLoadingException -> ch.qos.logback.core.util.DynamicClassLoadingException:
    long serialVersionUID -> serialVersionUID
ch.qos.logback.core.util.EnvUtil -> ch.qos.logback.core.util.EnvUtil:
    boolean isAndroidOS() -> isAndroidOS
    boolean isJDK_N_OrHigher(int) -> isJDK_N_OrHigher
    boolean isJDK5() -> isJDK5
    boolean isJDK6OrHigher() -> isJDK6OrHigher
    boolean isJDK7OrHigher() -> isJDK7OrHigher
    boolean isWindows() -> isWindows
ch.qos.logback.core.util.ExecutorServiceUtil -> ch.qos.logback.core.util.ExecutorServiceUtil:
    java.util.concurrent.ExecutorService newExecutorService() -> newExecutorService
    void shutdown(java.util.concurrent.ExecutorService) -> shutdown
ch.qos.logback.core.util.FileSize -> ch.qos.logback.core.util.FileSize:
    java.lang.String LENGTH_PART -> LENGTH_PART
    int DOUBLE_GROUP -> DOUBLE_GROUP
    java.lang.String UNIT_PART -> UNIT_PART
    int UNIT_GROUP -> UNIT_GROUP
    java.util.regex.Pattern FILE_SIZE_PATTERN -> FILE_SIZE_PATTERN
    long KB_COEFFICIENT -> KB_COEFFICIENT
    long MB_COEFFICIENT -> MB_COEFFICIENT
    long GB_COEFFICIENT -> GB_COEFFICIENT
    long size -> size
    long getSize() -> getSize
    ch.qos.logback.core.util.FileSize valueOf(java.lang.String) -> valueOf
ch.qos.logback.core.util.FileUtil -> ch.qos.logback.core.util.FileUtil:
    int BUF_SIZE -> BUF_SIZE
    java.net.URL fileToURL(java.io.File) -> fileToURL
    boolean isParentDirectoryCreationRequired(java.io.File) -> isParentDirectoryCreationRequired
    boolean createMissingParentDirectories(java.io.File) -> createMissingParentDirectories
    java.lang.String prefixRelativePath(java.lang.String,java.lang.String) -> prefixRelativePath
    void copy(java.lang.String,java.lang.String) -> copy
ch.qos.logback.core.util.FixedDelay -> ch.qos.logback.core.util.FixedDelay:
    long subsequentDelay -> subsequentDelay
    long nextDelay -> nextDelay
    long nextDelay() -> nextDelay
ch.qos.logback.core.util.IncompatibleClassException -> ch.qos.logback.core.util.IncompatibleClassException:
    long serialVersionUID -> serialVersionUID
    java.lang.Class requestedClass -> requestedClass
    java.lang.Class obtainedClass -> obtainedClass
ch.qos.logback.core.util.InvocationGate -> ch.qos.logback.core.util.InvocationGate:
    int MAX_MASK -> MAX_MASK
    long mask -> mask
    long lastMaskCheck -> lastMaskCheck
    long invocationCounter -> invocationCounter
    long thresholdForMaskIncrease -> thresholdForMaskIncrease
    long thresholdForMaskDecrease -> thresholdForMaskDecrease
    boolean skipFurtherWork() -> skipFurtherWork
    void updateMaskIfNecessary(long) -> updateMaskIfNecessary
ch.qos.logback.core.util.Loader -> ch.qos.logback.core.util.Loader:
    java.lang.String TSTR -> TSTR
    boolean ignoreTCL -> ignoreTCL
    java.lang.String IGNORE_TCL_PROPERTY_NAME -> IGNORE_TCL_PROPERTY_NAME
    boolean HAS_GET_CLASS_LOADER_PERMISSION -> HAS_GET_CLASS_LOADER_PERMISSION
    java.util.Set getResourceOccurrenceCount(java.lang.String,java.lang.ClassLoader) -> getResourceOccurrenceCount
    java.net.URL getResource(java.lang.String,java.lang.ClassLoader) -> getResource
    java.net.URL getResourceBySelfClassLoader(java.lang.String) -> getResourceBySelfClassLoader
    java.lang.ClassLoader getTCL() -> getTCL
    java.lang.Class loadClass(java.lang.String,ch.qos.logback.core.Context) -> loadClass
    java.lang.ClassLoader getClassLoaderOfObject(java.lang.Object) -> getClassLoaderOfObject
    java.lang.ClassLoader getClassLoaderAsPrivileged(java.lang.Class) -> getClassLoaderAsPrivileged
    java.lang.ClassLoader getClassLoaderOfClass(java.lang.Class) -> getClassLoaderOfClass
    java.lang.Class loadClass(java.lang.String) -> loadClass
ch.qos.logback.core.util.Loader$1 -> ch.qos.logback.core.util.c:
    java.lang.Boolean run() -> a
    java.lang.Object run() -> run
ch.qos.logback.core.util.Loader$2 -> ch.qos.logback.core.util.d:
    java.lang.Class val$clazz -> a
    java.lang.ClassLoader run() -> a
    java.lang.Object run() -> run
ch.qos.logback.core.util.LocationUtil -> ch.qos.logback.core.util.LocationUtil:
    java.lang.String SCHEME_PATTERN -> SCHEME_PATTERN
    java.lang.String CLASSPATH_SCHEME -> CLASSPATH_SCHEME
    java.net.URL urlForResource(java.lang.String) -> urlForResource
ch.qos.logback.core.util.OptionHelper -> ch.qos.logback.core.util.OptionHelper:
    java.lang.String DELIM_START -> DELIM_START
    char DELIM_STOP -> DELIM_STOP
    java.lang.String DELIM_DEFAULT -> DELIM_DEFAULT
    int DELIM_START_LEN -> DELIM_START_LEN
    int DELIM_STOP_LEN -> DELIM_STOP_LEN
    int DELIM_DEFAULT_LEN -> DELIM_DEFAULT_LEN
    java.lang.String _IS_UNDEFINED -> _IS_UNDEFINED
    java.lang.Object instantiateByClassName(java.lang.String,java.lang.Class,ch.qos.logback.core.Context) -> instantiateByClassName
    java.lang.Object instantiateByClassNameAndParameter(java.lang.String,java.lang.Class,ch.qos.logback.core.Context,java.lang.Class,java.lang.Object) -> instantiateByClassNameAndParameter
    java.lang.Object instantiateByClassName(java.lang.String,java.lang.Class,java.lang.ClassLoader) -> instantiateByClassName
    java.lang.Object instantiateByClassNameAndParameter(java.lang.String,java.lang.Class,java.lang.ClassLoader,java.lang.Class,java.lang.Object) -> instantiateByClassNameAndParameter
    java.lang.String substVars(java.lang.String,ch.qos.logback.core.spi.PropertyContainer) -> substVars
    java.lang.String substVars(java.lang.String,ch.qos.logback.core.spi.PropertyContainer,ch.qos.logback.core.spi.PropertyContainer) -> substVars
    java.lang.String propertyLookup(java.lang.String,ch.qos.logback.core.spi.PropertyContainer,ch.qos.logback.core.spi.PropertyContainer) -> propertyLookup
    java.lang.String getSystemProperty(java.lang.String,java.lang.String) -> getSystemProperty
    java.lang.String getEnv(java.lang.String) -> getEnv
    java.lang.String getAndroidSystemProperty(java.lang.String) -> getAndroidSystemProperty
    java.lang.String getSystemProperty(java.lang.String) -> getSystemProperty
    void setSystemProperties(ch.qos.logback.core.spi.ContextAware,java.util.Properties) -> setSystemProperties
    void setSystemProperty(ch.qos.logback.core.spi.ContextAware,java.lang.String,java.lang.String) -> setSystemProperty
    java.util.Properties getSystemProperties() -> getSystemProperties
    java.lang.String[] extractDefaultReplacement(java.lang.String) -> extractDefaultReplacement
    boolean toBoolean(java.lang.String,boolean) -> toBoolean
    boolean isEmpty(java.lang.String) -> isEmpty
ch.qos.logback.core.util.PropertySetterException -> ch.qos.logback.core.util.PropertySetterException:
    long serialVersionUID -> serialVersionUID
ch.qos.logback.core.util.StatusPrinter -> ch.qos.logback.core.util.StatusPrinter:
    java.io.PrintStream ps -> ps
    ch.qos.logback.core.util.CachingDateFormatter cachingDateFormat -> cachingDateFormat
    void setPrintStream(java.io.PrintStream) -> setPrintStream
    void printInCaseOfErrorsOrWarnings(ch.qos.logback.core.Context) -> printInCaseOfErrorsOrWarnings
    void printInCaseOfErrorsOrWarnings(ch.qos.logback.core.Context,long) -> printInCaseOfErrorsOrWarnings
    void printIfErrorsOccured(ch.qos.logback.core.Context) -> printIfErrorsOccured
    void print(ch.qos.logback.core.Context) -> print
    void print(ch.qos.logback.core.Context,long) -> print
    void print(ch.qos.logback.core.status.StatusManager) -> print
    void print(ch.qos.logback.core.status.StatusManager,long) -> print
    void print(java.util.List) -> print
    void buildStrFromStatusList(java.lang.StringBuilder,java.util.List) -> buildStrFromStatusList
    void appendThrowable(java.lang.StringBuilder,java.lang.Throwable) -> appendThrowable
    void buildStr(java.lang.StringBuilder,java.lang.String,ch.qos.logback.core.status.Status) -> buildStr
ch.qos.logback.core.util.StringCollectionUtil -> ch.qos.logback.core.util.StringCollectionUtil:
    void retainMatching(java.util.Collection,java.lang.String[]) -> retainMatching
    void retainMatching(java.util.Collection,java.util.Collection) -> retainMatching
    void removeMatching(java.util.Collection,java.lang.String[]) -> removeMatching
    void removeMatching(java.util.Collection,java.util.Collection) -> removeMatching
ch.qos.logback.repackage.brut.androlib.AndrolibException -> ch.qos.logback.repackage.brut.androlib.AndrolibException:
ch.qos.logback.repackage.brut.androlib.res.decoder.AXmlResourceParser -> ch.qos.logback.repackage.brut.androlib.res.decoder.AXmlResourceParser:
    ch.qos.logback.repackage.brut.util.ExtDataInput m_reader -> m_reader
    ch.qos.logback.repackage.brut.androlib.res.decoder.ResAttrDecoder mAttrDecoder -> mAttrDecoder
    ch.qos.logback.repackage.brut.androlib.AndrolibException mFirstError -> mFirstError
    boolean m_operational -> m_operational
    ch.qos.logback.repackage.brut.androlib.res.decoder.StringBlock m_strings -> m_strings
    int[] m_resourceIDs -> m_resourceIDs
    ch.qos.logback.repackage.brut.androlib.res.decoder.AXmlResourceParser$NamespaceStack m_namespaces -> m_namespaces
    boolean m_decreaseDepth -> m_decreaseDepth
    int m_event -> m_event
    int m_lineNumber -> m_lineNumber
    int m_name -> m_name
    int m_namespaceUri -> m_namespaceUri
    int[] m_attributes -> m_attributes
    int m_idAttribute -> m_idAttribute
    int m_classAttribute -> m_classAttribute
    int m_styleAttribute -> m_styleAttribute
    java.util.logging.Logger LOGGER -> LOGGER
    java.lang.String E_NOT_SUPPORTED -> E_NOT_SUPPORTED
    int ATTRIBUTE_IX_NAMESPACE_URI -> ATTRIBUTE_IX_NAMESPACE_URI
    int ATTRIBUTE_IX_NAME -> ATTRIBUTE_IX_NAME
    int ATTRIBUTE_IX_VALUE_STRING -> ATTRIBUTE_IX_VALUE_STRING
    int ATTRIBUTE_IX_VALUE_TYPE -> ATTRIBUTE_IX_VALUE_TYPE
    int ATTRIBUTE_IX_VALUE_DATA -> ATTRIBUTE_IX_VALUE_DATA
    int ATTRIBUTE_LENGHT -> ATTRIBUTE_LENGHT
    int CHUNK_AXML_FILE -> CHUNK_AXML_FILE
    int CHUNK_RESOURCEIDS -> CHUNK_RESOURCEIDS
    int CHUNK_XML_FIRST -> CHUNK_XML_FIRST
    int CHUNK_XML_START_NAMESPACE -> CHUNK_XML_START_NAMESPACE
    int CHUNK_XML_END_NAMESPACE -> CHUNK_XML_END_NAMESPACE
    int CHUNK_XML_START_TAG -> CHUNK_XML_START_TAG
    int CHUNK_XML_END_TAG -> CHUNK_XML_END_TAG
    int CHUNK_XML_TEXT -> CHUNK_XML_TEXT
    int CHUNK_XML_LAST -> CHUNK_XML_LAST
    ch.qos.logback.repackage.brut.androlib.AndrolibException getFirstError() -> getFirstError
    ch.qos.logback.repackage.brut.androlib.res.decoder.ResAttrDecoder getAttrDecoder() -> getAttrDecoder
    void setAttrDecoder(ch.qos.logback.repackage.brut.androlib.res.decoder.ResAttrDecoder) -> setAttrDecoder
    void open(java.io.InputStream) -> open
    void close() -> close
    int next() -> next
    int nextToken() -> nextToken
    int nextTag() -> nextTag
    java.lang.String nextText() -> nextText
    void require(int,java.lang.String,java.lang.String) -> require
    int getDepth() -> getDepth
    int getEventType() -> getEventType
    int getLineNumber() -> getLineNumber
    java.lang.String getName() -> getName
    java.lang.String getText() -> getText
    char[] getTextCharacters(int[]) -> getTextCharacters
    java.lang.String getNamespace() -> getNamespace
    java.lang.String getPrefix() -> getPrefix
    java.lang.String getPositionDescription() -> getPositionDescription
    int getNamespaceCount(int) -> getNamespaceCount
    java.lang.String getNamespacePrefix(int) -> getNamespacePrefix
    java.lang.String getNamespaceUri(int) -> getNamespaceUri
    java.lang.String getClassAttribute() -> getClassAttribute
    java.lang.String getIdAttribute() -> getIdAttribute
    int getIdAttributeResourceValue(int) -> getIdAttributeResourceValue
    int getStyleAttribute() -> getStyleAttribute
    int getAttributeCount() -> getAttributeCount
    java.lang.String getAttributeNamespace(int) -> getAttributeNamespace
    java.lang.String getAttributePrefix(int) -> getAttributePrefix
    java.lang.String getAttributeName(int) -> getAttributeName
    int getAttributeNameResource(int) -> getAttributeNameResource
    int getAttributeValueType(int) -> getAttributeValueType
    int getAttributeValueData(int) -> getAttributeValueData
    java.lang.String getAttributeValue(int) -> getAttributeValue
    boolean getAttributeBooleanValue(int,boolean) -> getAttributeBooleanValue
    float getAttributeFloatValue(int,float) -> getAttributeFloatValue
    int getAttributeIntValue(int,int) -> getAttributeIntValue
    int getAttributeUnsignedIntValue(int,int) -> getAttributeUnsignedIntValue
    int getAttributeResourceValue(int,int) -> getAttributeResourceValue
    java.lang.String getAttributeValue(java.lang.String,java.lang.String) -> getAttributeValue
    boolean getAttributeBooleanValue(java.lang.String,java.lang.String,boolean) -> getAttributeBooleanValue
    float getAttributeFloatValue(java.lang.String,java.lang.String,float) -> getAttributeFloatValue
    int getAttributeIntValue(java.lang.String,java.lang.String,int) -> getAttributeIntValue
    int getAttributeUnsignedIntValue(java.lang.String,java.lang.String,int) -> getAttributeUnsignedIntValue
    int getAttributeResourceValue(java.lang.String,java.lang.String,int) -> getAttributeResourceValue
    int getAttributeListValue(int,java.lang.String[],int) -> getAttributeListValue
    int getAttributeListValue(java.lang.String,java.lang.String,java.lang.String[],int) -> getAttributeListValue
    java.lang.String getAttributeType(int) -> getAttributeType
    boolean isAttributeDefault(int) -> isAttributeDefault
    void setInput(java.io.InputStream,java.lang.String) -> setInput
    void setInput(java.io.Reader) -> setInput
    java.lang.String getInputEncoding() -> getInputEncoding
    int getColumnNumber() -> getColumnNumber
    boolean isEmptyElementTag() -> isEmptyElementTag
    boolean isWhitespace() -> isWhitespace
    void defineEntityReplacementText(java.lang.String,java.lang.String) -> defineEntityReplacementText
    java.lang.String getNamespace(java.lang.String) -> getNamespace
    java.lang.Object getProperty(java.lang.String) -> getProperty
    void setProperty(java.lang.String,java.lang.Object) -> setProperty
    boolean getFeature(java.lang.String) -> getFeature
    void setFeature(java.lang.String,boolean) -> setFeature
    ch.qos.logback.repackage.brut.androlib.res.decoder.StringBlock getStrings() -> getStrings
    int getAttributeOffset(int) -> getAttributeOffset
    int findAttribute(java.lang.String,java.lang.String) -> findAttribute
    void resetEventInfo() -> resetEventInfo
    void doNext() -> doNext
    void setFirstError(ch.qos.logback.repackage.brut.androlib.AndrolibException) -> setFirstError
ch.qos.logback.repackage.brut.androlib.res.decoder.AXmlResourceParser$NamespaceStack -> ch.qos.logback.repackage.brut.androlib.res.decoder.a:
    int[] m_data -> a
    int m_dataLength -> b
    int m_count -> c
    int m_depth -> d
    void reset() -> a
    int getCurrentCount() -> b
    int getAccumulatedCount(int) -> a
    void push(int,int) -> a
    boolean pop() -> c
    int getPrefix(int) -> b
    int getUri(int) -> c
    int findPrefix(int) -> d
    int getDepth() -> d
    void increaseDepth() -> e
    void decreaseDepth() -> f
    void ensureDataCapacity(int) -> e
    int find(int,boolean) -> a
    int get(int,boolean) -> b
ch.qos.logback.repackage.brut.androlib.res.decoder.ResAttrDecoder -> ch.qos.logback.repackage.brut.androlib.res.decoder.ResAttrDecoder:
    java.lang.String decode(int,int,java.lang.String,int) -> decode
ch.qos.logback.repackage.brut.androlib.res.decoder.StringBlock -> ch.qos.logback.repackage.brut.androlib.res.decoder.StringBlock:
    int[] m_stringOffsets -> m_stringOffsets
    byte[] m_strings -> m_strings
    int[] m_styleOffsets -> m_styleOffsets
    int[] m_styles -> m_styles
    boolean m_isUTF8 -> m_isUTF8
    java.nio.charset.CharsetDecoder UTF16LE_DECODER -> UTF16LE_DECODER
    java.nio.charset.CharsetDecoder UTF8_DECODER -> UTF8_DECODER
    java.util.logging.Logger LOGGER -> LOGGER
    int CHUNK_TYPE -> CHUNK_TYPE
    int UTF8_FLAG -> UTF8_FLAG
    ch.qos.logback.repackage.brut.androlib.res.decoder.StringBlock read(ch.qos.logback.repackage.brut.util.ExtDataInput) -> read
    int getCount() -> getCount
    java.lang.String getString(int) -> getString
    java.lang.CharSequence get(int) -> get
    java.lang.String getHTML(int) -> getHTML
    void outputStyleTag(java.lang.String,java.lang.StringBuilder,boolean) -> outputStyleTag
    int find(java.lang.String) -> find
    int[] getStyle(int) -> getStyle
    java.lang.String decodeString(int,int) -> decodeString
    int getShort(byte[],int) -> getShort
    int getShort(int[],int) -> getShort
    int[] getVarint(byte[],int) -> getVarint
ch.qos.logback.repackage.brut.androlib.res.xml.ResXmlEncoders -> ch.qos.logback.repackage.brut.androlib.res.xml.ResXmlEncoders:
    java.lang.String escapeXmlChars(java.lang.String) -> escapeXmlChars
    java.lang.String encodeAsResXmlAttr(java.lang.String) -> encodeAsResXmlAttr
    java.lang.String encodeAsXmlValue(java.lang.String) -> encodeAsXmlValue
    boolean hasMultipleNonPositionalSubstitutions(java.lang.String) -> hasMultipleNonPositionalSubstitutions
    java.lang.String enumerateNonPositionalSubstitutions(java.lang.String) -> enumerateNonPositionalSubstitutions
    java.util.List findNonPositionalSubstitutions(java.lang.String,int) -> findNonPositionalSubstitutions
    boolean isPrintableChar(char) -> isPrintableChar
ch.qos.logback.repackage.brut.common.BrutException -> ch.qos.logback.repackage.brut.common.BrutException:
ch.qos.logback.repackage.brut.util.DataInputDelegate -> ch.qos.logback.repackage.brut.util.DataInputDelegate:
    java.io.DataInput mDelegate -> mDelegate
    int skipBytes(int) -> skipBytes
    int readUnsignedShort() -> readUnsignedShort
    int readUnsignedByte() -> readUnsignedByte
    java.lang.String readUTF() -> readUTF
    short readShort() -> readShort
    long readLong() -> readLong
    java.lang.String readLine() -> readLine
    int readInt() -> readInt
    void readFully(byte[],int,int) -> readFully
    void readFully(byte[]) -> readFully
    float readFloat() -> readFloat
    double readDouble() -> readDouble
    char readChar() -> readChar
    byte readByte() -> readByte
    boolean readBoolean() -> readBoolean
ch.qos.logback.repackage.brut.util.ExtDataInput -> ch.qos.logback.repackage.brut.util.ExtDataInput:
    int[] readIntArray(int) -> readIntArray
    void skipInt() -> skipInt
    void skipCheckInt(int) -> skipCheckInt
    void skipCheckShort(short) -> skipCheckShort
    void skipCheckByte(byte) -> skipCheckByte
    java.lang.String readNulEndedString(int,boolean) -> readNulEndedString
ch.qos.logback.repackage.com.mindprod.ledatastream.LEDataInputStream -> ch.qos.logback.repackage.com.mindprod.ledatastream.LEDataInputStream:
    java.lang.String EMBEDDED_COPYRIGHT -> EMBEDDED_COPYRIGHT
    java.io.DataInputStream dis -> dis
    java.io.InputStream is -> is
    byte[] work -> work
    java.lang.String readUTF(java.io.DataInput) -> readUTF
    void close() -> close
    int read(byte[],int,int) -> read
    boolean readBoolean() -> readBoolean
    byte readByte() -> readByte
    char readChar() -> readChar
    double readDouble() -> readDouble
    float readFloat() -> readFloat
    void readFully(byte[]) -> readFully
    void readFully(byte[],int,int) -> readFully
    int readInt() -> readInt
    java.lang.String readLine() -> readLine
    long readLong() -> readLong
    short readShort() -> readShort
    java.lang.String readUTF() -> readUTF
    int readUnsignedByte() -> readUnsignedByte
    int readUnsignedShort() -> readUnsignedShort
    int skipBytes(int) -> skipBytes
com.google.android.gcm.GCMBaseIntentService -> com.google.android.gcm.a:
    android.os.PowerManager$WakeLock sWakeLock -> a
    java.lang.Object LOCK -> b
    java.lang.String mSenderId -> c
    int sCounter -> d
    java.util.Random sRandom -> e
    int MAX_BACKOFF_MS -> f
    java.lang.String TOKEN -> g
    void onMessage(android.content.Context,android.content.Intent) -> a
    void onDeletedMessages(android.content.Context,int) -> a
    boolean onRecoverableError(android.content.Context,java.lang.String) -> a
    void onError(android.content.Context,java.lang.String) -> b
    void onRegistered(android.content.Context,java.lang.String) -> c
    void onUnregistered(android.content.Context,java.lang.String) -> d
    void onHandleIntent(android.content.Intent) -> onHandleIntent
    void runIntentInService(android.content.Context,android.content.Intent,java.lang.String) -> a
    void handleRegistration(android.content.Context,android.content.Intent) -> b
com.google.android.gcm.GCMBroadcastReceiver -> com.google.android.gcm.GCMBroadcastReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    java.lang.String getGCMIntentServiceClassName(android.content.Context) -> a
com.google.android.gcm.GCMRegistrar -> com.google.android.gcm.b:
    com.google.android.gcm.GCMBroadcastReceiver sRetryReceiver -> a
    void checkDevice(android.content.Context) -> a
    void register(android.content.Context,java.lang.String[]) -> a
    void internalRegister(android.content.Context,java.lang.String[]) -> b
    void internalUnregister(android.content.Context) -> b
    void setRetryBroadcastReceiver(android.content.Context) -> h
    java.lang.String getRegistrationId(android.content.Context) -> c
    boolean isRegistered(android.content.Context) -> d
    java.lang.String clearRegistrationId(android.content.Context) -> e
    java.lang.String setRegistrationId(android.content.Context,java.lang.String) -> a
    int getAppVersion(android.content.Context) -> i
    void resetBackoff(android.content.Context) -> f
    int getBackoff(android.content.Context) -> g
    void setBackoff(android.content.Context,int) -> a
    android.content.SharedPreferences getGCMPreferences(android.content.Context) -> j
com.google.gson.DefaultDateTypeAdapter -> com.google.a.a:
    java.text.DateFormat enUsFormat -> a
    java.text.DateFormat localFormat -> b
    java.text.DateFormat iso8601Format -> c
    com.google.gson.JsonElement serialize(java.util.Date,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> a
    java.util.Date deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> a
    java.util.Date deserializeToDate(com.google.gson.JsonElement) -> a
    java.lang.String toString() -> toString
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> a
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> b
com.google.gson.ExclusionStrategy -> com.google.a.b:
    boolean shouldSkipField(com.google.gson.FieldAttributes) -> a
    boolean shouldSkipClass(java.lang.Class) -> a
com.google.gson.FieldAttributes -> com.google.a.c:
    java.lang.reflect.Field field -> a
com.google.gson.FieldNamingPolicy -> com.google.a.d:
    com.google.gson.FieldNamingPolicy IDENTITY -> a
    com.google.gson.FieldNamingPolicy UPPER_CAMEL_CASE -> b
    com.google.gson.FieldNamingPolicy UPPER_CAMEL_CASE_WITH_SPACES -> c
    com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_UNDERSCORES -> d
    com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_DASHES -> e
    com.google.gson.FieldNamingPolicy[] $VALUES -> f
    com.google.gson.FieldNamingPolicy[] values() -> values
    com.google.gson.FieldNamingPolicy valueOf(java.lang.String) -> valueOf
    java.lang.String separateCamelCase(java.lang.String,java.lang.String) -> b
    java.lang.String upperCaseFirstLetter(java.lang.String) -> b
    java.lang.String modifyString(char,java.lang.String,int) -> a
    java.lang.String access$100(java.lang.String) -> a
    java.lang.String access$200(java.lang.String,java.lang.String) -> a
com.google.gson.FieldNamingPolicy$1 -> com.google.a.e:
    java.lang.String translateName(java.lang.reflect.Field) -> a
com.google.gson.FieldNamingPolicy$2 -> com.google.a.f:
    java.lang.String translateName(java.lang.reflect.Field) -> a
com.google.gson.FieldNamingPolicy$3 -> com.google.a.g:
    java.lang.String translateName(java.lang.reflect.Field) -> a
com.google.gson.FieldNamingPolicy$4 -> com.google.a.h:
    java.lang.String translateName(java.lang.reflect.Field) -> a
com.google.gson.FieldNamingPolicy$5 -> com.google.a.i:
    java.lang.String translateName(java.lang.reflect.Field) -> a
com.google.gson.FieldNamingStrategy -> com.google.a.j:
    java.lang.String translateName(java.lang.reflect.Field) -> a
com.google.gson.Gson -> com.google.a.k:
    java.lang.ThreadLocal calls -> c
    java.util.Map typeTokenCache -> d
    java.util.List factories -> e
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> f
    boolean serializeNulls -> g
    boolean htmlSafe -> h
    boolean generateNonExecutableJson -> i
    boolean prettyPrinting -> j
    com.google.gson.JsonDeserializationContext deserializationContext -> a
    com.google.gson.JsonSerializationContext serializationContext -> b
    com.google.gson.TypeAdapter doubleAdapter(boolean) -> a
    com.google.gson.TypeAdapter floatAdapter(boolean) -> b
    void checkValidFloatingPoint(double) -> a
    com.google.gson.TypeAdapter longAdapter(com.google.gson.LongSerializationPolicy) -> a
    com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken) -> a
    com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken) -> a
    com.google.gson.TypeAdapter getAdapter(java.lang.Class) -> a
    java.lang.String toJson(java.lang.Object) -> a
    java.lang.String toJson(java.lang.Object,java.lang.reflect.Type) -> a
    void toJson(java.lang.Object,java.lang.reflect.Type,java.lang.Appendable) -> a
    void toJson(java.lang.Object,java.lang.reflect.Type,com.google.gson.stream.JsonWriter) -> a
    java.lang.String toJson(com.google.gson.JsonElement) -> a
    void toJson(com.google.gson.JsonElement,java.lang.Appendable) -> a
    com.google.gson.stream.JsonWriter newJsonWriter(java.io.Writer) -> a
    void toJson(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter) -> a
    java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type) -> a
    java.lang.Object fromJson(java.io.Reader,java.lang.reflect.Type) -> a
    void assertFullConsumption(java.lang.Object,com.google.gson.stream.JsonReader) -> a
    java.lang.Object fromJson(com.google.gson.stream.JsonReader,java.lang.reflect.Type) -> a
    java.lang.String toString() -> toString
    void access$000(com.google.gson.Gson,double) -> a
com.google.gson.Gson$1 -> com.google.a.l:
    com.google.gson.Gson this$0 -> a
    java.util.Map initialValue() -> a
    java.lang.Object initialValue() -> initialValue
com.google.gson.Gson$2 -> com.google.a.m:
    com.google.gson.Gson this$0 -> a
com.google.gson.Gson$3 -> com.google.a.n:
    com.google.gson.Gson this$0 -> a
com.google.gson.Gson$4 -> com.google.a.o:
    com.google.gson.Gson this$0 -> a
    java.lang.Double read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.Gson$5 -> com.google.a.p:
    com.google.gson.Gson this$0 -> a
    java.lang.Float read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.Gson$6 -> com.google.a.q:
    com.google.gson.Gson this$0 -> a
    java.lang.Number read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.Gson$FutureTypeAdapter -> com.google.a.r:
    com.google.gson.TypeAdapter delegate -> a
    void setDelegate(com.google.gson.TypeAdapter) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.GsonBuilder -> com.google.a.s:
    com.google.gson.internal.Excluder excluder -> a
    com.google.gson.LongSerializationPolicy longSerializationPolicy -> b
    com.google.gson.FieldNamingStrategy fieldNamingPolicy -> c
    java.util.Map instanceCreators -> d
    java.util.List factories -> e
    java.util.List hierarchyFactories -> f
    boolean serializeNulls -> g
    java.lang.String datePattern -> h
    int dateStyle -> i
    int timeStyle -> j
    boolean complexMapKeySerialization -> k
    boolean serializeSpecialFloatingPointValues -> l
    boolean escapeHtmlChars -> m
    boolean prettyPrinting -> n
    boolean generateNonExecutableJson -> o
    com.google.gson.Gson create() -> a
    void addTypeAdaptersForDate(java.lang.String,int,int,java.util.List) -> a
com.google.gson.InstanceCreator -> com.google.a.t:
    java.lang.Object createInstance(java.lang.reflect.Type) -> a
com.google.gson.JsonArray -> com.google.a.u:
    java.util.List elements -> a
    void add(com.google.gson.JsonElement) -> a
    java.util.Iterator iterator() -> iterator
    java.lang.Number getAsNumber() -> a
    java.lang.String getAsString() -> b
    double getAsDouble() -> c
    long getAsLong() -> d
    int getAsInt() -> e
    boolean getAsBoolean() -> f
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.gson.JsonDeserializationContext -> com.google.a.v:
com.google.gson.JsonDeserializer -> com.google.a.w:
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> b
com.google.gson.JsonElement -> com.google.a.x:
    boolean isJsonArray() -> g
    boolean isJsonObject() -> h
    boolean isJsonPrimitive() -> i
    boolean isJsonNull() -> j
    com.google.gson.JsonObject getAsJsonObject() -> k
    com.google.gson.JsonArray getAsJsonArray() -> l
    com.google.gson.JsonPrimitive getAsJsonPrimitive() -> m
    boolean getAsBoolean() -> f
    java.lang.Boolean getAsBooleanWrapper() -> n
    java.lang.Number getAsNumber() -> a
    java.lang.String getAsString() -> b
    double getAsDouble() -> c
    long getAsLong() -> d
    int getAsInt() -> e
    java.lang.String toString() -> toString
com.google.gson.JsonIOException -> com.google.a.y:
com.google.gson.JsonNull -> com.google.a.z:
    com.google.gson.JsonNull INSTANCE -> a
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.google.gson.JsonObject -> com.google.a.aa:
    com.google.gson.internal.StringMap members -> a
    void add(java.lang.String,com.google.gson.JsonElement) -> a
    java.util.Set entrySet() -> o
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.gson.JsonParseException -> com.google.a.ab:
com.google.gson.JsonPrimitive -> com.google.a.ac:
    java.lang.Class[] PRIMITIVE_TYPES -> a
    java.lang.Object value -> b
    void setValue(java.lang.Object) -> a
    boolean isBoolean() -> o
    java.lang.Boolean getAsBooleanWrapper() -> n
    boolean getAsBoolean() -> f
    boolean isNumber() -> p
    java.lang.Number getAsNumber() -> a
    boolean isString() -> q
    java.lang.String getAsString() -> b
    double getAsDouble() -> c
    long getAsLong() -> d
    int getAsInt() -> e
    boolean isPrimitiveOrString(java.lang.Object) -> b
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    boolean isIntegral(com.google.gson.JsonPrimitive) -> a
com.google.gson.JsonSerializationContext -> com.google.a.ad:
com.google.gson.JsonSerializer -> com.google.a.ae:
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> a
com.google.gson.JsonSyntaxException -> com.google.a.af:
com.google.gson.LongSerializationPolicy -> com.google.a.ag:
    com.google.gson.LongSerializationPolicy DEFAULT -> a
    com.google.gson.LongSerializationPolicy STRING -> b
    com.google.gson.LongSerializationPolicy[] $VALUES -> c
    com.google.gson.LongSerializationPolicy[] values() -> values
    com.google.gson.LongSerializationPolicy valueOf(java.lang.String) -> valueOf
com.google.gson.LongSerializationPolicy$1 -> com.google.a.ah:
com.google.gson.LongSerializationPolicy$2 -> com.google.a.ai:
com.google.gson.TreeTypeAdapter -> com.google.a.aj:
    com.google.gson.JsonSerializer serializer -> a
    com.google.gson.JsonDeserializer deserializer -> b
    com.google.gson.Gson gson -> c
    com.google.gson.reflect.TypeToken typeToken -> d
    com.google.gson.TypeAdapterFactory skipPast -> e
    com.google.gson.TypeAdapter delegate -> f
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
    com.google.gson.TypeAdapter delegate() -> a
    com.google.gson.TypeAdapterFactory newFactory(com.google.gson.reflect.TypeToken,java.lang.Object) -> a
com.google.gson.TreeTypeAdapter$1 -> com.google.a.ak:
com.google.gson.TreeTypeAdapter$SingleTypeFactory -> com.google.a.al:
    com.google.gson.reflect.TypeToken exactType -> a
    boolean matchRawType -> b
    java.lang.Class hierarchyType -> c
    com.google.gson.JsonSerializer serializer -> d
    com.google.gson.JsonDeserializer deserializer -> e
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
com.google.gson.TypeAdapter -> com.google.a.am:
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
    com.google.gson.JsonElement toJsonTree(java.lang.Object) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
com.google.gson.TypeAdapterFactory -> com.google.a.an:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
com.google.gson.annotations.Expose -> com.google.a.a.a:
    boolean serialize() -> a
    boolean deserialize() -> b
com.google.gson.annotations.SerializedName -> com.google.a.a.b:
    java.lang.String value() -> a
com.google.gson.annotations.Since -> com.google.a.a.c:
    double value() -> a
com.google.gson.annotations.Until -> com.google.a.a.d:
    double value() -> a
com.google.gson.internal.$Gson$Preconditions -> com.google.a.b.a:
    java.lang.Object checkNotNull(java.lang.Object) -> a
    void checkArgument(boolean) -> a
com.google.gson.internal.$Gson$Types -> com.google.a.b.b:
    java.lang.reflect.Type[] EMPTY_TYPE_ARRAY -> a
    java.lang.reflect.ParameterizedType newParameterizedTypeWithOwner(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> a
    java.lang.reflect.GenericArrayType arrayOf(java.lang.reflect.Type) -> a
    java.lang.reflect.WildcardType subtypeOf(java.lang.reflect.Type) -> b
    java.lang.reflect.WildcardType supertypeOf(java.lang.reflect.Type) -> c
    java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> d
    java.lang.Class getRawType(java.lang.reflect.Type) -> e
    boolean equal(java.lang.Object,java.lang.Object) -> a
    boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> a
    int hashCodeOrZero(java.lang.Object) -> b
    java.lang.String typeToString(java.lang.reflect.Type) -> f
    java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class) -> a
    java.lang.reflect.Type getSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class) -> b
    java.lang.reflect.Type getArrayComponentType(java.lang.reflect.Type) -> g
    java.lang.reflect.Type getCollectionElementType(java.lang.reflect.Type,java.lang.Class) -> a
    java.lang.reflect.Type[] getMapKeyAndValueTypes(java.lang.reflect.Type,java.lang.Class) -> b
    java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> a
    java.lang.reflect.Type resolveTypeVariable(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.TypeVariable) -> a
    int indexOf(java.lang.Object[],java.lang.Object) -> a
    java.lang.Class declaringClassOf(java.lang.reflect.TypeVariable) -> a
    void checkNotPrimitive(java.lang.reflect.Type) -> i
    void access$000(java.lang.reflect.Type) -> h
    int access$100(java.lang.Object) -> a
com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl -> com.google.a.b.c:
    java.lang.reflect.Type componentType -> a
    java.lang.reflect.Type getGenericComponentType() -> getGenericComponentType
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl -> com.google.a.b.d:
    java.lang.reflect.Type ownerType -> a
    java.lang.reflect.Type rawType -> b
    java.lang.reflect.Type[] typeArguments -> c
    java.lang.reflect.Type[] getActualTypeArguments() -> getActualTypeArguments
    java.lang.reflect.Type getRawType() -> getRawType
    java.lang.reflect.Type getOwnerType() -> getOwnerType
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.gson.internal.$Gson$Types$WildcardTypeImpl -> com.google.a.b.e:
    java.lang.reflect.Type upperBound -> a
    java.lang.reflect.Type lowerBound -> b
    java.lang.reflect.Type[] getUpperBounds() -> getUpperBounds
    java.lang.reflect.Type[] getLowerBounds() -> getLowerBounds
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.gson.internal.ConstructorConstructor -> com.google.a.b.f:
    java.util.Map instanceCreators -> a
    com.google.gson.internal.ObjectConstructor get(com.google.gson.reflect.TypeToken) -> a
    com.google.gson.internal.ObjectConstructor newDefaultConstructor(java.lang.Class) -> a
    com.google.gson.internal.ObjectConstructor newDefaultImplementationConstructor(java.lang.Class) -> b
    com.google.gson.internal.ObjectConstructor newUnsafeAllocator(java.lang.reflect.Type,java.lang.Class) -> a
    java.lang.String toString() -> toString
com.google.gson.internal.ConstructorConstructor$1 -> com.google.a.b.g:
    com.google.gson.InstanceCreator val$creator -> a
    java.lang.reflect.Type val$type -> b
    com.google.gson.internal.ConstructorConstructor this$0 -> c
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$2 -> com.google.a.b.h:
    java.lang.reflect.Constructor val$constructor -> a
    com.google.gson.internal.ConstructorConstructor this$0 -> b
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$3 -> com.google.a.b.i:
    com.google.gson.internal.ConstructorConstructor this$0 -> a
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$4 -> com.google.a.b.j:
    com.google.gson.internal.ConstructorConstructor this$0 -> a
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$5 -> com.google.a.b.k:
    com.google.gson.internal.ConstructorConstructor this$0 -> a
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$6 -> com.google.a.b.l:
    com.google.gson.internal.ConstructorConstructor this$0 -> a
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$7 -> com.google.a.b.m:
    com.google.gson.internal.ConstructorConstructor this$0 -> a
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$8 -> com.google.a.b.n:
    com.google.gson.internal.UnsafeAllocator unsafeAllocator -> d
    java.lang.Class val$rawType -> a
    java.lang.reflect.Type val$type -> b
    com.google.gson.internal.ConstructorConstructor this$0 -> c
    java.lang.Object construct() -> a
com.google.gson.internal.Excluder -> com.google.a.b.o:
    com.google.gson.internal.Excluder DEFAULT -> a
    double version -> b
    int modifiers -> c
    boolean serializeInnerClasses -> d
    boolean requireExpose -> e
    java.util.List serializationStrategies -> f
    java.util.List deserializationStrategies -> g
    com.google.gson.internal.Excluder clone() -> a
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
    boolean excludeField(java.lang.reflect.Field,boolean) -> a
    boolean excludeClass(java.lang.Class,boolean) -> a
    boolean isAnonymousOrLocal(java.lang.Class) -> a
    boolean isInnerClass(java.lang.Class) -> b
    boolean isStatic(java.lang.Class) -> c
    boolean isValidVersion(com.google.gson.annotations.Since,com.google.gson.annotations.Until) -> a
    boolean isValidSince(com.google.gson.annotations.Since) -> a
    boolean isValidUntil(com.google.gson.annotations.Until) -> a
    java.lang.Object clone() -> clone
com.google.gson.internal.Excluder$1 -> com.google.a.b.p:
    com.google.gson.TypeAdapter delegate -> f
    boolean val$skipDeserialize -> a
    boolean val$skipSerialize -> b
    com.google.gson.Gson val$gson -> c
    com.google.gson.reflect.TypeToken val$type -> d
    com.google.gson.internal.Excluder this$0 -> e
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
    com.google.gson.TypeAdapter delegate() -> a
com.google.gson.internal.JsonReaderInternalAccess -> com.google.a.b.q:
    com.google.gson.internal.JsonReaderInternalAccess INSTANCE -> a
    void promoteNameToValue(com.google.gson.stream.JsonReader) -> a
com.google.gson.internal.LazilyParsedNumber -> com.google.a.b.r:
    java.lang.String value -> a
    int intValue() -> intValue
    long longValue() -> longValue
    float floatValue() -> floatValue
    double doubleValue() -> doubleValue
    java.lang.String toString() -> toString
com.google.gson.internal.ObjectConstructor -> com.google.a.b.s:
    java.lang.Object construct() -> a
com.google.gson.internal.Primitives -> com.google.a.b.t:
    java.util.Map PRIMITIVE_TO_WRAPPER_TYPE -> a
    java.util.Map WRAPPER_TO_PRIMITIVE_TYPE -> b
    void add(java.util.Map,java.util.Map,java.lang.Class,java.lang.Class) -> a
    boolean isPrimitive(java.lang.reflect.Type) -> a
com.google.gson.internal.Streams -> com.google.a.b.u:
    com.google.gson.JsonElement parse(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter) -> a
    java.io.Writer writerForAppendable(java.lang.Appendable) -> a
com.google.gson.internal.Streams$1 -> com.google.a.b.v:
com.google.gson.internal.Streams$AppendableWriter -> com.google.a.b.w:
    java.lang.Appendable appendable -> a
    com.google.gson.internal.Streams$AppendableWriter$CurrentWrite currentWrite -> b
    void write(char[],int,int) -> write
    void write(int) -> write
    void flush() -> flush
    void close() -> close
com.google.gson.internal.Streams$AppendableWriter$CurrentWrite -> com.google.a.b.x:
    char[] chars -> a
    int length() -> length
    char charAt(int) -> charAt
    java.lang.CharSequence subSequence(int,int) -> subSequence
com.google.gson.internal.StringMap -> com.google.a.b.y:
    com.google.gson.internal.StringMap$LinkedEntry header -> a
    java.util.Map$Entry[] EMPTY_TABLE -> b
    com.google.gson.internal.StringMap$LinkedEntry[] table -> c
    int size -> d
    int threshold -> e
    java.util.Set keySet -> f
    java.util.Set entrySet -> g
    java.util.Collection values -> h
    int seed -> i
    int size() -> size
    boolean containsKey(java.lang.Object) -> containsKey
    java.lang.Object get(java.lang.Object) -> get
    com.google.gson.internal.StringMap$LinkedEntry getEntry(java.lang.String) -> a
    java.lang.Object put(java.lang.String,java.lang.Object) -> a
    void addNewEntry(java.lang.String,java.lang.Object,int,int) -> a
    com.google.gson.internal.StringMap$LinkedEntry[] makeTable(int) -> a
    com.google.gson.internal.StringMap$LinkedEntry[] doubleCapacity() -> a
    java.lang.Object remove(java.lang.Object) -> remove
    void unlink(com.google.gson.internal.StringMap$LinkedEntry) -> a
    void clear() -> clear
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
    java.util.Set entrySet() -> entrySet
    boolean removeMapping(java.lang.Object,java.lang.Object) -> a
    int hash(java.lang.String) -> b
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    com.google.gson.internal.StringMap$LinkedEntry access$300(com.google.gson.internal.StringMap) -> a
    int access$500(com.google.gson.internal.StringMap) -> b
    boolean access$600(com.google.gson.internal.StringMap,java.lang.Object,java.lang.Object) -> a
com.google.gson.internal.StringMap$1 -> com.google.a.b.z:
com.google.gson.internal.StringMap$EntrySet -> com.google.a.b.aa:
    com.google.gson.internal.StringMap this$0 -> a
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    int size() -> size
    void clear() -> clear
com.google.gson.internal.StringMap$EntrySet$1 -> com.google.a.b.ab:
    com.google.gson.internal.StringMap$EntrySet this$1 -> a
    java.util.Map$Entry next() -> a
    java.lang.Object next() -> next
com.google.gson.internal.StringMap$KeySet -> com.google.a.b.ac:
    com.google.gson.internal.StringMap this$0 -> a
    java.util.Iterator iterator() -> iterator
    int size() -> size
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    void clear() -> clear
com.google.gson.internal.StringMap$KeySet$1 -> com.google.a.b.ad:
    com.google.gson.internal.StringMap$KeySet this$1 -> a
    java.lang.String next() -> a
    java.lang.Object next() -> next
com.google.gson.internal.StringMap$LinkedEntry -> com.google.a.b.ae:
    java.lang.String key -> a
    java.lang.Object value -> b
    int hash -> c
    com.google.gson.internal.StringMap$LinkedEntry next -> d
    com.google.gson.internal.StringMap$LinkedEntry nxt -> e
    com.google.gson.internal.StringMap$LinkedEntry prv -> f
    java.lang.String getKey() -> a
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object getKey() -> getKey
com.google.gson.internal.StringMap$LinkedHashIterator -> com.google.a.b.af:
    com.google.gson.internal.StringMap$LinkedEntry next -> b
    com.google.gson.internal.StringMap$LinkedEntry lastReturned -> c
    com.google.gson.internal.StringMap this$0 -> d
    boolean hasNext() -> hasNext
    com.google.gson.internal.StringMap$LinkedEntry nextEntry() -> b
    void remove() -> remove
com.google.gson.internal.StringMap$Values -> com.google.a.b.ag:
    com.google.gson.internal.StringMap this$0 -> a
    java.util.Iterator iterator() -> iterator
    int size() -> size
    boolean contains(java.lang.Object) -> contains
    void clear() -> clear
com.google.gson.internal.StringMap$Values$1 -> com.google.a.b.ah:
    com.google.gson.internal.StringMap$Values this$1 -> a
    java.lang.Object next() -> next
com.google.gson.internal.UnsafeAllocator -> com.google.a.b.ai:
    java.lang.Object newInstance(java.lang.Class) -> a
    com.google.gson.internal.UnsafeAllocator create() -> a
com.google.gson.internal.UnsafeAllocator$1 -> com.google.a.b.aj:
    java.lang.reflect.Method val$allocateInstance -> a
    java.lang.Object val$unsafe -> b
    java.lang.Object newInstance(java.lang.Class) -> a
com.google.gson.internal.UnsafeAllocator$2 -> com.google.a.b.ak:
    java.lang.reflect.Method val$newInstance -> a
    java.lang.Object newInstance(java.lang.Class) -> a
com.google.gson.internal.UnsafeAllocator$3 -> com.google.a.b.al:
    java.lang.reflect.Method val$newInstance -> a
    int val$constructorId -> b
    java.lang.Object newInstance(java.lang.Class) -> a
com.google.gson.internal.UnsafeAllocator$4 -> com.google.a.b.am:
    java.lang.Object newInstance(java.lang.Class) -> a
com.google.gson.internal.bind.ArrayTypeAdapter -> com.google.a.b.a.a:
    com.google.gson.TypeAdapterFactory FACTORY -> a
    java.lang.Class componentType -> b
    com.google.gson.TypeAdapter componentTypeAdapter -> c
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.ArrayTypeAdapter$1 -> com.google.a.b.a.b:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
com.google.gson.internal.bind.CollectionTypeAdapterFactory -> com.google.a.b.a.c:
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> a
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter -> com.google.a.b.a.d:
    com.google.gson.TypeAdapter elementTypeAdapter -> b
    com.google.gson.internal.ObjectConstructor constructor -> c
    com.google.gson.internal.bind.CollectionTypeAdapterFactory this$0 -> a
    java.util.Collection read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.util.Collection) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.DateTypeAdapter -> com.google.a.b.a.e:
    com.google.gson.TypeAdapterFactory FACTORY -> a
    java.text.DateFormat enUsFormat -> b
    java.text.DateFormat localFormat -> c
    java.text.DateFormat iso8601Format -> d
    java.text.DateFormat buildIso8601Format() -> a
    java.util.Date read(com.google.gson.stream.JsonReader) -> a
    java.util.Date deserializeToDate(java.lang.String) -> a
    void write(com.google.gson.stream.JsonWriter,java.util.Date) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.DateTypeAdapter$1 -> com.google.a.b.a.f:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
com.google.gson.internal.bind.JsonTreeReader -> com.google.a.b.a.g:
    java.io.Reader UNREADABLE_READER -> a
    java.lang.Object SENTINEL_CLOSED -> b
    java.util.List stack -> c
    void beginArray() -> a
    void endArray() -> b
    void beginObject() -> c
    void endObject() -> d
    boolean hasNext() -> e
    com.google.gson.stream.JsonToken peek() -> f
    java.lang.Object peekStack() -> q
    java.lang.Object popStack() -> r
    void expect(com.google.gson.stream.JsonToken) -> a
    java.lang.String nextName() -> g
    java.lang.String nextString() -> h
    boolean nextBoolean() -> i
    void nextNull() -> j
    double nextDouble() -> k
    long nextLong() -> l
    int nextInt() -> m
    void close() -> close
    void skipValue() -> n
    java.lang.String toString() -> toString
    void promoteNameToValue() -> o
com.google.gson.internal.bind.JsonTreeReader$1 -> com.google.a.b.a.h:
    int read(char[],int,int) -> read
    void close() -> close
com.google.gson.internal.bind.JsonTreeWriter -> com.google.a.b.a.i:
    java.io.Writer UNWRITABLE_WRITER -> a
    com.google.gson.JsonPrimitive SENTINEL_CLOSED -> b
    java.util.List stack -> c
    java.lang.String pendingName -> d
    com.google.gson.JsonElement product -> e
    com.google.gson.JsonElement get() -> a
    com.google.gson.JsonElement peek() -> j
    void put(com.google.gson.JsonElement) -> a
    com.google.gson.stream.JsonWriter beginArray() -> b
    com.google.gson.stream.JsonWriter endArray() -> c
    com.google.gson.stream.JsonWriter beginObject() -> d
    com.google.gson.stream.JsonWriter endObject() -> e
    com.google.gson.stream.JsonWriter name(java.lang.String) -> a
    com.google.gson.stream.JsonWriter value(java.lang.String) -> b
    com.google.gson.stream.JsonWriter nullValue() -> f
    com.google.gson.stream.JsonWriter value(boolean) -> a
    com.google.gson.stream.JsonWriter value(long) -> a
    com.google.gson.stream.JsonWriter value(java.lang.Number) -> a
    void flush() -> flush
    void close() -> close
com.google.gson.internal.bind.JsonTreeWriter$1 -> com.google.a.b.a.j:
    void write(char[],int,int) -> write
    void flush() -> flush
    void close() -> close
com.google.gson.internal.bind.MapTypeAdapterFactory -> com.google.a.b.a.k:
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> a
    boolean complexMapKeySerialization -> b
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
    com.google.gson.TypeAdapter getKeyAdapter(com.google.gson.Gson,java.lang.reflect.Type) -> a
    boolean access$000(com.google.gson.internal.bind.MapTypeAdapterFactory) -> a
com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter -> com.google.a.b.a.l:
    com.google.gson.TypeAdapter keyTypeAdapter -> b
    com.google.gson.TypeAdapter valueTypeAdapter -> c
    com.google.gson.internal.ObjectConstructor constructor -> d
    com.google.gson.internal.bind.MapTypeAdapterFactory this$0 -> a
    java.util.Map read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.util.Map) -> a
    java.lang.String keyToString(com.google.gson.JsonElement) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.ObjectTypeAdapter -> com.google.a.b.a.m:
    com.google.gson.TypeAdapterFactory FACTORY -> a
    com.google.gson.Gson gson -> b
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.ObjectTypeAdapter$1 -> com.google.a.b.a.n:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
com.google.gson.internal.bind.ObjectTypeAdapter$2 -> com.google.a.b.a.o:
    int[] $SwitchMap$com$google$gson$stream$JsonToken -> a
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory -> com.google.a.b.a.p:
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> a
    com.google.gson.FieldNamingStrategy fieldNamingPolicy -> b
    com.google.gson.internal.Excluder excluder -> c
    boolean excludeField(java.lang.reflect.Field,boolean) -> a
    java.lang.String getFieldName(java.lang.reflect.Field) -> a
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
    com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField createBoundField(com.google.gson.Gson,java.lang.reflect.Field,java.lang.String,com.google.gson.reflect.TypeToken,boolean,boolean) -> a
    java.util.Map getBoundFields(com.google.gson.Gson,com.google.gson.reflect.TypeToken,java.lang.Class) -> a
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1 -> com.google.a.b.a.q:
    com.google.gson.TypeAdapter typeAdapter -> a
    com.google.gson.Gson val$context -> b
    com.google.gson.reflect.TypeToken val$fieldType -> c
    java.lang.reflect.Field val$field -> d
    boolean val$isPrimitive -> e
    com.google.gson.internal.bind.ReflectiveTypeAdapterFactory this$0 -> f
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
    void read(com.google.gson.stream.JsonReader,java.lang.Object) -> a
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter -> com.google.a.b.a.r:
    com.google.gson.internal.ObjectConstructor constructor -> b
    java.util.Map boundFields -> c
    com.google.gson.internal.bind.ReflectiveTypeAdapterFactory this$0 -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField -> com.google.a.b.a.s:
    java.lang.String name -> g
    boolean serialized -> h
    boolean deserialized -> i
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
    void read(com.google.gson.stream.JsonReader,java.lang.Object) -> a
com.google.gson.internal.bind.SqlDateTypeAdapter -> com.google.a.b.a.t:
    com.google.gson.TypeAdapterFactory FACTORY -> a
    java.text.DateFormat format -> b
    java.sql.Date read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.sql.Date) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.SqlDateTypeAdapter$1 -> com.google.a.b.a.u:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
com.google.gson.internal.bind.TimeTypeAdapter -> com.google.a.b.a.v:
    com.google.gson.TypeAdapterFactory FACTORY -> a
    java.text.DateFormat format -> b
    java.sql.Time read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.sql.Time) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TimeTypeAdapter$1 -> com.google.a.b.a.w:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper -> com.google.a.b.a.x:
    com.google.gson.Gson context -> a
    com.google.gson.TypeAdapter delegate -> b
    java.lang.reflect.Type type -> c
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
    java.lang.reflect.Type getRuntimeTypeIfMoreSpecific(java.lang.reflect.Type,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters -> com.google.a.b.a.y:
    com.google.gson.TypeAdapter CLASS -> a
    com.google.gson.TypeAdapterFactory CLASS_FACTORY -> b
    com.google.gson.TypeAdapter BIT_SET -> c
    com.google.gson.TypeAdapterFactory BIT_SET_FACTORY -> d
    com.google.gson.TypeAdapter BOOLEAN -> e
    com.google.gson.TypeAdapter BOOLEAN_AS_STRING -> f
    com.google.gson.TypeAdapterFactory BOOLEAN_FACTORY -> g
    com.google.gson.TypeAdapter BYTE -> h
    com.google.gson.TypeAdapterFactory BYTE_FACTORY -> i
    com.google.gson.TypeAdapter SHORT -> j
    com.google.gson.TypeAdapterFactory SHORT_FACTORY -> k
    com.google.gson.TypeAdapter INTEGER -> l
    com.google.gson.TypeAdapterFactory INTEGER_FACTORY -> m
    com.google.gson.TypeAdapter LONG -> n
    com.google.gson.TypeAdapter FLOAT -> o
    com.google.gson.TypeAdapter DOUBLE -> p
    com.google.gson.TypeAdapter NUMBER -> q
    com.google.gson.TypeAdapterFactory NUMBER_FACTORY -> r
    com.google.gson.TypeAdapter CHARACTER -> s
    com.google.gson.TypeAdapterFactory CHARACTER_FACTORY -> t
    com.google.gson.TypeAdapter STRING -> u
    com.google.gson.TypeAdapter BIG_DECIMAL -> v
    com.google.gson.TypeAdapter BIG_INTEGER -> w
    com.google.gson.TypeAdapterFactory STRING_FACTORY -> x
    com.google.gson.TypeAdapter STRING_BUILDER -> y
    com.google.gson.TypeAdapterFactory STRING_BUILDER_FACTORY -> z
    com.google.gson.TypeAdapter STRING_BUFFER -> A
    com.google.gson.TypeAdapterFactory STRING_BUFFER_FACTORY -> B
    com.google.gson.TypeAdapter URL -> C
    com.google.gson.TypeAdapterFactory URL_FACTORY -> D
    com.google.gson.TypeAdapter URI -> E
    com.google.gson.TypeAdapterFactory URI_FACTORY -> F
    com.google.gson.TypeAdapter INET_ADDRESS -> G
    com.google.gson.TypeAdapterFactory INET_ADDRESS_FACTORY -> H
    com.google.gson.TypeAdapter UUID -> I
    com.google.gson.TypeAdapterFactory UUID_FACTORY -> J
    com.google.gson.TypeAdapterFactory TIMESTAMP_FACTORY -> K
    com.google.gson.TypeAdapter CALENDAR -> L
    com.google.gson.TypeAdapterFactory CALENDAR_FACTORY -> M
    com.google.gson.TypeAdapter LOCALE -> N
    com.google.gson.TypeAdapterFactory LOCALE_FACTORY -> O
    com.google.gson.TypeAdapter JSON_ELEMENT -> P
    com.google.gson.TypeAdapterFactory JSON_ELEMENT_FACTORY -> Q
    com.google.gson.TypeAdapterFactory ENUM_FACTORY -> R
    com.google.gson.TypeAdapterFactory newEnumTypeHierarchyFactory() -> a
    com.google.gson.TypeAdapterFactory newFactory(java.lang.Class,com.google.gson.TypeAdapter) -> a
    com.google.gson.TypeAdapterFactory newFactory(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter) -> a
    com.google.gson.TypeAdapterFactory newFactoryForMultipleTypes(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter) -> b
    com.google.gson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class,com.google.gson.TypeAdapter) -> b
com.google.gson.internal.bind.TypeAdapters$1 -> com.google.a.b.a.z:
    void write(com.google.gson.stream.JsonWriter,java.lang.Class) -> a
    java.lang.Class read(com.google.gson.stream.JsonReader) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$10 -> com.google.a.b.a.aa:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$11 -> com.google.a.b.a.ab:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$12 -> com.google.a.b.a.ac:
    java.lang.Character read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Character) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$13 -> com.google.a.b.a.ad:
    java.lang.String read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.String) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$14 -> com.google.a.b.a.ae:
    java.math.BigDecimal read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.math.BigDecimal) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$15 -> com.google.a.b.a.af:
    java.math.BigInteger read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.math.BigInteger) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$16 -> com.google.a.b.a.ag:
    java.lang.StringBuilder read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.StringBuilder) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$17 -> com.google.a.b.a.ah:
    java.lang.StringBuffer read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.StringBuffer) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$18 -> com.google.a.b.a.ai:
    java.net.URL read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.net.URL) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$19 -> com.google.a.b.a.aj:
    java.net.URI read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.net.URI) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$2 -> com.google.a.b.a.ak:
    java.util.BitSet read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.util.BitSet) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$20 -> com.google.a.b.a.al:
    java.net.InetAddress read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.net.InetAddress) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$21 -> com.google.a.b.a.am:
    java.util.UUID read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.util.UUID) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$22 -> com.google.a.b.a.an:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
com.google.gson.internal.bind.TypeAdapters$22$1 -> com.google.a.b.a.ao:
    com.google.gson.TypeAdapter val$dateTypeAdapter -> a
    com.google.gson.internal.bind.TypeAdapters$22 this$0 -> b
    java.sql.Timestamp read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.sql.Timestamp) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$23 -> com.google.a.b.a.ap:
    java.util.Calendar read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.util.Calendar) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$24 -> com.google.a.b.a.aq:
    java.util.Locale read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.util.Locale) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$25 -> com.google.a.b.a.ar:
    com.google.gson.JsonElement read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$26 -> com.google.a.b.a.as:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
com.google.gson.internal.bind.TypeAdapters$28 -> com.google.a.b.a.at:
    java.lang.Class val$type -> a
    com.google.gson.TypeAdapter val$typeAdapter -> b
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
    java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$29 -> com.google.a.b.a.au:
    java.lang.Class val$unboxed -> a
    java.lang.Class val$boxed -> b
    com.google.gson.TypeAdapter val$typeAdapter -> c
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
    java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$3 -> com.google.a.b.a.av:
    java.lang.Boolean read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Boolean) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$30 -> com.google.a.b.a.aw:
    java.lang.Class val$base -> a
    java.lang.Class val$sub -> b
    com.google.gson.TypeAdapter val$typeAdapter -> c
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
    java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$31 -> com.google.a.b.a.ax:
    java.lang.Class val$clazz -> a
    com.google.gson.TypeAdapter val$typeAdapter -> b
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
    java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$32 -> com.google.a.b.a.ay:
    int[] $SwitchMap$com$google$gson$stream$JsonToken -> a
com.google.gson.internal.bind.TypeAdapters$4 -> com.google.a.b.a.az:
    java.lang.Boolean read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Boolean) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$5 -> com.google.a.b.a.ba:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$6 -> com.google.a.b.a.bb:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$7 -> com.google.a.b.a.bc:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$8 -> com.google.a.b.a.bd:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$9 -> com.google.a.b.a.be:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter -> com.google.a.b.a.bf:
    java.util.Map nameToConstant -> a
    java.util.Map constantToName -> b
    java.lang.Enum read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Enum) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.reflect.TypeToken -> com.google.a.c.a:
    java.lang.Class rawType -> a
    java.lang.reflect.Type type -> b
    int hashCode -> c
    java.lang.reflect.Type getSuperclassTypeParameter(java.lang.Class) -> a
    java.lang.Class getRawType() -> a
    java.lang.reflect.Type getType() -> b
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    com.google.gson.reflect.TypeToken get(java.lang.reflect.Type) -> a
    com.google.gson.reflect.TypeToken get(java.lang.Class) -> b
com.google.gson.stream.JsonReader -> com.google.a.d.a:
    char[] NON_EXECUTE_PREFIX -> a
    com.google.gson.stream.StringPool stringPool -> b
    java.io.Reader in -> c
    boolean lenient -> d
    char[] buffer -> e
    int pos -> f
    int limit -> g
    int bufferStartLine -> h
    int bufferStartColumn -> i
    com.google.gson.stream.JsonScope[] stack -> j
    int stackSize -> k
    com.google.gson.stream.JsonToken token -> l
    java.lang.String name -> m
    java.lang.String value -> n
    int valuePos -> o
    int valueLength -> p
    boolean skipping -> q
    void setLenient(boolean) -> a
    boolean isLenient() -> p
    void beginArray() -> a
    void endArray() -> b
    void beginObject() -> c
    void endObject() -> d
    void expect(com.google.gson.stream.JsonToken) -> a
    boolean hasNext() -> e
    com.google.gson.stream.JsonToken peek() -> f
    void consumeNonExecutePrefix() -> o
    com.google.gson.stream.JsonToken advance() -> q
    java.lang.String nextName() -> g
    java.lang.String nextString() -> h
    boolean nextBoolean() -> i
    void nextNull() -> j
    double nextDouble() -> k
    long nextLong() -> l
    int nextInt() -> m
    void close() -> close
    void skipValue() -> n
    void push(com.google.gson.stream.JsonScope) -> a
    com.google.gson.stream.JsonToken nextInArray(boolean) -> b
    com.google.gson.stream.JsonToken nextInObject(boolean) -> c
    com.google.gson.stream.JsonToken objectValue() -> r
    com.google.gson.stream.JsonToken nextValue() -> s
    boolean fillBuffer(int) -> a
    int getLineNumber() -> t
    int getColumnNumber() -> u
    int nextNonWhitespace(boolean) -> d
    void checkLenient() -> v
    void skipToEndOfLine() -> w
    boolean skipTo(java.lang.String) -> a
    java.lang.String nextString(char) -> a
    java.lang.String nextLiteral(boolean) -> e
    java.lang.String toString() -> toString
    char readEscapeCharacter() -> x
    com.google.gson.stream.JsonToken readLiteral() -> y
    com.google.gson.stream.JsonToken decodeLiteral() -> z
    com.google.gson.stream.JsonToken decodeNumber(char[],int,int) -> a
    java.io.IOException syntaxError(java.lang.String) -> b
    com.google.gson.stream.JsonToken access$000(com.google.gson.stream.JsonReader) -> a
    int access$100(com.google.gson.stream.JsonReader) -> b
    int access$200(com.google.gson.stream.JsonReader) -> c
    java.lang.String access$302(com.google.gson.stream.JsonReader,java.lang.String) -> a
    java.lang.String access$400(com.google.gson.stream.JsonReader) -> d
    java.lang.String access$402(com.google.gson.stream.JsonReader,java.lang.String) -> b
    com.google.gson.stream.JsonToken access$002(com.google.gson.stream.JsonReader,com.google.gson.stream.JsonToken) -> a
com.google.gson.stream.JsonReader$1 -> com.google.a.d.b:
    void promoteNameToValue(com.google.gson.stream.JsonReader) -> a
com.google.gson.stream.JsonReader$2 -> com.google.a.d.c:
    int[] $SwitchMap$com$google$gson$stream$JsonScope -> a
com.google.gson.stream.JsonScope -> com.google.a.d.d:
    com.google.gson.stream.JsonScope EMPTY_ARRAY -> a
    com.google.gson.stream.JsonScope NONEMPTY_ARRAY -> b
    com.google.gson.stream.JsonScope EMPTY_OBJECT -> c
    com.google.gson.stream.JsonScope DANGLING_NAME -> d
    com.google.gson.stream.JsonScope NONEMPTY_OBJECT -> e
    com.google.gson.stream.JsonScope EMPTY_DOCUMENT -> f
    com.google.gson.stream.JsonScope NONEMPTY_DOCUMENT -> g
    com.google.gson.stream.JsonScope CLOSED -> h
    com.google.gson.stream.JsonScope[] $VALUES -> i
    com.google.gson.stream.JsonScope[] values() -> values
    com.google.gson.stream.JsonScope valueOf(java.lang.String) -> valueOf
com.google.gson.stream.JsonToken -> com.google.a.d.e:
    com.google.gson.stream.JsonToken BEGIN_ARRAY -> a
    com.google.gson.stream.JsonToken END_ARRAY -> b
    com.google.gson.stream.JsonToken BEGIN_OBJECT -> c
    com.google.gson.stream.JsonToken END_OBJECT -> d
    com.google.gson.stream.JsonToken NAME -> e
    com.google.gson.stream.JsonToken STRING -> f
    com.google.gson.stream.JsonToken NUMBER -> g
    com.google.gson.stream.JsonToken BOOLEAN -> h
    com.google.gson.stream.JsonToken NULL -> i
    com.google.gson.stream.JsonToken END_DOCUMENT -> j
    com.google.gson.stream.JsonToken[] $VALUES -> k
    com.google.gson.stream.JsonToken[] values() -> values
    com.google.gson.stream.JsonToken valueOf(java.lang.String) -> valueOf
com.google.gson.stream.JsonWriter -> com.google.a.d.f:
    java.lang.String[] REPLACEMENT_CHARS -> a
    java.lang.String[] HTML_SAFE_REPLACEMENT_CHARS -> b
    java.io.Writer out -> c
    java.util.List stack -> d
    java.lang.String indent -> e
    java.lang.String separator -> f
    boolean lenient -> g
    boolean htmlSafe -> h
    java.lang.String deferredName -> i
    boolean serializeNulls -> j
    void setIndent(java.lang.String) -> c
    void setLenient(boolean) -> b
    boolean isLenient() -> g
    void setHtmlSafe(boolean) -> c
    boolean isHtmlSafe() -> h
    void setSerializeNulls(boolean) -> d
    boolean getSerializeNulls() -> i
    com.google.gson.stream.JsonWriter beginArray() -> b
    com.google.gson.stream.JsonWriter endArray() -> c
    com.google.gson.stream.JsonWriter beginObject() -> d
    com.google.gson.stream.JsonWriter endObject() -> e
    com.google.gson.stream.JsonWriter open(com.google.gson.stream.JsonScope,java.lang.String) -> a
    com.google.gson.stream.JsonWriter close(com.google.gson.stream.JsonScope,com.google.gson.stream.JsonScope,java.lang.String) -> a
    com.google.gson.stream.JsonScope peek() -> a
    void replaceTop(com.google.gson.stream.JsonScope) -> a
    com.google.gson.stream.JsonWriter name(java.lang.String) -> a
    void writeDeferredName() -> j
    com.google.gson.stream.JsonWriter value(java.lang.String) -> b
    com.google.gson.stream.JsonWriter nullValue() -> f
    com.google.gson.stream.JsonWriter value(boolean) -> a
    com.google.gson.stream.JsonWriter value(long) -> a
    com.google.gson.stream.JsonWriter value(java.lang.Number) -> a
    void flush() -> flush
    void close() -> close
    void string(java.lang.String) -> d
    void newline() -> k
    void beforeName() -> l
    void beforeValue(boolean) -> e
com.google.gson.stream.JsonWriter$1 -> com.google.a.d.g:
    int[] $SwitchMap$com$google$gson$stream$JsonScope -> a
com.google.gson.stream.MalformedJsonException -> com.google.a.d.h:
com.google.gson.stream.StringPool -> com.google.a.d.i:
    java.lang.String[] pool -> a
    java.lang.String get(char[],int,int) -> a
com.sunoray.tentacle.GCMIntentService -> com.sunoray.tentacle.GCMIntentService:
    org.slf4j.Logger log -> c
    int reqCall -> a
    java.util.Queue callidqueue -> b
    void onMessage(android.content.Context,android.content.Intent) -> a
    void sendSharedPreference(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> a
    void sendCurrentLocation(android.content.Context) -> a
    void onUnregistered(android.content.Context,java.lang.String) -> d
    void sendNotification(android.content.Context,java.lang.String,java.lang.String,java.lang.String,android.content.Intent) -> a
    void sendNotification(android.content.Context,java.lang.String,android.content.Intent) -> a
    void sendMsg(android.content.Context,java.lang.String) -> e
    void playNotification() -> a
    void sendLogToServer() -> b
    void onExtraNotification(android.content.Context,java.lang.String,android.content.Intent) -> b
    void onError(android.content.Context,java.lang.String) -> b
    void onRegistered(android.content.Context,java.lang.String) -> c
    void onDestroy() -> onDestroy
    void addHitQueue(java.lang.String,java.lang.String) -> a
    boolean matchHitQueue(java.lang.String,java.lang.String) -> b
com.sunoray.tentacle.GCMIntentService$1 -> com.sunoray.tentacle.a:
    com.sunoray.tentacle.GCMIntentService this$0 -> a
    com.sunoray.tentacle.bean.LocationBean val$locationbean -> b
    android.content.Context val$context -> c
    com.sunoray.tentacle.helper.LocationTracker val$mGPS -> d
    void onTick(long) -> onTick
    void onFinish() -> onFinish
com.sunoray.tentacle.GCMIntentService$2 -> com.sunoray.tentacle.b:
    com.sunoray.tentacle.GCMIntentService this$0 -> a
    void run() -> run
com.sunoray.tentacle.MainActivity -> com.sunoray.tentacle.MainActivity:
    org.slf4j.Logger log -> b
    android.widget.TableLayout table -> c
    android.widget.TextView alert -> d
    android.content.BroadcastReceiver tentacleReceiver -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void checkAppPrerequisite() -> c
    void displayCallRecodedList() -> d
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    org.slf4j.Logger access$0() -> a
    android.widget.TextView access$1() -> b
    void access$2(com.sunoray.tentacle.MainActivity) -> a
com.sunoray.tentacle.MainActivity$1 -> com.sunoray.tentacle.c:
    com.sunoray.tentacle.MainActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.sunoray.tentacle.MainActivity$2 -> com.sunoray.tentacle.d:
    com.sunoray.tentacle.MainActivity this$0 -> a
    com.sunoray.tentacle.layout.TableViewSwipeRefreshLayout val$swipeRefreshLayout -> b
    void onRefresh() -> a
com.sunoray.tentacle.MainActivity$3 -> com.sunoray.tentacle.e:
    com.sunoray.tentacle.MainActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.sunoray.tentacle.MainActivity$4 -> com.sunoray.tentacle.f:
    com.sunoray.tentacle.MainActivity this$0 -> a
    java.lang.String[] val$syncOptions -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.sunoray.tentacle.PingTestFragment -> com.sunoray.tentacle.g:
    org.slf4j.Logger log -> f
    android.widget.TextView txtInternetConnectionStatus -> a
    android.widget.TextView txtPingTest -> b
    android.widget.TextView txtTentacleServerTest -> c
    android.widget.TextView txtSentDeviceDetail -> d
    android.widget.TextView txtShowErrorDetail -> e
    com.sunoray.tentacle.PingTestFragment newInstance() -> a
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    boolean checkInternetConnection() -> b
    void checkTentacleServer() -> c
    void checkPingTest() -> d
    void sendLogToServer() -> e
    void startLocationService() -> f
    void resetFlags() -> g
com.sunoray.tentacle.PingTestFragment$1 -> com.sunoray.tentacle.h:
    com.sunoray.tentacle.PingTestFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.sunoray.tentacle.StartupActivity -> com.sunoray.tentacle.StartupActivity:
    org.slf4j.Logger log -> i
    android.widget.TextView alert -> a
    android.widget.ProgressBar pb -> b
    android.widget.Button btnLogin -> c
    android.widget.Button btnViewCall -> d
    android.widget.TextView btnSignUp -> e
    android.widget.Button retry -> f
    android.view.MenuItem optMenuAudioSettings -> g
    android.content.BroadcastReceiver tentacleReceiver -> h
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onResume() -> onResume
    void onPause() -> onPause
    void renderAfterReg() -> c
    boolean checkAppPrerequisite() -> d
    void registerClient() -> a
    void sendRegistrationToServer() -> e
    void registerGCM() -> f
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    org.slf4j.Logger access$0() -> b
    boolean access$1(com.sunoray.tentacle.StartupActivity) -> a
com.sunoray.tentacle.StartupActivity$1 -> com.sunoray.tentacle.i:
    com.sunoray.tentacle.StartupActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.sunoray.tentacle.StartupActivity$10 -> com.sunoray.tentacle.j:
    com.sunoray.tentacle.StartupActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.sunoray.tentacle.StartupActivity$11 -> com.sunoray.tentacle.k:
    com.sunoray.tentacle.StartupActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.sunoray.tentacle.StartupActivity$2 -> com.sunoray.tentacle.l:
    com.sunoray.tentacle.StartupActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.sunoray.tentacle.StartupActivity$3 -> com.sunoray.tentacle.m:
    com.sunoray.tentacle.StartupActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.sunoray.tentacle.StartupActivity$4 -> com.sunoray.tentacle.n:
    com.sunoray.tentacle.StartupActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.sunoray.tentacle.StartupActivity$5 -> com.sunoray.tentacle.o:
    com.sunoray.tentacle.StartupActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.sunoray.tentacle.StartupActivity$6 -> com.sunoray.tentacle.p:
    com.sunoray.tentacle.StartupActivity this$0 -> a
    void run() -> run
com.sunoray.tentacle.StartupActivity$7 -> com.sunoray.tentacle.q:
    com.sunoray.tentacle.StartupActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.sunoray.tentacle.StartupActivity$8 -> com.sunoray.tentacle.r:
    com.sunoray.tentacle.StartupActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.sunoray.tentacle.StartupActivity$9 -> com.sunoray.tentacle.s:
    com.sunoray.tentacle.StartupActivity this$0 -> a
    java.lang.String[] val$items -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.sunoray.tentacle.TentacleJSInterface -> com.sunoray.tentacle.t:
    android.content.Context context -> a
    android.webkit.WebView tentacleBrowser -> b
    org.slf4j.Logger log -> c
    java.lang.String getLocation(java.lang.String) -> getLocation
    java.lang.String userTracker(java.lang.String,java.lang.String,java.lang.String) -> userTracker
    void disconnectCall() -> disconnectCall
    void postLocation(java.lang.String,java.lang.Double,java.lang.Double) -> postLocation
    android.webkit.WebView access$0(com.sunoray.tentacle.TentacleJSInterface) -> a
com.sunoray.tentacle.TentacleJSInterface$1 -> com.sunoray.tentacle.u:
    com.sunoray.tentacle.TentacleJSInterface this$0 -> a
    com.sunoray.tentacle.bean.LocationBean val$locationbean -> b
    com.sunoray.tentacle.helper.LocationTracker val$mGPS -> c
    void onTick(long) -> onTick
    void onFinish() -> onFinish
com.sunoray.tentacle.TentacleJSInterface$2 -> com.sunoray.tentacle.v:
    com.sunoray.tentacle.TentacleJSInterface this$0 -> a
    java.lang.String val$status -> b
    java.lang.Double val$latitude -> c
    java.lang.Double val$longitude -> d
    void run() -> run
com.sunoray.tentacle.ViewActivity -> com.sunoray.tentacle.ViewActivity:
    org.slf4j.Logger log -> g
    android.webkit.WebView tentacleBrowser -> a
    android.widget.ProgressBar pageLoadinBar -> b
    android.widget.ProgressBar viewLoadingBar -> c
    com.sunoray.tentacle.layout.WebViewSwipeRefreshLayout swipeRefreshLayout -> d
    boolean doubleBackToExitPressedOnce -> e
    java.lang.String currentURL -> h
    android.webkit.ValueCallback uploadMessage -> i
    android.webkit.ValueCallback uploadMessageArray -> j
    android.net.Uri fileUri -> k
    android.support.v4.content.WakefulBroadcastReceiver viewActivityReceiver -> f
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    void ImageChooserDialog() -> b
    void onBackPressed() -> onBackPressed
    void onPause() -> onPause
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    org.slf4j.Logger access$0() -> a
    java.lang.String access$1(com.sunoray.tentacle.ViewActivity) -> a
    void access$2(com.sunoray.tentacle.ViewActivity,java.lang.String) -> a
    void access$3(com.sunoray.tentacle.ViewActivity,android.webkit.ValueCallback) -> a
    void access$4(com.sunoray.tentacle.ViewActivity) -> b
    void access$5(com.sunoray.tentacle.ViewActivity,android.webkit.ValueCallback) -> b
    void access$6(com.sunoray.tentacle.ViewActivity,android.net.Uri) -> a
    android.net.Uri access$7(com.sunoray.tentacle.ViewActivity) -> c
com.sunoray.tentacle.ViewActivity$1 -> com.sunoray.tentacle.w:
    com.sunoray.tentacle.ViewActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.sunoray.tentacle.ViewActivity$2 -> com.sunoray.tentacle.x:
    com.sunoray.tentacle.ViewActivity this$0 -> a
    void onProgressChanged(android.webkit.WebView,int) -> onProgressChanged
    void openFileChooser(android.webkit.ValueCallback,java.lang.String) -> openFileChooser
    void openFileChooser(android.webkit.ValueCallback,java.lang.String,java.lang.String) -> openFileChooser
    boolean onShowFileChooser(android.webkit.WebView,android.webkit.ValueCallback,android.webkit.WebChromeClient$FileChooserParams) -> onShowFileChooser
com.sunoray.tentacle.ViewActivity$3 -> com.sunoray.tentacle.y:
    com.sunoray.tentacle.ViewActivity this$0 -> a
    void onRefresh() -> a
com.sunoray.tentacle.ViewActivity$4 -> com.sunoray.tentacle.z:
    com.sunoray.tentacle.ViewActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.sunoray.tentacle.ViewActivity$5 -> com.sunoray.tentacle.aa:
    com.sunoray.tentacle.ViewActivity this$0 -> a
    android.widget.Toast val$toast -> b
    void run() -> run
com.sunoray.tentacle.ViewActivity$MyBrowser -> com.sunoray.tentacle.ab:
    com.sunoray.tentacle.ViewActivity this$0 -> a
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
com.sunoray.tentacle.bean.LocationBean -> com.sunoray.tentacle.a.a:
    double latitude -> latitude
    double longitude -> longitude
    double getLatitude() -> getLatitude
    void setLatitude(double) -> setLatitude
    double getLongitude() -> getLongitude
    void setLongitude(double) -> setLongitude
com.sunoray.tentacle.bean.Tracker_updates -> com.sunoray.tentacle.a.b:
    java.lang.String lng -> lng
    java.lang.String lat -> lat
    java.lang.String captured_at -> captured_at
    java.util.Map device_info -> device_info
    java.lang.String getLng() -> getLng
    void setLng(java.lang.String) -> setLng
    java.lang.String getLat() -> getLat
    void setLat(java.lang.String) -> setLat
    java.lang.String getCaptured_at() -> getCaptured_at
    void setCaptured_at(java.lang.String) -> setCaptured_at
    java.util.Map getDevice_info() -> getDevice_info
    void setDevice_info(java.util.Map) -> setDevice_info
com.sunoray.tentacle.bean.UserTrackJson -> com.sunoray.tentacle.a.c:
    java.lang.String unique_session_id -> unique_session_id
    java.util.List tracker_updates -> tracker_updates
    java.lang.String getUnique_session_id() -> getUnique_session_id
    void setUnique_session_id(java.lang.String) -> setUnique_session_id
    java.util.List getTracker_updates() -> getTracker_updates
    void setTracker_updates(java.util.List) -> setTracker_updates
com.sunoray.tentacle.common.AppProperties -> com.sunoray.tentacle.b.a:
    java.lang.String PROJECT_ID -> a
    java.lang.String WEB_APP_URL -> b
    java.lang.String MEDIA_SERVER_URL -> c
    boolean activeAlertDialog -> d
    boolean dialerCallback -> e
    boolean isCallServiceRunning -> f
com.sunoray.tentacle.common.PreferanceUtil -> com.sunoray.tentacle.b.b:
    java.lang.String[] AUDIOSOURCE_ITEM -> a
    java.lang.String[] SyncOption_ITEM -> b
    java.lang.String[] RECORDING_ITEM -> c
    boolean setSharedPreferences(android.content.Context,java.lang.String,java.lang.String) -> a
    java.lang.String getSharedPreferences(android.content.Context,java.lang.String,java.lang.String) -> b
    long getSharedPreferences(android.content.Context,java.lang.String,long) -> a
    java.lang.String[] getAudiosourceItems() -> a
    java.lang.String[] getSyncOptions() -> b
    java.lang.String[] getRecordingOption() -> c
com.sunoray.tentacle.common.Util -> com.sunoray.tentacle.b.c:
    org.slf4j.Logger log -> a
    void send2tentacleReceiver(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> a
    void send2ViewActivity(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    boolean isNull(java.lang.String) -> a
    boolean canUpload(android.content.Context) -> a
    int string2Int(java.lang.String) -> b
    java.net.HttpURLConnection getConnection(java.lang.String) -> c
    boolean isAfterInterval(java.lang.String,int) -> a
    boolean makeNumberHiding(java.lang.String) -> d
    java.lang.String getFilePathFromURI(android.content.Context,android.net.Uri) -> a
    java.lang.String getDataColumn(android.content.Context,android.net.Uri,java.lang.String,java.lang.String[]) -> a
    boolean isJSON(java.lang.String) -> e
    java.lang.String checkPhoneNumber(java.lang.String) -> f
    boolean isExternalStorageDocument(android.net.Uri) -> a
    boolean isDownloadsDocument(android.net.Uri) -> b
    boolean isMediaDocument(android.net.Uri) -> c
com.sunoray.tentacle.db.DatabaseHandler -> com.sunoray.tentacle.c.a:
    org.slf4j.Logger log -> a
    android.database.sqlite.SQLiteDatabase db -> b
    android.database.Cursor cursor -> c
    android.content.Context context -> d
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    void addRecording(com.sunoray.tentacle.db.Recording) -> a
    void updateRecording(com.sunoray.tentacle.db.Recording) -> b
    boolean checkRecording(java.lang.String) -> a
    java.util.List getRecordings(java.lang.String) -> b
    java.util.List getAllRecordingsToUpload(java.lang.String[]) -> a
    int updateRecStatusNNoOfTries(com.sunoray.tentacle.db.Recording) -> c
    void deleteRecordings(java.lang.String) -> c
    void addLocation(java.lang.String,java.lang.String,java.lang.String) -> a
    java.util.List getAllLocation() -> a
    void removeLocation(java.util.List) -> a
    void removeLocation(java.lang.String,java.lang.String) -> a
    java.lang.String getDateTime() -> b
    void attemptClose(android.database.sqlite.SQLiteDatabase) -> a
    void attemptClose(android.database.Cursor) -> a
com.sunoray.tentacle.db.DatabaseHandler$1 -> com.sunoray.tentacle.c.b:
    com.sunoray.tentacle.db.DatabaseHandler this$0 -> d
com.sunoray.tentacle.db.Recording -> com.sunoray.tentacle.c.c:
    int id -> a
    java.lang.String callId -> b
    java.lang.String path -> c
    java.lang.String phoneNumber -> d
    java.lang.String hideNumber -> e
    java.lang.String createdAt -> f
    java.lang.String updatedAt -> g
    int numberOfTries -> h
    java.lang.String status -> i
    int duration -> j
    java.lang.String audioSrc -> k
    java.lang.String serverType -> l
    int dataSent -> m
    java.lang.String accountId -> n
    java.lang.String campaignId -> o
    java.lang.String prospectId -> p
    long dialTime -> q
    void setId(int) -> a
    java.lang.String getCallId() -> a
    void setCallId(java.lang.String) -> a
    java.lang.String getPath() -> b
    void setPath(java.lang.String) -> b
    java.lang.String getPhoneNumber() -> c
    void setPhoneNumber(java.lang.String) -> c
    java.lang.String getCreatedAt() -> d
    void setCreatedAt(java.lang.String) -> d
    void setUpdatedAt(java.lang.String) -> e
    int getNumberOfTries() -> e
    void setNumberOfTries(int) -> b
    java.lang.String getStatus() -> f
    void setStatus(java.lang.String) -> f
    int getDuration() -> g
    void setDuration(int) -> c
    java.lang.String getAudioSrc() -> h
    void setAudioSrc(java.lang.String) -> g
    java.lang.String getServerType() -> i
    void setServerType(java.lang.String) -> h
    int getDataSent() -> j
    void setDataSent(int) -> d
    java.lang.String getAccountId() -> k
    void setAccountId(java.lang.String) -> i
    java.lang.String getCampaignId() -> l
    void setCampaignId(java.lang.String) -> j
    java.lang.String getProspectId() -> m
    void setProspectId(java.lang.String) -> k
    java.lang.String getHideNumber() -> n
    void setHideNumber(java.lang.String) -> l
    long getDialTime() -> o
    void setDialTime(long) -> a
com.sunoray.tentacle.extraActivity.CallActivity -> com.sunoray.tentacle.extraActivity.CallActivity:
    org.slf4j.Logger log -> a
    com.sunoray.tentacle.db.Recording rec -> b
    void onCreate(android.os.Bundle) -> onCreate
    void callNumber() -> a
    boolean isCallInProgress() -> c
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    org.slf4j.Logger access$0() -> b
com.sunoray.tentacle.extraActivity.CallActivity$1 -> com.sunoray.tentacle.extraActivity.a:
    com.sunoray.tentacle.extraActivity.CallActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.sunoray.tentacle.extraActivity.CallActivity$2 -> com.sunoray.tentacle.extraActivity.b:
    com.sunoray.tentacle.extraActivity.CallActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.sunoray.tentacle.extraActivity.GCMActivity -> com.sunoray.tentacle.extraActivity.GCMActivity:
    org.slf4j.Logger log -> a
    java.lang.String action -> b
    com.sunoray.tentacle.db.Recording rec -> c
    void onCreate(android.os.Bundle) -> onCreate
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void removeHitQueue(java.lang.String) -> a
    org.slf4j.Logger access$0() -> a
    com.sunoray.tentacle.db.Recording access$1(com.sunoray.tentacle.extraActivity.GCMActivity) -> a
    void access$2(com.sunoray.tentacle.extraActivity.GCMActivity,java.lang.String) -> a
    java.lang.String access$3(com.sunoray.tentacle.extraActivity.GCMActivity) -> b
com.sunoray.tentacle.extraActivity.GCMActivity$1 -> com.sunoray.tentacle.extraActivity.c:
    com.sunoray.tentacle.extraActivity.GCMActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.sunoray.tentacle.extraActivity.GCMActivity$2 -> com.sunoray.tentacle.extraActivity.d:
    com.sunoray.tentacle.extraActivity.GCMActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.sunoray.tentacle.extraActivity.GCMActivity$3 -> com.sunoray.tentacle.extraActivity.e:
    com.sunoray.tentacle.extraActivity.GCMActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.sunoray.tentacle.extraActivity.GCMActivity$4 -> com.sunoray.tentacle.extraActivity.f:
    com.sunoray.tentacle.extraActivity.GCMActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.sunoray.tentacle.extraActivity.MsgViewActivity -> com.sunoray.tentacle.extraActivity.MsgViewActivity:
    org.slf4j.Logger log -> a
    void onCreate(android.os.Bundle) -> onCreate
com.sunoray.tentacle.extraActivity.MsgViewActivity$1 -> com.sunoray.tentacle.extraActivity.g:
    com.sunoray.tentacle.extraActivity.MsgViewActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.sunoray.tentacle.helper.BetteryHelper -> com.sunoray.tentacle.d.a:
    org.slf4j.Logger log -> a
    java.lang.String getBatteryLevel(android.content.Context) -> a
com.sunoray.tentacle.helper.CallHelper -> com.sunoray.tentacle.d.b:
    org.slf4j.Logger log -> a
    boolean isCallInProgress(android.content.Context) -> a
    void endCall(android.content.Context) -> b
com.sunoray.tentacle.helper.ImageProcessor -> com.sunoray.tentacle.d.c:
    org.slf4j.Logger log -> a
    void Rescale(android.net.Uri,android.net.Uri) -> a
com.sunoray.tentacle.helper.LocationTracker -> com.sunoray.tentacle.d.d:
    org.slf4j.Logger log -> f
    android.content.Context context -> g
    boolean isGPSEnabled -> a
    boolean isNetworkEnabled -> b
    boolean canGetLocation -> c
    android.location.Location location -> d
    android.location.LocationManager locationManager -> e
    com.sunoray.tentacle.bean.LocationBean locationbean -> h
    boolean getLocation() -> a
    void stopUsingGPS() -> b
    void showLocationSettingsAlert(android.content.Context) -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
com.sunoray.tentacle.helper.LocationTracker$1 -> com.sunoray.tentacle.d.e:
    android.content.Context val$context -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.sunoray.tentacle.helper.LocationTracker$2 -> com.sunoray.tentacle.d.f:
    void onClick(android.content.DialogInterface,int) -> onClick
com.sunoray.tentacle.helper.MediaRecording -> com.sunoray.tentacle.d.g:
    android.media.MediaRecorder recorder -> c
    int[] output_formats -> d
    java.lang.String[] file_exts -> e
    int currentFormat -> f
    java.lang.String callid -> g
    org.slf4j.Logger log -> h
    java.lang.String recState -> a
    android.content.Context context -> b
    android.media.MediaRecorder$OnErrorListener errorListener -> i
    android.media.MediaRecorder$OnInfoListener infoListener -> j
    void startRecording(java.lang.String) -> a
    void initRecorder(java.lang.String) -> b
    void stopRecording() -> a
    java.lang.String getFilename() -> b
    org.slf4j.Logger access$0() -> c
com.sunoray.tentacle.helper.MediaRecording$1 -> com.sunoray.tentacle.d.h:
    com.sunoray.tentacle.helper.MediaRecording this$0 -> a
    void onError(android.media.MediaRecorder,int,int) -> onError
com.sunoray.tentacle.helper.MediaRecording$2 -> com.sunoray.tentacle.d.i:
    com.sunoray.tentacle.helper.MediaRecording this$0 -> a
    void onInfo(android.media.MediaRecorder,int,int) -> onInfo
com.sunoray.tentacle.helper.StorageHandler -> com.sunoray.tentacle.d.j:
    org.slf4j.Logger log -> a
    java.io.File getFileDirPath(android.content.Context,java.lang.String) -> a
    java.lang.String setStorageAvailable() -> a
    long getAvailableInternalMemorySize() -> b
    boolean externalMemoryAvailable() -> c
com.sunoray.tentacle.layout.TableViewSwipeRefreshLayout -> com.sunoray.tentacle.layout.TableViewSwipeRefreshLayout:
    android.widget.ScrollView view -> c
    void setView(android.widget.ScrollView) -> setView
    void onFinishInflate() -> onFinishInflate
    boolean canChildScrollUp() -> a
    void setColorSchemeColors(int[]) -> setColorSchemeColors
com.sunoray.tentacle.layout.WebViewSwipeRefreshLayout -> com.sunoray.tentacle.layout.WebViewSwipeRefreshLayout:
    android.webkit.WebView view -> c
    void setView(android.webkit.WebView) -> setView
    void onFinishInflate() -> onFinishInflate
    boolean canChildScrollUp() -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    void setColorSchemeColors(int[]) -> setColorSchemeColors
com.sunoray.tentacle.network.BulkUploadLoop -> com.sunoray.tentacle.e.a:
    android.content.Context context -> a
    org.slf4j.Logger log -> b
    java.lang.Boolean backgroundStatus -> c
    java.lang.Boolean doInBackground(java.lang.Void[]) -> a
    boolean upload() -> a
    void onPostExecute(java.lang.Boolean) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.sunoray.tentacle.network.HttpServices -> com.sunoray.tentacle.e.b:
    org.slf4j.Logger log -> a
    okhttp3.OkHttpClient client -> b
    okhttp3.Response post(java.lang.String,java.util.Map) -> a
    okhttp3.FormBody$Builder formBodyBuilder(java.util.Map) -> a
com.sunoray.tentacle.network.NetworkUtil -> com.sunoray.tentacle.e.c:
    int TYPE_WIFI -> a
    int TYPE_MOBILE -> b
    int TYPE_NOT_CONNECTED -> c
    int getConnectivityStatus(android.content.Context) -> a
    int getUserSyncPreferece(android.content.Context) -> b
    boolean isNetworkAvailable(android.content.Context) -> c
com.sunoray.tentacle.service.BackGroundService -> com.sunoray.tentacle.service.BackGroundService:
    org.slf4j.Logger log -> a
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onCreate() -> onCreate
    void onStart(android.content.Intent,int) -> onStart
    void onDestroy() -> onDestroy
com.sunoray.tentacle.service.CallService -> com.sunoray.tentacle.service.CallService:
    org.slf4j.Logger log -> a
    android.content.Context context -> b
    android.telephony.TelephonyManager telephonyManager -> c
    com.sunoray.tentacle.service.CallService$PhoneCallListener phoneListener -> d
    com.sunoray.tentacle.helper.MediaRecording media -> e
    java.lang.String recordingOption -> f
    com.sunoray.tentacle.db.Recording rec -> g
    android.view.View tDialerView -> h
    android.view.WindowManager wm -> i
    void onCreate() -> onCreate
    void onStart(android.content.Intent,int) -> onStart
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void handleStart(android.content.Intent,int) -> a
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void openTDialer() -> c
    void closeTDialer() -> a
    void onDestroy() -> onDestroy
    org.slf4j.Logger access$0() -> b
    com.sunoray.tentacle.db.Recording access$1(com.sunoray.tentacle.service.CallService) -> a
    void access$2(com.sunoray.tentacle.service.CallService) -> b
    android.content.Context access$3(com.sunoray.tentacle.service.CallService) -> c
    void access$4(com.sunoray.tentacle.service.CallService,com.sunoray.tentacle.helper.MediaRecording) -> a
    java.lang.String access$5(com.sunoray.tentacle.service.CallService) -> d
    com.sunoray.tentacle.helper.MediaRecording access$6(com.sunoray.tentacle.service.CallService) -> e
    android.telephony.TelephonyManager access$7(com.sunoray.tentacle.service.CallService) -> f
    com.sunoray.tentacle.service.CallService$PhoneCallListener access$8(com.sunoray.tentacle.service.CallService) -> g
    android.view.View access$9(com.sunoray.tentacle.service.CallService) -> h
    android.view.WindowManager access$10(com.sunoray.tentacle.service.CallService) -> i
    void access$11(com.sunoray.tentacle.service.CallService,android.view.View) -> a
com.sunoray.tentacle.service.CallService$1 -> com.sunoray.tentacle.service.a:
    com.sunoray.tentacle.service.CallService this$0 -> a
    void onClick(android.view.View) -> onClick
com.sunoray.tentacle.service.CallService$2 -> com.sunoray.tentacle.service.b:
    com.sunoray.tentacle.service.CallService this$0 -> a
    void onClick(android.view.View) -> onClick
com.sunoray.tentacle.service.CallService$PhoneCallListener -> com.sunoray.tentacle.service.c:
    boolean isPhoneCalling -> a
    com.sunoray.tentacle.service.CallService this$0 -> b
    void onCallStateChanged(int,java.lang.String) -> onCallStateChanged
com.sunoray.tentacle.service.TrackerService -> com.sunoray.tentacle.service.TrackerService:
    org.slf4j.Logger log -> d
    android.content.Context context -> e
    boolean isNetworkLocationEnabled -> a
    boolean canGetLocation -> b
    android.location.LocationManager locationManager -> c
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
    void onStart(android.content.Intent,int) -> onStart
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void startLocationTracker(android.content.Intent,int) -> a
    android.os.IBinder onBind(android.content.Intent) -> onBind
    android.content.Context access$0(com.sunoray.tentacle.service.TrackerService) -> a
    org.slf4j.Logger access$1() -> a
com.sunoray.tentacle.service.TrackerService$LocationTrack -> com.sunoray.tentacle.service.d:
    android.net.ConnectivityManager cm -> a
    com.sunoray.tentacle.service.TrackerService this$0 -> b
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
com.sunoray.tentacle.tasks.AddRecording -> com.sunoray.tentacle.f.a:
    org.slf4j.Logger log -> a
    android.content.Context context -> b
    java.lang.String doInBackground(com.sunoray.tentacle.db.Recording[]) -> a
    void onPostExecute(java.lang.String) -> a
    com.sunoray.tentacle.db.Recording addRecordToDB(com.sunoray.tentacle.db.Recording) -> a
    void removeCallBaseOnId(java.lang.String) -> b
    java.util.HashMap getLastOutCall(java.lang.String) -> c
    void removeOldRecords(java.lang.String) -> d
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.sunoray.tentacle.tasks.BroadcastCallDuration -> com.sunoray.tentacle.f.b:
    org.slf4j.Logger log -> c
    android.content.Context context -> d
    int callDuration -> a
    long dialTime -> b
    void run() -> run
com.sunoray.tentacle.tasks.EevaluatingApp -> com.sunoray.tentacle.f.c:
    org.slf4j.Logger log -> a
    android.content.Context context -> b
    android.widget.TextView txt -> c
    android.widget.TextView txtError -> d
    java.lang.Boolean doInBackground(java.lang.String[]) -> a
    void onPostExecute(java.lang.Boolean) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.sunoray.tentacle.tasks.GetPendingCall -> com.sunoray.tentacle.f.d:
    org.slf4j.Logger log -> a
    android.content.Context context -> b
    android.app.ProgressDialog loading -> c
    void onPreExecute() -> onPreExecute
    java.lang.String doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.String) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.sunoray.tentacle.tasks.GetPendingCall$1 -> com.sunoray.tentacle.f.e:
    com.sunoray.tentacle.tasks.GetPendingCall this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.sunoray.tentacle.tasks.SendCallData -> com.sunoray.tentacle.f.f:
    org.slf4j.Logger log -> a
    com.sunoray.tentacle.db.Recording recording -> b
    android.content.Context context -> c
    java.lang.Boolean doInBackground(com.sunoray.tentacle.db.Recording[]) -> a
    void onPostExecute(java.lang.Boolean) -> a
    boolean sendCallData() -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.sunoray.tentacle.tasks.SendCallRecording -> com.sunoray.tentacle.f.g:
    org.slf4j.Logger log -> a
    com.sunoray.tentacle.db.Recording recording -> b
    android.content.Context context -> c
    java.lang.Boolean doInBackground(com.sunoray.tentacle.db.Recording[]) -> a
    void onPostExecute(java.lang.Boolean) -> a
    boolean sendCallRecording() -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.sunoray.tentacle.tasks.SendCurrentLocation -> com.sunoray.tentacle.f.h:
    org.slf4j.Logger log -> b
    android.content.Context context -> a
    java.lang.Void doInBackground(java.lang.String[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.sunoray.tentacle.tasks.SendLogFile -> com.sunoray.tentacle.f.i:
    org.slf4j.Logger log -> a
    android.content.Context context -> b
    android.widget.TextView txt -> c
    java.lang.Boolean doInBackground(java.lang.String[]) -> a
    void onPostExecute(java.lang.Boolean) -> a
    void logRunningApps() -> a
    java.util.List getRunningApps() -> b
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.sunoray.tentacle.tasks.SendStatus -> com.sunoray.tentacle.f.j:
    org.slf4j.Logger log -> b
    android.content.Context context -> a
    java.lang.String doInBackground(java.lang.String[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.sunoray.tentacle.tasks.SendUserTrack -> com.sunoray.tentacle.f.k:
    org.slf4j.Logger log -> b
    android.content.Context context -> a
    java.lang.Void doInBackground(java.lang.Void[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
okhttp3.Address -> a.a:
    okhttp3.HttpUrl url -> a
    okhttp3.Dns dns -> b
    javax.net.SocketFactory socketFactory -> c
    okhttp3.Authenticator proxyAuthenticator -> d
    java.util.List protocols -> e
    java.util.List connectionSpecs -> f
    java.net.ProxySelector proxySelector -> g
    java.net.Proxy proxy -> h
    javax.net.ssl.SSLSocketFactory sslSocketFactory -> i
    javax.net.ssl.HostnameVerifier hostnameVerifier -> j
    okhttp3.CertificatePinner certificatePinner -> k
    okhttp3.HttpUrl url() -> a
    okhttp3.Dns dns() -> b
    javax.net.SocketFactory socketFactory() -> c
    okhttp3.Authenticator proxyAuthenticator() -> d
    java.util.List protocols() -> e
    java.util.List connectionSpecs() -> f
    java.net.ProxySelector proxySelector() -> g
    java.net.Proxy proxy() -> h
    javax.net.ssl.SSLSocketFactory sslSocketFactory() -> i
    javax.net.ssl.HostnameVerifier hostnameVerifier() -> j
    okhttp3.CertificatePinner certificatePinner() -> k
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean equalsNonHost(okhttp3.Address) -> a
    java.lang.String toString() -> toString
okhttp3.Authenticator -> a.b:
    okhttp3.Authenticator NONE -> a
    okhttp3.Request authenticate(okhttp3.Route,okhttp3.Response) -> a
okhttp3.Authenticator$1 -> a.c:
    okhttp3.Request authenticate(okhttp3.Route,okhttp3.Response) -> a
okhttp3.Cache -> a.d:
    okhttp3.internal.cache.InternalCache internalCache -> a
    okhttp3.internal.cache.DiskLruCache cache -> b
    void flush() -> flush
    void close() -> close
okhttp3.CacheControl -> a.e:
    okhttp3.CacheControl FORCE_NETWORK -> a
    okhttp3.CacheControl FORCE_CACHE -> b
    boolean noCache -> d
    boolean noStore -> e
    int maxAgeSeconds -> f
    int sMaxAgeSeconds -> g
    boolean isPrivate -> h
    boolean isPublic -> i
    boolean mustRevalidate -> j
    int maxStaleSeconds -> k
    int minFreshSeconds -> l
    boolean onlyIfCached -> m
    boolean noTransform -> n
    boolean immutable -> o
    java.lang.String headerValue -> c
    boolean noCache() -> a
    boolean noStore() -> b
    int maxAgeSeconds() -> c
    boolean isPrivate() -> d
    boolean isPublic() -> e
    boolean mustRevalidate() -> f
    int maxStaleSeconds() -> g
    int minFreshSeconds() -> h
    boolean onlyIfCached() -> i
    boolean immutable() -> j
    okhttp3.CacheControl parse(okhttp3.Headers) -> a
    java.lang.String toString() -> toString
    java.lang.String headerValue() -> k
okhttp3.CacheControl$Builder -> a.f:
    boolean noCache -> a
    boolean noStore -> b
    int maxAgeSeconds -> c
    int maxStaleSeconds -> d
    int minFreshSeconds -> e
    boolean onlyIfCached -> f
    boolean noTransform -> g
    boolean immutable -> h
    okhttp3.CacheControl$Builder noCache() -> a
    okhttp3.CacheControl$Builder maxStale(int,java.util.concurrent.TimeUnit) -> a
    okhttp3.CacheControl$Builder onlyIfCached() -> b
    okhttp3.CacheControl build() -> c
okhttp3.Call -> a.g:
    okhttp3.Response execute() -> a
okhttp3.Callback -> a.h:
    void onFailure(okhttp3.Call,java.io.IOException) -> a
    void onResponse(okhttp3.Call,okhttp3.Response) -> a
okhttp3.CertificatePinner -> a.i:
    okhttp3.CertificatePinner DEFAULT -> a
    java.util.Set pins -> b
    okhttp3.internal.tls.CertificateChainCleaner certificateChainCleaner -> c
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    void check(java.lang.String,java.util.List) -> a
    java.util.List findMatchingPins(java.lang.String) -> a
    okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner) -> a
    java.lang.String pin(java.security.cert.Certificate) -> a
    okio.ByteString sha1(java.security.cert.X509Certificate) -> a
    okio.ByteString sha256(java.security.cert.X509Certificate) -> b
okhttp3.CertificatePinner$Builder -> a.j:
    java.util.List pins -> a
    okhttp3.CertificatePinner build() -> a
okhttp3.CertificatePinner$Pin -> a.k:
    java.lang.String pattern -> a
    java.lang.String canonicalHostname -> b
    java.lang.String hashAlgorithm -> c
    okio.ByteString hash -> d
    boolean matches(java.lang.String) -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
okhttp3.CipherSuite -> a.l:
    java.util.Comparator ORDER_BY_NAME -> a
    java.util.Map INSTANCES -> bk
    okhttp3.CipherSuite TLS_RSA_WITH_NULL_MD5 -> b
    okhttp3.CipherSuite TLS_RSA_WITH_NULL_SHA -> c
    okhttp3.CipherSuite TLS_RSA_EXPORT_WITH_RC4_40_MD5 -> d
    okhttp3.CipherSuite TLS_RSA_WITH_RC4_128_MD5 -> e
    okhttp3.CipherSuite TLS_RSA_WITH_RC4_128_SHA -> f
    okhttp3.CipherSuite TLS_RSA_EXPORT_WITH_DES40_CBC_SHA -> g
    okhttp3.CipherSuite TLS_RSA_WITH_DES_CBC_SHA -> h
    okhttp3.CipherSuite TLS_RSA_WITH_3DES_EDE_CBC_SHA -> i
    okhttp3.CipherSuite TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA -> j
    okhttp3.CipherSuite TLS_DHE_DSS_WITH_DES_CBC_SHA -> k
    okhttp3.CipherSuite TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA -> l
    okhttp3.CipherSuite TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA -> m
    okhttp3.CipherSuite TLS_DHE_RSA_WITH_DES_CBC_SHA -> n
    okhttp3.CipherSuite TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA -> o
    okhttp3.CipherSuite TLS_DH_anon_EXPORT_WITH_RC4_40_MD5 -> p
    okhttp3.CipherSuite TLS_DH_anon_WITH_RC4_128_MD5 -> q
    okhttp3.CipherSuite TLS_DH_anon_EXPORT_WITH_DES40_CBC_SHA -> r
    okhttp3.CipherSuite TLS_DH_anon_WITH_DES_CBC_SHA -> s
    okhttp3.CipherSuite TLS_DH_anon_WITH_3DES_EDE_CBC_SHA -> t
    okhttp3.CipherSuite TLS_KRB5_WITH_DES_CBC_SHA -> u
    okhttp3.CipherSuite TLS_KRB5_WITH_3DES_EDE_CBC_SHA -> v
    okhttp3.CipherSuite TLS_KRB5_WITH_RC4_128_SHA -> w
    okhttp3.CipherSuite TLS_KRB5_WITH_DES_CBC_MD5 -> x
    okhttp3.CipherSuite TLS_KRB5_WITH_3DES_EDE_CBC_MD5 -> y
    okhttp3.CipherSuite TLS_KRB5_WITH_RC4_128_MD5 -> z
    okhttp3.CipherSuite TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA -> A
    okhttp3.CipherSuite TLS_KRB5_EXPORT_WITH_RC4_40_SHA -> B
    okhttp3.CipherSuite TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5 -> C
    okhttp3.CipherSuite TLS_KRB5_EXPORT_WITH_RC4_40_MD5 -> D
    okhttp3.CipherSuite TLS_RSA_WITH_AES_128_CBC_SHA -> E
    okhttp3.CipherSuite TLS_DHE_DSS_WITH_AES_128_CBC_SHA -> F
    okhttp3.CipherSuite TLS_DHE_RSA_WITH_AES_128_CBC_SHA -> G
    okhttp3.CipherSuite TLS_DH_anon_WITH_AES_128_CBC_SHA -> H
    okhttp3.CipherSuite TLS_RSA_WITH_AES_256_CBC_SHA -> I
    okhttp3.CipherSuite TLS_DHE_DSS_WITH_AES_256_CBC_SHA -> J
    okhttp3.CipherSuite TLS_DHE_RSA_WITH_AES_256_CBC_SHA -> K
    okhttp3.CipherSuite TLS_DH_anon_WITH_AES_256_CBC_SHA -> L
    okhttp3.CipherSuite TLS_RSA_WITH_NULL_SHA256 -> M
    okhttp3.CipherSuite TLS_RSA_WITH_AES_128_CBC_SHA256 -> N
    okhttp3.CipherSuite TLS_RSA_WITH_AES_256_CBC_SHA256 -> O
    okhttp3.CipherSuite TLS_DHE_DSS_WITH_AES_128_CBC_SHA256 -> P
    okhttp3.CipherSuite TLS_RSA_WITH_CAMELLIA_128_CBC_SHA -> Q
    okhttp3.CipherSuite TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA -> R
    okhttp3.CipherSuite TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA -> S
    okhttp3.CipherSuite TLS_DHE_RSA_WITH_AES_128_CBC_SHA256 -> T
    okhttp3.CipherSuite TLS_DHE_DSS_WITH_AES_256_CBC_SHA256 -> U
    okhttp3.CipherSuite TLS_DHE_RSA_WITH_AES_256_CBC_SHA256 -> V
    okhttp3.CipherSuite TLS_DH_anon_WITH_AES_128_CBC_SHA256 -> W
    okhttp3.CipherSuite TLS_DH_anon_WITH_AES_256_CBC_SHA256 -> X
    okhttp3.CipherSuite TLS_RSA_WITH_CAMELLIA_256_CBC_SHA -> Y
    okhttp3.CipherSuite TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA -> Z
    okhttp3.CipherSuite TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA -> aa
    okhttp3.CipherSuite TLS_PSK_WITH_RC4_128_SHA -> ab
    okhttp3.CipherSuite TLS_PSK_WITH_3DES_EDE_CBC_SHA -> ac
    okhttp3.CipherSuite TLS_PSK_WITH_AES_128_CBC_SHA -> ad
    okhttp3.CipherSuite TLS_PSK_WITH_AES_256_CBC_SHA -> ae
    okhttp3.CipherSuite TLS_RSA_WITH_SEED_CBC_SHA -> af
    okhttp3.CipherSuite TLS_RSA_WITH_AES_128_GCM_SHA256 -> ag
    okhttp3.CipherSuite TLS_RSA_WITH_AES_256_GCM_SHA384 -> ah
    okhttp3.CipherSuite TLS_DHE_RSA_WITH_AES_128_GCM_SHA256 -> ai
    okhttp3.CipherSuite TLS_DHE_RSA_WITH_AES_256_GCM_SHA384 -> aj
    okhttp3.CipherSuite TLS_DHE_DSS_WITH_AES_128_GCM_SHA256 -> ak
    okhttp3.CipherSuite TLS_DHE_DSS_WITH_AES_256_GCM_SHA384 -> al
    okhttp3.CipherSuite TLS_DH_anon_WITH_AES_128_GCM_SHA256 -> am
    okhttp3.CipherSuite TLS_DH_anon_WITH_AES_256_GCM_SHA384 -> an
    okhttp3.CipherSuite TLS_EMPTY_RENEGOTIATION_INFO_SCSV -> ao
    okhttp3.CipherSuite TLS_FALLBACK_SCSV -> ap
    okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_NULL_SHA -> aq
    okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_RC4_128_SHA -> ar
    okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA -> as
    okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA -> at
    okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA -> au
    okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_NULL_SHA -> av
    okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_RC4_128_SHA -> aw
    okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA -> ax
    okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA -> ay
    okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA -> az
    okhttp3.CipherSuite TLS_ECDH_RSA_WITH_NULL_SHA -> aA
    okhttp3.CipherSuite TLS_ECDH_RSA_WITH_RC4_128_SHA -> aB
    okhttp3.CipherSuite TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA -> aC
    okhttp3.CipherSuite TLS_ECDH_RSA_WITH_AES_128_CBC_SHA -> aD
    okhttp3.CipherSuite TLS_ECDH_RSA_WITH_AES_256_CBC_SHA -> aE
    okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_NULL_SHA -> aF
    okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_RC4_128_SHA -> aG
    okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA -> aH
    okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA -> aI
    okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA -> aJ
    okhttp3.CipherSuite TLS_ECDH_anon_WITH_NULL_SHA -> aK
    okhttp3.CipherSuite TLS_ECDH_anon_WITH_RC4_128_SHA -> aL
    okhttp3.CipherSuite TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA -> aM
    okhttp3.CipherSuite TLS_ECDH_anon_WITH_AES_128_CBC_SHA -> aN
    okhttp3.CipherSuite TLS_ECDH_anon_WITH_AES_256_CBC_SHA -> aO
    okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256 -> aP
    okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384 -> aQ
    okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256 -> aR
    okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384 -> aS
    okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256 -> aT
    okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384 -> aU
    okhttp3.CipherSuite TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256 -> aV
    okhttp3.CipherSuite TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384 -> aW
    okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 -> aX
    okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 -> aY
    okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256 -> aZ
    okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384 -> ba
    okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 -> bb
    okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 -> bc
    okhttp3.CipherSuite TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256 -> bd
    okhttp3.CipherSuite TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384 -> be
    okhttp3.CipherSuite TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA -> bf
    okhttp3.CipherSuite TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA -> bg
    okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256 -> bh
    okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256 -> bi
    java.lang.String javaName -> bj
    okhttp3.CipherSuite forJavaName(java.lang.String) -> a
    java.util.List forJavaNames(java.lang.String[]) -> a
    okhttp3.CipherSuite of(java.lang.String,int) -> a
    java.lang.String toString() -> toString
okhttp3.CipherSuite$1 -> a.m:
    int compare(java.lang.String,java.lang.String) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
okhttp3.Connection -> a.n:
    okhttp3.Route route() -> a
okhttp3.ConnectionPool -> a.o:
    java.util.concurrent.Executor executor -> d
    int maxIdleConnections -> e
    long keepAliveDurationNs -> f
    java.lang.Runnable cleanupRunnable -> g
    java.util.Deque connections -> h
    okhttp3.internal.connection.RouteDatabase routeDatabase -> a
    boolean cleanupRunning -> b
    boolean $assertionsDisabled -> c
    okhttp3.internal.connection.RealConnection get(okhttp3.Address,okhttp3.internal.connection.StreamAllocation,okhttp3.Route) -> a
    java.net.Socket deduplicate(okhttp3.Address,okhttp3.internal.connection.StreamAllocation) -> a
    void put(okhttp3.internal.connection.RealConnection) -> a
    boolean connectionBecameIdle(okhttp3.internal.connection.RealConnection) -> b
    long cleanup(long) -> a
    int pruneAndGetAllocationCount(okhttp3.internal.connection.RealConnection,long) -> a
okhttp3.ConnectionPool$1 -> a.p:
    okhttp3.ConnectionPool this$0 -> a
    void run() -> run
okhttp3.ConnectionSpec -> a.q:
    okhttp3.CipherSuite[] APPROVED_CIPHER_SUITES -> h
    okhttp3.ConnectionSpec MODERN_TLS -> a
    okhttp3.ConnectionSpec COMPATIBLE_TLS -> b
    okhttp3.ConnectionSpec CLEARTEXT -> c
    boolean tls -> d
    boolean supportsTlsExtensions -> e
    java.lang.String[] cipherSuites -> f
    java.lang.String[] tlsVersions -> g
    boolean isTls() -> a
    java.util.List cipherSuites() -> b
    java.util.List tlsVersions() -> c
    boolean supportsTlsExtensions() -> d
    void apply(javax.net.ssl.SSLSocket,boolean) -> a
    okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean) -> b
    boolean isCompatible(javax.net.ssl.SSLSocket) -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
okhttp3.ConnectionSpec$Builder -> a.r:
    boolean tls -> a
    java.lang.String[] cipherSuites -> b
    java.lang.String[] tlsVersions -> c
    boolean supportsTlsExtensions -> d
    okhttp3.ConnectionSpec$Builder cipherSuites(okhttp3.CipherSuite[]) -> a
    okhttp3.ConnectionSpec$Builder cipherSuites(java.lang.String[]) -> a
    okhttp3.ConnectionSpec$Builder tlsVersions(okhttp3.TlsVersion[]) -> a
    okhttp3.ConnectionSpec$Builder tlsVersions(java.lang.String[]) -> b
    okhttp3.ConnectionSpec$Builder supportsTlsExtensions(boolean) -> a
    okhttp3.ConnectionSpec build() -> a
okhttp3.Cookie -> a.s:
    java.util.regex.Pattern YEAR_PATTERN -> a
    java.util.regex.Pattern MONTH_PATTERN -> b
    java.util.regex.Pattern DAY_OF_MONTH_PATTERN -> c
    java.util.regex.Pattern TIME_PATTERN -> d
    java.lang.String name -> e
    java.lang.String value -> f
    long expiresAt -> g
    java.lang.String domain -> h
    java.lang.String path -> i
    boolean secure -> j
    boolean httpOnly -> k
    boolean persistent -> l
    boolean hostOnly -> m
    java.lang.String name() -> a
    java.lang.String value() -> b
    boolean domainMatch(java.lang.String,java.lang.String) -> a
    okhttp3.Cookie parse(okhttp3.HttpUrl,java.lang.String) -> a
    okhttp3.Cookie parse(long,okhttp3.HttpUrl,java.lang.String) -> a
    long parseExpires(java.lang.String,int,int) -> a
    int dateCharacterOffset(java.lang.String,int,int,boolean) -> a
    long parseMaxAge(java.lang.String) -> a
    java.lang.String parseDomain(java.lang.String) -> b
    java.util.List parseAll(okhttp3.HttpUrl,okhttp3.Headers) -> a
    java.lang.String toString() -> toString
    java.lang.String toString(boolean) -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
okhttp3.CookieJar -> a.t:
    okhttp3.CookieJar NO_COOKIES -> a
    void saveFromResponse(okhttp3.HttpUrl,java.util.List) -> a
    java.util.List loadForRequest(okhttp3.HttpUrl) -> a
okhttp3.CookieJar$1 -> a.u:
    void saveFromResponse(okhttp3.HttpUrl,java.util.List) -> a
    java.util.List loadForRequest(okhttp3.HttpUrl) -> a
okhttp3.Dispatcher -> a.v:
    int maxRequests -> a
    int maxRequestsPerHost -> b
    java.lang.Runnable idleCallback -> c
    java.util.concurrent.ExecutorService executorService -> d
    java.util.Deque readyAsyncCalls -> e
    java.util.Deque runningAsyncCalls -> f
    java.util.Deque runningSyncCalls -> g
    java.util.concurrent.ExecutorService executorService() -> a
    void promoteCalls() -> c
    int runningCallsForHost(okhttp3.RealCall$AsyncCall) -> b
    void executed(okhttp3.RealCall) -> a
    void finished(okhttp3.RealCall$AsyncCall) -> a
    void finished(okhttp3.RealCall) -> b
    void finished(java.util.Deque,java.lang.Object,boolean) -> a
    int runningCallsCount() -> b
okhttp3.Dns -> a.w:
    okhttp3.Dns SYSTEM -> a
    java.util.List lookup(java.lang.String) -> a
okhttp3.Dns$1 -> a.x:
    java.util.List lookup(java.lang.String) -> a
okhttp3.EventListener -> a.y:
    okhttp3.EventListener NONE -> a
    okhttp3.EventListener$Factory factory(okhttp3.EventListener) -> a
    void callStart(okhttp3.Call) -> a
    void dnsStart(okhttp3.Call,java.lang.String) -> a
    void dnsEnd(okhttp3.Call,java.lang.String,java.util.List) -> a
    void connectStart(okhttp3.Call,java.net.InetSocketAddress,java.net.Proxy) -> a
    void secureConnectStart(okhttp3.Call) -> b
    void secureConnectEnd(okhttp3.Call,okhttp3.Handshake) -> a
    void connectEnd(okhttp3.Call,java.net.InetSocketAddress,java.net.Proxy,okhttp3.Protocol) -> a
    void connectFailed(okhttp3.Call,java.net.InetSocketAddress,java.net.Proxy,okhttp3.Protocol,java.io.IOException) -> a
    void connectionAcquired(okhttp3.Call,okhttp3.Connection) -> a
    void connectionReleased(okhttp3.Call,okhttp3.Connection) -> b
    void requestHeadersStart(okhttp3.Call) -> c
    void requestHeadersEnd(okhttp3.Call,okhttp3.Request) -> a
    void requestBodyStart(okhttp3.Call) -> d
    void requestBodyEnd(okhttp3.Call,long) -> a
    void responseHeadersStart(okhttp3.Call) -> e
    void responseHeadersEnd(okhttp3.Call,okhttp3.Response) -> a
    void responseBodyStart(okhttp3.Call) -> f
    void responseBodyEnd(okhttp3.Call,long) -> b
    void callEnd(okhttp3.Call) -> g
    void callFailed(okhttp3.Call,java.io.IOException) -> a
okhttp3.EventListener$1 -> a.z:
okhttp3.EventListener$2 -> a.aa:
    okhttp3.EventListener val$listener -> a
    okhttp3.EventListener create(okhttp3.Call) -> a
okhttp3.EventListener$Factory -> a.ab:
    okhttp3.EventListener create(okhttp3.Call) -> a
okhttp3.FormBody -> a.ac:
    okhttp3.MediaType CONTENT_TYPE -> a
    java.util.List encodedNames -> b
    java.util.List encodedValues -> c
    okhttp3.MediaType contentType() -> a
    long contentLength() -> b
    void writeTo(okio.BufferedSink) -> a
    long writeOrCountBytes(okio.BufferedSink,boolean) -> a
okhttp3.FormBody$Builder -> a.ad:
    java.util.List names -> a
    java.util.List values -> b
    java.nio.charset.Charset charset -> c
    okhttp3.FormBody$Builder add(java.lang.String,java.lang.String) -> a
    okhttp3.FormBody build() -> a
okhttp3.Handshake -> a.ae:
    okhttp3.TlsVersion tlsVersion -> a
    okhttp3.CipherSuite cipherSuite -> b
    java.util.List peerCertificates -> c
    java.util.List localCertificates -> d
    okhttp3.Handshake get(javax.net.ssl.SSLSession) -> a
    okhttp3.CipherSuite cipherSuite() -> a
    java.util.List peerCertificates() -> b
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
okhttp3.Headers -> a.af:
    java.lang.String[] namesAndValues -> a
    java.lang.String get(java.lang.String) -> a
    int size() -> a
    java.lang.String name(int) -> a
    java.lang.String value(int) -> b
    java.util.List values(java.lang.String) -> b
    okhttp3.Headers$Builder newBuilder() -> b
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.String get(java.lang.String[],java.lang.String) -> a
okhttp3.Headers$Builder -> a.ag:
    java.util.List namesAndValues -> a
    okhttp3.Headers$Builder addLenient(java.lang.String) -> a
    okhttp3.Headers$Builder add(java.lang.String,java.lang.String) -> a
    okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String) -> b
    okhttp3.Headers$Builder removeAll(java.lang.String) -> b
    okhttp3.Headers$Builder set(java.lang.String,java.lang.String) -> c
    void checkNameAndValue(java.lang.String,java.lang.String) -> d
    okhttp3.Headers build() -> a
okhttp3.HttpUrl -> a.ah:
    char[] HEX_DIGITS -> d
    java.lang.String scheme -> a
    java.lang.String username -> e
    java.lang.String password -> f
    java.lang.String host -> b
    int port -> c
    java.util.List pathSegments -> g
    java.util.List queryNamesAndValues -> h
    java.lang.String fragment -> i
    java.lang.String url -> j
    java.net.URI uri() -> a
    java.lang.String scheme() -> b
    boolean isHttps() -> c
    java.lang.String encodedUsername() -> d
    java.lang.String encodedPassword() -> e
    java.lang.String host() -> f
    int port() -> g
    int defaultPort(java.lang.String) -> a
    java.lang.String encodedPath() -> h
    void pathSegmentsToString(java.lang.StringBuilder,java.util.List) -> a
    java.util.List encodedPathSegments() -> i
    java.lang.String encodedQuery() -> j
    void namesAndValuesToQueryString(java.lang.StringBuilder,java.util.List) -> b
    java.util.List queryStringToNamesAndValues(java.lang.String) -> b
    java.lang.String query() -> k
    java.lang.String encodedFragment() -> l
    java.lang.String redact() -> m
    okhttp3.HttpUrl resolve(java.lang.String) -> c
    okhttp3.HttpUrl$Builder newBuilder() -> n
    okhttp3.HttpUrl$Builder newBuilder(java.lang.String) -> d
    okhttp3.HttpUrl parse(java.lang.String) -> e
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.String percentDecode(java.lang.String,boolean) -> a
    java.util.List percentDecode(java.util.List,boolean) -> a
    java.lang.String percentDecode(java.lang.String,int,int,boolean) -> a
    void percentDecode(okio.Buffer,java.lang.String,int,int,boolean) -> a
    boolean percentEncoded(java.lang.String,int,int) -> a
    java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean,java.nio.charset.Charset) -> a
    void canonicalize(okio.Buffer,java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean,java.nio.charset.Charset) -> a
    java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean,java.nio.charset.Charset) -> a
    java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean) -> a
okhttp3.HttpUrl$Builder -> a.ai:
    java.lang.String scheme -> a
    java.lang.String encodedUsername -> b
    java.lang.String encodedPassword -> c
    java.lang.String host -> d
    int port -> e
    java.util.List encodedPathSegments -> f
    java.util.List encodedQueryNamesAndValues -> g
    java.lang.String encodedFragment -> h
    okhttp3.HttpUrl$Builder scheme(java.lang.String) -> a
    okhttp3.HttpUrl$Builder username(java.lang.String) -> b
    okhttp3.HttpUrl$Builder password(java.lang.String) -> c
    okhttp3.HttpUrl$Builder host(java.lang.String) -> d
    okhttp3.HttpUrl$Builder port(int) -> a
    int effectivePort() -> a
    okhttp3.HttpUrl$Builder encodedQuery(java.lang.String) -> e
    okhttp3.HttpUrl$Builder reencodeForUri() -> b
    okhttp3.HttpUrl build() -> c
    java.lang.String toString() -> toString
    okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String) -> a
    void resolvePath(java.lang.String,int,int) -> a
    void push(java.lang.String,int,int,boolean,boolean) -> a
    boolean isDot(java.lang.String) -> f
    boolean isDotDot(java.lang.String) -> g
    void pop() -> d
    int schemeDelimiterOffset(java.lang.String,int,int) -> b
    int slashCount(java.lang.String,int,int) -> c
    int portColonOffset(java.lang.String,int,int) -> d
    java.lang.String canonicalizeHost(java.lang.String,int,int) -> e
    int parsePort(java.lang.String,int,int) -> f
okhttp3.HttpUrl$Builder$ParseResult -> a.aj:
    okhttp3.HttpUrl$Builder$ParseResult SUCCESS -> a
    okhttp3.HttpUrl$Builder$ParseResult MISSING_SCHEME -> b
    okhttp3.HttpUrl$Builder$ParseResult UNSUPPORTED_SCHEME -> c
    okhttp3.HttpUrl$Builder$ParseResult INVALID_PORT -> d
    okhttp3.HttpUrl$Builder$ParseResult INVALID_HOST -> e
    okhttp3.HttpUrl$Builder$ParseResult[] $VALUES -> f
    okhttp3.HttpUrl$Builder$ParseResult[] values() -> values
    okhttp3.HttpUrl$Builder$ParseResult valueOf(java.lang.String) -> valueOf
okhttp3.Interceptor -> a.ak:
    okhttp3.Response intercept(okhttp3.Interceptor$Chain) -> a
okhttp3.Interceptor$Chain -> a.al:
    okhttp3.Request request() -> a
    okhttp3.Response proceed(okhttp3.Request) -> a
    int connectTimeoutMillis() -> b
    int readTimeoutMillis() -> c
    int writeTimeoutMillis() -> d
okhttp3.MediaType -> a.am:
    java.util.regex.Pattern TYPE_SUBTYPE -> a
    java.util.regex.Pattern PARAMETER -> b
    java.lang.String mediaType -> c
    java.lang.String type -> d
    java.lang.String subtype -> e
    java.lang.String charset -> f
    okhttp3.MediaType parse(java.lang.String) -> a
    java.nio.charset.Charset charset(java.nio.charset.Charset) -> a
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
okhttp3.OkHttpClient -> a.an:
    java.util.List DEFAULT_PROTOCOLS -> a
    java.util.List DEFAULT_CONNECTION_SPECS -> b
    okhttp3.Dispatcher dispatcher -> c
    java.net.Proxy proxy -> d
    java.util.List protocols -> e
    java.util.List connectionSpecs -> f
    java.util.List interceptors -> g
    java.util.List networkInterceptors -> h
    okhttp3.EventListener$Factory eventListenerFactory -> i
    java.net.ProxySelector proxySelector -> j
    okhttp3.CookieJar cookieJar -> k
    okhttp3.Cache cache -> l
    okhttp3.internal.cache.InternalCache internalCache -> m
    javax.net.SocketFactory socketFactory -> n
    javax.net.ssl.SSLSocketFactory sslSocketFactory -> o
    okhttp3.internal.tls.CertificateChainCleaner certificateChainCleaner -> p
    javax.net.ssl.HostnameVerifier hostnameVerifier -> q
    okhttp3.CertificatePinner certificatePinner -> r
    okhttp3.Authenticator proxyAuthenticator -> s
    okhttp3.Authenticator authenticator -> t
    okhttp3.ConnectionPool connectionPool -> u
    okhttp3.Dns dns -> v
    boolean followSslRedirects -> w
    boolean followRedirects -> x
    boolean retryOnConnectionFailure -> y
    int connectTimeout -> z
    int readTimeout -> A
    int writeTimeout -> B
    int pingInterval -> C
    javax.net.ssl.X509TrustManager systemDefaultTrustManager() -> y
    javax.net.ssl.SSLSocketFactory systemDefaultSslSocketFactory(javax.net.ssl.X509TrustManager) -> a
    int connectTimeoutMillis() -> a
    int readTimeoutMillis() -> b
    int writeTimeoutMillis() -> c
    java.net.Proxy proxy() -> d
    java.net.ProxySelector proxySelector() -> e
    okhttp3.CookieJar cookieJar() -> f
    okhttp3.internal.cache.InternalCache internalCache() -> g
    okhttp3.Dns dns() -> h
    javax.net.SocketFactory socketFactory() -> i
    javax.net.ssl.SSLSocketFactory sslSocketFactory() -> j
    javax.net.ssl.HostnameVerifier hostnameVerifier() -> k
    okhttp3.CertificatePinner certificatePinner() -> l
    okhttp3.Authenticator authenticator() -> m
    okhttp3.Authenticator proxyAuthenticator() -> n
    okhttp3.ConnectionPool connectionPool() -> o
    boolean followSslRedirects() -> p
    boolean followRedirects() -> q
    boolean retryOnConnectionFailure() -> r
    okhttp3.Dispatcher dispatcher() -> s
    java.util.List protocols() -> t
    java.util.List connectionSpecs() -> u
    java.util.List interceptors() -> v
    java.util.List networkInterceptors() -> w
    okhttp3.EventListener$Factory eventListenerFactory() -> x
    okhttp3.Call newCall(okhttp3.Request) -> a
okhttp3.OkHttpClient$1 -> a.ao:
    void addLenient(okhttp3.Headers$Builder,java.lang.String) -> a
    void addLenient(okhttp3.Headers$Builder,java.lang.String,java.lang.String) -> a
    boolean connectionBecameIdle(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection) -> a
    okhttp3.internal.connection.RealConnection get(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.connection.StreamAllocation,okhttp3.Route) -> a
    boolean equalsNonHost(okhttp3.Address,okhttp3.Address) -> a
    java.net.Socket deduplicate(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.connection.StreamAllocation) -> a
    void put(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection) -> b
    okhttp3.internal.connection.RouteDatabase routeDatabase(okhttp3.ConnectionPool) -> a
    int code(okhttp3.Response$Builder) -> a
    void apply(okhttp3.ConnectionSpec,javax.net.ssl.SSLSocket,boolean) -> a
okhttp3.OkHttpClient$Builder -> a.ap:
    okhttp3.Dispatcher dispatcher -> a
    java.net.Proxy proxy -> b
    java.util.List protocols -> c
    java.util.List connectionSpecs -> d
    java.util.List interceptors -> e
    java.util.List networkInterceptors -> f
    okhttp3.EventListener$Factory eventListenerFactory -> g
    java.net.ProxySelector proxySelector -> h
    okhttp3.CookieJar cookieJar -> i
    okhttp3.Cache cache -> j
    okhttp3.internal.cache.InternalCache internalCache -> k
    javax.net.SocketFactory socketFactory -> l
    javax.net.ssl.SSLSocketFactory sslSocketFactory -> m
    okhttp3.internal.tls.CertificateChainCleaner certificateChainCleaner -> n
    javax.net.ssl.HostnameVerifier hostnameVerifier -> o
    okhttp3.CertificatePinner certificatePinner -> p
    okhttp3.Authenticator proxyAuthenticator -> q
    okhttp3.Authenticator authenticator -> r
    okhttp3.ConnectionPool connectionPool -> s
    okhttp3.Dns dns -> t
    boolean followSslRedirects -> u
    boolean followRedirects -> v
    boolean retryOnConnectionFailure -> w
    int connectTimeout -> x
    int readTimeout -> y
    int writeTimeout -> z
    int pingInterval -> A
okhttp3.Protocol -> a.aq:
    okhttp3.Protocol HTTP_1_0 -> a
    okhttp3.Protocol HTTP_1_1 -> b
    okhttp3.Protocol SPDY_3 -> c
    okhttp3.Protocol HTTP_2 -> d
    java.lang.String protocol -> e
    okhttp3.Protocol[] $VALUES -> f
    okhttp3.Protocol[] values() -> values
    okhttp3.Protocol valueOf(java.lang.String) -> valueOf
    okhttp3.Protocol get(java.lang.String) -> a
    java.lang.String toString() -> toString
okhttp3.RealCall -> a.ar:
    okhttp3.OkHttpClient client -> a
    okhttp3.internal.http.RetryAndFollowUpInterceptor retryAndFollowUpInterceptor -> b
    okhttp3.EventListener eventListener -> e
    okhttp3.Request originalRequest -> c
    boolean forWebSocket -> d
    boolean executed -> f
    okhttp3.RealCall newRealCall(okhttp3.OkHttpClient,okhttp3.Request,boolean) -> a
    okhttp3.Response execute() -> a
    void captureCallStackTrace() -> g
    boolean isCanceled() -> b
    okhttp3.RealCall clone() -> c
    java.lang.String toLoggableString() -> d
    java.lang.String redactedUrl() -> e
    okhttp3.Response getResponseWithInterceptorChain() -> f
    java.lang.Object clone() -> clone
    okhttp3.EventListener access$000(okhttp3.RealCall) -> a
okhttp3.RealCall$AsyncCall -> a.as:
    okhttp3.Callback responseCallback -> c
    okhttp3.RealCall this$0 -> a
    java.lang.String host() -> a
    void execute() -> b
okhttp3.Request -> a.at:
    okhttp3.HttpUrl url -> a
    java.lang.String method -> b
    okhttp3.Headers headers -> c
    okhttp3.RequestBody body -> d
    java.lang.Object tag -> e
    okhttp3.CacheControl cacheControl -> f
    okhttp3.HttpUrl url() -> a
    java.lang.String method() -> b
    okhttp3.Headers headers() -> c
    java.lang.String header(java.lang.String) -> a
    okhttp3.RequestBody body() -> d
    okhttp3.Request$Builder newBuilder() -> e
    okhttp3.CacheControl cacheControl() -> f
    boolean isHttps() -> g
    java.lang.String toString() -> toString
okhttp3.Request$Builder -> a.au:
    okhttp3.HttpUrl url -> a
    java.lang.String method -> b
    okhttp3.Headers$Builder headers -> c
    okhttp3.RequestBody body -> d
    java.lang.Object tag -> e
    okhttp3.Request$Builder url(okhttp3.HttpUrl) -> a
    okhttp3.Request$Builder url(java.lang.String) -> a
    okhttp3.Request$Builder header(java.lang.String,java.lang.String) -> a
    okhttp3.Request$Builder removeHeader(java.lang.String) -> b
    okhttp3.Request$Builder headers(okhttp3.Headers) -> a
    okhttp3.Request$Builder post(okhttp3.RequestBody) -> a
    okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody) -> a
    okhttp3.Request build() -> a
okhttp3.RequestBody -> a.av:
    okhttp3.MediaType contentType() -> a
    long contentLength() -> b
    void writeTo(okio.BufferedSink) -> a
    okhttp3.RequestBody create(okhttp3.MediaType,byte[]) -> a
    okhttp3.RequestBody create(okhttp3.MediaType,byte[],int,int) -> a
okhttp3.RequestBody$2 -> a.aw:
    okhttp3.MediaType val$contentType -> a
    int val$byteCount -> b
    byte[] val$content -> c
    int val$offset -> d
    okhttp3.MediaType contentType() -> a
    long contentLength() -> b
    void writeTo(okio.BufferedSink) -> a
okhttp3.Response -> a.ax:
    okhttp3.Request request -> a
    okhttp3.Protocol protocol -> b
    int code -> c
    java.lang.String message -> d
    okhttp3.Handshake handshake -> e
    okhttp3.Headers headers -> f
    okhttp3.ResponseBody body -> g
    okhttp3.Response networkResponse -> h
    okhttp3.Response cacheResponse -> i
    okhttp3.Response priorResponse -> j
    long sentRequestAtMillis -> k
    long receivedResponseAtMillis -> l
    okhttp3.CacheControl cacheControl -> m
    okhttp3.Request request() -> a
    int code() -> b
    boolean isSuccessful() -> c
    okhttp3.Handshake handshake() -> d
    java.lang.String header(java.lang.String) -> a
    java.lang.String header(java.lang.String,java.lang.String) -> a
    okhttp3.Headers headers() -> e
    okhttp3.ResponseBody body() -> f
    okhttp3.Response$Builder newBuilder() -> g
    okhttp3.Response priorResponse() -> h
    okhttp3.CacheControl cacheControl() -> i
    long sentRequestAtMillis() -> j
    long receivedResponseAtMillis() -> k
    void close() -> close
    java.lang.String toString() -> toString
okhttp3.Response$Builder -> a.ay:
    okhttp3.Request request -> a
    okhttp3.Protocol protocol -> b
    int code -> c
    java.lang.String message -> d
    okhttp3.Handshake handshake -> e
    okhttp3.Headers$Builder headers -> f
    okhttp3.ResponseBody body -> g
    okhttp3.Response networkResponse -> h
    okhttp3.Response cacheResponse -> i
    okhttp3.Response priorResponse -> j
    long sentRequestAtMillis -> k
    long receivedResponseAtMillis -> l
    okhttp3.Response$Builder request(okhttp3.Request) -> a
    okhttp3.Response$Builder protocol(okhttp3.Protocol) -> a
    okhttp3.Response$Builder code(int) -> a
    okhttp3.Response$Builder message(java.lang.String) -> a
    okhttp3.Response$Builder handshake(okhttp3.Handshake) -> a
    okhttp3.Response$Builder addHeader(java.lang.String,java.lang.String) -> a
    okhttp3.Response$Builder headers(okhttp3.Headers) -> a
    okhttp3.Response$Builder body(okhttp3.ResponseBody) -> a
    okhttp3.Response$Builder networkResponse(okhttp3.Response) -> a
    okhttp3.Response$Builder cacheResponse(okhttp3.Response) -> b
    void checkSupportResponse(java.lang.String,okhttp3.Response) -> a
    okhttp3.Response$Builder priorResponse(okhttp3.Response) -> c
    void checkPriorResponse(okhttp3.Response) -> d
    okhttp3.Response$Builder sentRequestAtMillis(long) -> a
    okhttp3.Response$Builder receivedResponseAtMillis(long) -> b
    okhttp3.Response build() -> a
okhttp3.ResponseBody -> a.az:
    okhttp3.MediaType contentType() -> a
    long contentLength() -> b
    okio.BufferedSource source() -> c
    java.lang.String string() -> d
    java.nio.charset.Charset charset() -> e
    void close() -> close
    okhttp3.ResponseBody create(okhttp3.MediaType,byte[]) -> a
    okhttp3.ResponseBody create(okhttp3.MediaType,long,okio.BufferedSource) -> a
okhttp3.ResponseBody$1 -> a.ba:
    okhttp3.MediaType val$contentType -> a
    long val$contentLength -> b
    okio.BufferedSource val$content -> c
    okhttp3.MediaType contentType() -> a
    long contentLength() -> b
    okio.BufferedSource source() -> c
okhttp3.Route -> a.bb:
    okhttp3.Address address -> a
    java.net.Proxy proxy -> b
    java.net.InetSocketAddress inetSocketAddress -> c
    okhttp3.Address address() -> a
    java.net.Proxy proxy() -> b
    java.net.InetSocketAddress socketAddress() -> c
    boolean requiresTunnel() -> d
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
okhttp3.TlsVersion -> a.bc:
    okhttp3.TlsVersion TLS_1_3 -> a
    okhttp3.TlsVersion TLS_1_2 -> b
    okhttp3.TlsVersion TLS_1_1 -> c
    okhttp3.TlsVersion TLS_1_0 -> d
    okhttp3.TlsVersion SSL_3_0 -> e
    java.lang.String javaName -> f
    okhttp3.TlsVersion[] $VALUES -> g
    okhttp3.TlsVersion[] values() -> values
    okhttp3.TlsVersion valueOf(java.lang.String) -> valueOf
    okhttp3.TlsVersion forJavaName(java.lang.String) -> a
    java.util.List forJavaNames(java.lang.String[]) -> a
okhttp3.internal.Internal -> a.a.a:
    okhttp3.internal.Internal instance -> a
    void addLenient(okhttp3.Headers$Builder,java.lang.String) -> a
    void addLenient(okhttp3.Headers$Builder,java.lang.String,java.lang.String) -> a
    okhttp3.internal.connection.RealConnection get(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.connection.StreamAllocation,okhttp3.Route) -> a
    boolean equalsNonHost(okhttp3.Address,okhttp3.Address) -> a
    java.net.Socket deduplicate(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.connection.StreamAllocation) -> a
    void put(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection) -> b
    boolean connectionBecameIdle(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection) -> a
    okhttp3.internal.connection.RouteDatabase routeDatabase(okhttp3.ConnectionPool) -> a
    int code(okhttp3.Response$Builder) -> a
    void apply(okhttp3.ConnectionSpec,javax.net.ssl.SSLSocket,boolean) -> a
okhttp3.internal.NamedRunnable -> a.a.b:
    java.lang.String name -> b
    void run() -> run
    void execute() -> b
okhttp3.internal.Util -> a.a.c:
    byte[] EMPTY_BYTE_ARRAY -> a
    java.lang.String[] EMPTY_STRING_ARRAY -> b
    okhttp3.ResponseBody EMPTY_RESPONSE -> c
    okhttp3.RequestBody EMPTY_REQUEST -> d
    okio.ByteString UTF_8_BOM -> i
    okio.ByteString UTF_16_BE_BOM -> j
    okio.ByteString UTF_16_LE_BOM -> k
    okio.ByteString UTF_32_BE_BOM -> l
    okio.ByteString UTF_32_LE_BOM -> m
    java.nio.charset.Charset UTF_8 -> e
    java.nio.charset.Charset ISO_8859_1 -> f
    java.nio.charset.Charset UTF_16_BE -> n
    java.nio.charset.Charset UTF_16_LE -> o
    java.nio.charset.Charset UTF_32_BE -> p
    java.nio.charset.Charset UTF_32_LE -> q
    java.util.TimeZone UTC -> g
    java.util.Comparator NATURAL_ORDER -> h
    java.util.regex.Pattern VERIFY_AS_IP_ADDRESS -> r
    void checkOffsetAndCount(long,long,long) -> a
    boolean equal(java.lang.Object,java.lang.Object) -> a
    void closeQuietly(java.io.Closeable) -> a
    void closeQuietly(java.net.Socket) -> a
    boolean discard(okio.Source,int,java.util.concurrent.TimeUnit) -> a
    boolean skipAll(okio.Source,int,java.util.concurrent.TimeUnit) -> b
    java.util.List immutableList(java.util.List) -> a
    java.util.List immutableList(java.lang.Object[]) -> a
    java.util.concurrent.ThreadFactory threadFactory(java.lang.String,boolean) -> a
    java.lang.String[] intersect(java.util.Comparator,java.lang.String[],java.lang.String[]) -> a
    boolean nonEmptyIntersection(java.util.Comparator,java.lang.String[],java.lang.String[]) -> b
    java.lang.String hostHeader(okhttp3.HttpUrl,boolean) -> a
    boolean isAndroidGetsocknameError(java.lang.AssertionError) -> a
    int indexOf(java.util.Comparator,java.lang.String[],java.lang.String) -> a
    java.lang.String[] concat(java.lang.String[],java.lang.String) -> a
    int skipLeadingAsciiWhitespace(java.lang.String,int,int) -> a
    int skipTrailingAsciiWhitespace(java.lang.String,int,int) -> b
    java.lang.String trimSubstring(java.lang.String,int,int) -> c
    int delimiterOffset(java.lang.String,int,int,java.lang.String) -> a
    int delimiterOffset(java.lang.String,int,int,char) -> a
    java.lang.String canonicalizeHost(java.lang.String) -> a
    boolean containsInvalidHostnameAsciiCodes(java.lang.String) -> d
    int indexOfControlOrNonAscii(java.lang.String) -> b
    boolean verifyAsIpAddress(java.lang.String) -> c
    java.lang.String format(java.lang.String,java.lang.Object[]) -> a
    java.nio.charset.Charset bomAwareCharset(okio.BufferedSource,java.nio.charset.Charset) -> a
    java.lang.AssertionError assertionError(java.lang.String,java.lang.Exception) -> a
    int decodeHexDigit(char) -> a
    java.net.InetAddress decodeIpv6(java.lang.String,int,int) -> d
    boolean decodeIpv4Suffix(java.lang.String,int,int,byte[],int) -> a
    java.lang.String inet6AddressToAscii(byte[]) -> a
okhttp3.internal.Util$1 -> a.a.d:
    int compare(java.lang.String,java.lang.String) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
okhttp3.internal.Util$2 -> a.a.e:
    java.lang.String val$name -> a
    boolean val$daemon -> b
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
okhttp3.internal.Version -> a.a.f:
    java.lang.String userAgent() -> a
okhttp3.internal.cache.CacheInterceptor -> a.a.a.a:
    okhttp3.internal.cache.InternalCache cache -> a
    okhttp3.Response intercept(okhttp3.Interceptor$Chain) -> a
    okhttp3.Response stripBody(okhttp3.Response) -> a
    okhttp3.Response cacheWritingResponse(okhttp3.internal.cache.CacheRequest,okhttp3.Response) -> a
    okhttp3.Headers combine(okhttp3.Headers,okhttp3.Headers) -> a
    boolean isEndToEnd(java.lang.String) -> a
okhttp3.internal.cache.CacheInterceptor$1 -> a.a.a.b:
    boolean cacheRequestClosed -> a
    okio.BufferedSource val$source -> b
    okhttp3.internal.cache.CacheRequest val$cacheRequest -> c
    okio.BufferedSink val$cacheBody -> d
    okhttp3.internal.cache.CacheInterceptor this$0 -> e
    long read(okio.Buffer,long) -> a
    okio.Timeout timeout() -> a
    void close() -> close
okhttp3.internal.cache.CacheRequest -> a.a.a.c:
    okio.Sink body() -> a
    void abort() -> b
okhttp3.internal.cache.CacheStrategy -> a.a.a.d:
    okhttp3.Request networkRequest -> a
    okhttp3.Response cacheResponse -> b
    boolean isCacheable(okhttp3.Response,okhttp3.Request) -> a
okhttp3.internal.cache.CacheStrategy$Factory -> a.a.a.e:
    long nowMillis -> a
    okhttp3.Request request -> b
    okhttp3.Response cacheResponse -> c
    java.util.Date servedDate -> d
    java.lang.String servedDateString -> e
    java.util.Date lastModified -> f
    java.lang.String lastModifiedString -> g
    java.util.Date expires -> h
    long sentRequestMillis -> i
    long receivedResponseMillis -> j
    java.lang.String etag -> k
    int ageSeconds -> l
    okhttp3.internal.cache.CacheStrategy get() -> a
    okhttp3.internal.cache.CacheStrategy getCandidate() -> b
    long computeFreshnessLifetime() -> c
    long cacheResponseAge() -> d
    boolean isFreshnessLifetimeHeuristic() -> e
    boolean hasConditions(okhttp3.Request) -> a
okhttp3.internal.cache.DiskLruCache -> a.a.a.f:
    java.util.regex.Pattern LEGAL_KEY_PATTERN -> a
    okhttp3.internal.io.FileSystem fileSystem -> b
    long maxSize -> k
    int valueCount -> c
    long size -> l
    okio.BufferedSink journalWriter -> d
    java.util.LinkedHashMap lruEntries -> e
    int redundantOpCount -> f
    boolean initialized -> g
    boolean closed -> h
    boolean mostRecentTrimFailed -> i
    long nextSequenceNumber -> m
    java.util.concurrent.Executor executor -> n
    java.lang.Runnable cleanupRunnable -> o
    boolean $assertionsDisabled -> j
    void completeEdit(okhttp3.internal.cache.DiskLruCache$Editor,boolean) -> a
    boolean journalRebuildRequired() -> a
    boolean removeEntry(okhttp3.internal.cache.DiskLruCache$Entry) -> a
    boolean isClosed() -> b
    void checkNotClosed() -> d
    void flush() -> flush
    void close() -> close
    void trimToSize() -> c
okhttp3.internal.cache.DiskLruCache$Editor -> a.a.a.g:
    okhttp3.internal.cache.DiskLruCache$Entry entry -> a
    boolean[] written -> b
    boolean done -> d
    okhttp3.internal.cache.DiskLruCache this$0 -> c
    void detach() -> a
    void abort() -> b
okhttp3.internal.cache.DiskLruCache$Entry -> a.a.a.h:
    java.lang.String key -> a
    long[] lengths -> b
    java.io.File[] cleanFiles -> c
    java.io.File[] dirtyFiles -> d
    boolean readable -> e
    okhttp3.internal.cache.DiskLruCache$Editor currentEditor -> f
    long sequenceNumber -> g
    void writeLengths(okio.BufferedSink) -> a
okhttp3.internal.cache.InternalCache -> a.a.a.i:
    okhttp3.Response get(okhttp3.Request) -> a
    okhttp3.internal.cache.CacheRequest put(okhttp3.Response) -> a
    void remove(okhttp3.Request) -> b
    void update(okhttp3.Response,okhttp3.Response) -> a
    void trackConditionalCacheHit() -> a
    void trackResponse(okhttp3.internal.cache.CacheStrategy) -> a
okhttp3.internal.connection.ConnectInterceptor -> a.a.b.a:
    okhttp3.OkHttpClient client -> a
    okhttp3.Response intercept(okhttp3.Interceptor$Chain) -> a
okhttp3.internal.connection.ConnectionSpecSelector -> a.a.b.b:
    java.util.List connectionSpecs -> a
    int nextModeIndex -> b
    boolean isFallbackPossible -> c
    boolean isFallback -> d
    okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket) -> a
    boolean connectionFailed(java.io.IOException) -> a
    boolean isFallbackPossible(javax.net.ssl.SSLSocket) -> b
okhttp3.internal.connection.RealConnection -> a.a.b.c:
    okhttp3.ConnectionPool connectionPool -> g
    okhttp3.Route route -> h
    java.net.Socket rawSocket -> i
    java.net.Socket socket -> j
    okhttp3.Handshake handshake -> k
    okhttp3.Protocol protocol -> l
    okhttp3.internal.http2.Http2Connection http2Connection -> m
    okio.BufferedSource source -> n
    okio.BufferedSink sink -> o
    boolean noNewStreams -> a
    int successCount -> b
    int allocationLimit -> c
    java.util.List allocations -> d
    long idleAtNanos -> e
    void connect(int,int,int,boolean,okhttp3.Call,okhttp3.EventListener) -> a
    void connectTunnel(int,int,int,okhttp3.Call,okhttp3.EventListener) -> a
    void connectSocket(int,int,okhttp3.Call,okhttp3.EventListener) -> a
    void establishProtocol(okhttp3.internal.connection.ConnectionSpecSelector,okhttp3.Call,okhttp3.EventListener) -> a
    void connectTls(okhttp3.internal.connection.ConnectionSpecSelector) -> a
    okhttp3.Request createTunnel(int,int,okhttp3.Request,okhttp3.HttpUrl) -> a
    okhttp3.Request createTunnelRequest() -> e
    boolean isEligible(okhttp3.Address,okhttp3.Route) -> a
    boolean supportsUrl(okhttp3.HttpUrl) -> a
    okhttp3.internal.http.HttpCodec newCodec(okhttp3.OkHttpClient,okhttp3.Interceptor$Chain,okhttp3.internal.connection.StreamAllocation) -> a
    okhttp3.Route route() -> a
    java.net.Socket socket() -> b
    boolean isHealthy(boolean) -> a
    void onStream(okhttp3.internal.http2.Http2Stream) -> a
    void onSettings(okhttp3.internal.http2.Http2Connection) -> a
    okhttp3.Handshake handshake() -> c
    boolean isMultiplexed() -> d
    java.lang.String toString() -> toString
okhttp3.internal.connection.RouteDatabase -> a.a.b.d:
    java.util.Set failedRoutes -> a
    void failed(okhttp3.Route) -> a
    void connected(okhttp3.Route) -> b
    boolean shouldPostpone(okhttp3.Route) -> c
okhttp3.internal.connection.RouteException -> a.a.b.e:
    java.lang.reflect.Method addSuppressedExceptionMethod -> a
    java.io.IOException lastException -> b
    java.io.IOException getLastConnectException() -> a
    void addConnectException(java.io.IOException) -> a
    void addSuppressedIfPossible(java.io.IOException,java.io.IOException) -> a
okhttp3.internal.connection.RouteSelector -> a.a.b.f:
    okhttp3.Address address -> a
    okhttp3.internal.connection.RouteDatabase routeDatabase -> b
    okhttp3.Call call -> c
    okhttp3.EventListener eventListener -> d
    java.util.List proxies -> e
    int nextProxyIndex -> f
    java.util.List inetSocketAddresses -> g
    java.util.List postponedRoutes -> h
    boolean hasNext() -> a
    okhttp3.internal.connection.RouteSelector$Selection next() -> b
    void connectFailed(okhttp3.Route,java.io.IOException) -> a
    void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy) -> a
    boolean hasNextProxy() -> c
    java.net.Proxy nextProxy() -> d
    void resetNextInetSocketAddress(java.net.Proxy) -> a
    java.lang.String getHostString(java.net.InetSocketAddress) -> a
okhttp3.internal.connection.RouteSelector$Selection -> a.a.b.g:
    java.util.List routes -> a
    int nextRouteIndex -> b
    boolean hasNext() -> a
    okhttp3.Route next() -> b
    java.util.List getAll() -> c
okhttp3.internal.connection.StreamAllocation -> a.a.b.h:
    okhttp3.Address address -> a
    okhttp3.internal.connection.RouteSelector$Selection routeSelection -> e
    okhttp3.Route route -> f
    okhttp3.ConnectionPool connectionPool -> g
    okhttp3.Call call -> b
    okhttp3.EventListener eventListener -> c
    java.lang.Object callStackTrace -> h
    okhttp3.internal.connection.RouteSelector routeSelector -> i
    int refusedStreamCount -> j
    okhttp3.internal.connection.RealConnection connection -> k
    boolean reportedAcquired -> l
    boolean released -> m
    boolean canceled -> n
    okhttp3.internal.http.HttpCodec codec -> o
    boolean $assertionsDisabled -> d
    okhttp3.internal.http.HttpCodec newStream(okhttp3.OkHttpClient,okhttp3.Interceptor$Chain,boolean) -> a
    okhttp3.internal.connection.RealConnection findHealthyConnection(int,int,int,boolean,boolean) -> a
    okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean) -> a
    java.net.Socket releaseIfNoNewStreams() -> f
    void streamFinished(boolean,okhttp3.internal.http.HttpCodec,long,java.io.IOException) -> a
    okhttp3.internal.http.HttpCodec codec() -> a
    okhttp3.internal.connection.RouteDatabase routeDatabase() -> g
    okhttp3.internal.connection.RealConnection connection() -> b
    void release() -> c
    void noNewStreams() -> d
    java.net.Socket deallocate(boolean,boolean,boolean) -> a
    void streamFailed(java.io.IOException) -> a
    void acquire(okhttp3.internal.connection.RealConnection,boolean) -> a
    void release(okhttp3.internal.connection.RealConnection) -> b
    java.net.Socket releaseAndAcquire(okhttp3.internal.connection.RealConnection) -> a
    boolean hasMoreRoutes() -> e
    java.lang.String toString() -> toString
okhttp3.internal.connection.StreamAllocation$StreamAllocationReference -> a.a.b.i:
    java.lang.Object callStackTrace -> a
okhttp3.internal.http.BridgeInterceptor -> a.a.c.a:
    okhttp3.CookieJar cookieJar -> a
    okhttp3.Response intercept(okhttp3.Interceptor$Chain) -> a
    java.lang.String cookieHeader(java.util.List) -> a
okhttp3.internal.http.CallServerInterceptor -> a.a.c.b:
    boolean forWebSocket -> a
    okhttp3.Response intercept(okhttp3.Interceptor$Chain) -> a
okhttp3.internal.http.CallServerInterceptor$CountingSink -> a.a.c.c:
    long successfulCount -> a
    void write(okio.Buffer,long) -> a_
okhttp3.internal.http.HttpCodec -> a.a.c.d:
    okio.Sink createRequestBody(okhttp3.Request,long) -> a
    void writeRequestHeaders(okhttp3.Request) -> a
    void flushRequest() -> a
    void finishRequest() -> b
    okhttp3.Response$Builder readResponseHeaders(boolean) -> a
    okhttp3.ResponseBody openResponseBody(okhttp3.Response) -> a
okhttp3.internal.http.HttpDate -> a.a.c.e:
    java.lang.ThreadLocal STANDARD_DATE_FORMAT -> a
    java.lang.String[] BROWSER_COMPATIBLE_DATE_FORMAT_STRINGS -> b
    java.text.DateFormat[] BROWSER_COMPATIBLE_DATE_FORMATS -> c
    java.util.Date parse(java.lang.String) -> a
    java.lang.String format(java.util.Date) -> a
okhttp3.internal.http.HttpDate$1 -> a.a.c.f:
    java.text.DateFormat initialValue() -> a
    java.lang.Object initialValue() -> initialValue
okhttp3.internal.http.HttpHeaders -> a.a.c.g:
    java.util.regex.Pattern PARAMETER -> a
    long contentLength(okhttp3.Response) -> a
    long contentLength(okhttp3.Headers) -> a
    long stringToLong(java.lang.String) -> a
    void receiveHeaders(okhttp3.CookieJar,okhttp3.HttpUrl,okhttp3.Headers) -> a
    boolean hasBody(okhttp3.Response) -> b
    int skipUntil(java.lang.String,int,java.lang.String) -> a
    int skipWhitespace(java.lang.String,int) -> a
    int parseSeconds(java.lang.String,int) -> b
okhttp3.internal.http.HttpMethod -> a.a.c.h:
    boolean invalidatesCache(java.lang.String) -> a
    boolean requiresRequestBody(java.lang.String) -> b
    boolean permitsRequestBody(java.lang.String) -> c
    boolean redirectsWithBody(java.lang.String) -> d
    boolean redirectsToGet(java.lang.String) -> e
okhttp3.internal.http.RealInterceptorChain -> a.a.c.i:
    java.util.List interceptors -> a
    okhttp3.internal.connection.StreamAllocation streamAllocation -> b
    okhttp3.internal.http.HttpCodec httpCodec -> c
    okhttp3.internal.connection.RealConnection connection -> d
    int index -> e
    okhttp3.Request request -> f
    okhttp3.Call call -> g
    okhttp3.EventListener eventListener -> h
    int connectTimeout -> i
    int readTimeout -> j
    int writeTimeout -> k
    int calls -> l
    okhttp3.Connection connection() -> e
    int connectTimeoutMillis() -> b
    int readTimeoutMillis() -> c
    int writeTimeoutMillis() -> d
    okhttp3.internal.connection.StreamAllocation streamAllocation() -> f
    okhttp3.internal.http.HttpCodec httpStream() -> g
    okhttp3.Call call() -> h
    okhttp3.EventListener eventListener() -> i
    okhttp3.Request request() -> a
    okhttp3.Response proceed(okhttp3.Request) -> a
    okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpCodec,okhttp3.internal.connection.RealConnection) -> a
okhttp3.internal.http.RealResponseBody -> a.a.c.j:
    java.lang.String contentTypeString -> a
    long contentLength -> b
    okio.BufferedSource source -> c
    okhttp3.MediaType contentType() -> a
    long contentLength() -> b
    okio.BufferedSource source() -> c
okhttp3.internal.http.RequestLine -> a.a.c.k:
    java.lang.String get(okhttp3.Request,java.net.Proxy$Type) -> a
    boolean includeAuthorityInRequestLine(okhttp3.Request,java.net.Proxy$Type) -> b
    java.lang.String requestPath(okhttp3.HttpUrl) -> a
okhttp3.internal.http.RetryAndFollowUpInterceptor -> a.a.c.l:
    okhttp3.OkHttpClient client -> a
    boolean forWebSocket -> b
    okhttp3.internal.connection.StreamAllocation streamAllocation -> c
    java.lang.Object callStackTrace -> d
    boolean canceled -> e
    boolean isCanceled() -> a
    void setCallStackTrace(java.lang.Object) -> a
    okhttp3.Response intercept(okhttp3.Interceptor$Chain) -> a
    okhttp3.Address createAddress(okhttp3.HttpUrl) -> a
    boolean recover(java.io.IOException,boolean,okhttp3.Request) -> a
    boolean isRecoverable(java.io.IOException,boolean) -> a
    okhttp3.Request followUpRequest(okhttp3.Response) -> a
    boolean sameConnection(okhttp3.Response,okhttp3.HttpUrl) -> a
okhttp3.internal.http.StatusLine -> a.a.c.m:
    okhttp3.Protocol protocol -> a
    int code -> b
    java.lang.String message -> c
    okhttp3.internal.http.StatusLine parse(java.lang.String) -> a
    java.lang.String toString() -> toString
okhttp3.internal.http.UnrepeatableRequestBody -> a.a.c.n:
okhttp3.internal.http1.Http1Codec -> a.a.d.a:
    okhttp3.OkHttpClient client -> a
    okhttp3.internal.connection.StreamAllocation streamAllocation -> b
    okio.BufferedSource source -> c
    okio.BufferedSink sink -> d
    int state -> e
    long headerLimit -> f
    okio.Sink createRequestBody(okhttp3.Request,long) -> a
    void writeRequestHeaders(okhttp3.Request) -> a
    okhttp3.ResponseBody openResponseBody(okhttp3.Response) -> a
    void flushRequest() -> a
    void finishRequest() -> b
    void writeRequest(okhttp3.Headers,java.lang.String) -> a
    okhttp3.Response$Builder readResponseHeaders(boolean) -> a
    java.lang.String readHeaderLine() -> f
    okhttp3.Headers readHeaders() -> c
    okio.Sink newChunkedSink() -> d
    okio.Sink newFixedLengthSink(long) -> a
    okio.Source newFixedLengthSource(long) -> b
    okio.Source newChunkedSource(okhttp3.HttpUrl) -> a
    okio.Source newUnknownLengthSource() -> e
    void detachTimeout(okio.ForwardingTimeout) -> a
okhttp3.internal.http1.Http1Codec$1 -> a.a.d.b:
okhttp3.internal.http1.Http1Codec$AbstractSource -> a.a.d.c:
    okio.ForwardingTimeout timeout -> a
    boolean closed -> b
    long bytesRead -> c
    okhttp3.internal.http1.Http1Codec this$0 -> d
    okio.Timeout timeout() -> a
    long read(okio.Buffer,long) -> a
    void endOfInput(boolean,java.io.IOException) -> a
okhttp3.internal.http1.Http1Codec$ChunkedSink -> a.a.d.d:
    okio.ForwardingTimeout timeout -> b
    boolean closed -> c
    okhttp3.internal.http1.Http1Codec this$0 -> a
    okio.Timeout timeout() -> a
    void write(okio.Buffer,long) -> a_
    void flush() -> flush
    void close() -> close
okhttp3.internal.http1.Http1Codec$ChunkedSource -> a.a.d.e:
    okhttp3.HttpUrl url -> f
    long bytesRemainingInChunk -> g
    boolean hasMoreChunks -> h
    okhttp3.internal.http1.Http1Codec this$0 -> e
    long read(okio.Buffer,long) -> a
    void readChunkSize() -> b
    void close() -> close
okhttp3.internal.http1.Http1Codec$FixedLengthSink -> a.a.d.f:
    okio.ForwardingTimeout timeout -> b
    boolean closed -> c
    long bytesRemaining -> d
    okhttp3.internal.http1.Http1Codec this$0 -> a
    okio.Timeout timeout() -> a
    void write(okio.Buffer,long) -> a_
    void flush() -> flush
    void close() -> close
okhttp3.internal.http1.Http1Codec$FixedLengthSource -> a.a.d.g:
    long bytesRemaining -> f
    okhttp3.internal.http1.Http1Codec this$0 -> e
    long read(okio.Buffer,long) -> a
    void close() -> close
okhttp3.internal.http1.Http1Codec$UnknownLengthSource -> a.a.d.h:
    boolean inputExhausted -> f
    okhttp3.internal.http1.Http1Codec this$0 -> e
    long read(okio.Buffer,long) -> a
    void close() -> close
okhttp3.internal.http2.ConnectionShutdownException -> a.a.e.a:
okhttp3.internal.http2.ErrorCode -> a.a.e.b:
    okhttp3.internal.http2.ErrorCode NO_ERROR -> a
    okhttp3.internal.http2.ErrorCode PROTOCOL_ERROR -> b
    okhttp3.internal.http2.ErrorCode INTERNAL_ERROR -> c
    okhttp3.internal.http2.ErrorCode FLOW_CONTROL_ERROR -> d
    okhttp3.internal.http2.ErrorCode REFUSED_STREAM -> e
    okhttp3.internal.http2.ErrorCode CANCEL -> f
    int httpCode -> g
    okhttp3.internal.http2.ErrorCode[] $VALUES -> h
    okhttp3.internal.http2.ErrorCode[] values() -> values
    okhttp3.internal.http2.ErrorCode valueOf(java.lang.String) -> valueOf
    okhttp3.internal.http2.ErrorCode fromHttp2(int) -> a
okhttp3.internal.http2.Header -> a.a.e.c:
    okio.ByteString PSEUDO_PREFIX -> a
    okio.ByteString RESPONSE_STATUS -> b
    okio.ByteString TARGET_METHOD -> c
    okio.ByteString TARGET_PATH -> d
    okio.ByteString TARGET_SCHEME -> e
    okio.ByteString TARGET_AUTHORITY -> f
    okio.ByteString name -> g
    okio.ByteString value -> h
    int hpackSize -> i
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
okhttp3.internal.http2.Hpack -> a.a.e.d:
    okhttp3.internal.http2.Header[] STATIC_HEADER_TABLE -> a
    java.util.Map NAME_TO_FIRST_INDEX -> b
    java.util.Map nameToFirstIndex() -> a
    okio.ByteString checkLowercase(okio.ByteString) -> a
okhttp3.internal.http2.Hpack$Reader -> a.a.e.e:
    java.util.List headerList -> e
    okio.BufferedSource source -> f
    int headerTableSizeSetting -> g
    int maxDynamicTableByteCount -> h
    okhttp3.internal.http2.Header[] dynamicTable -> a
    int nextHeaderIndex -> b
    int headerCount -> c
    int dynamicTableByteCount -> d
    void adjustDynamicTableByteCount() -> d
    void clearDynamicTable() -> e
    int evictToRecoverBytes(int) -> a
    void readHeaders() -> a
    java.util.List getAndResetHeaderList() -> b
    void readIndexedHeader(int) -> b
    int dynamicTableIndex(int) -> c
    void readLiteralHeaderWithoutIndexingIndexedName(int) -> d
    void readLiteralHeaderWithoutIndexingNewName() -> f
    void readLiteralHeaderWithIncrementalIndexingIndexedName(int) -> e
    void readLiteralHeaderWithIncrementalIndexingNewName() -> g
    okio.ByteString getName(int) -> f
    boolean isStaticHeader(int) -> g
    void insertIntoDynamicTable(int,okhttp3.internal.http2.Header) -> a
    int readByte() -> h
    int readInt(int,int) -> a
    okio.ByteString readByteString() -> c
okhttp3.internal.http2.Hpack$Writer -> a.a.e.f:
    okio.Buffer out -> g
    boolean useCompression -> h
    int smallestHeaderTableSizeSetting -> i
    boolean emitDynamicTableSizeUpdate -> j
    int headerTableSizeSetting -> a
    int maxDynamicTableByteCount -> b
    okhttp3.internal.http2.Header[] dynamicTable -> c
    int nextHeaderIndex -> d
    int headerCount -> e
    int dynamicTableByteCount -> f
    void clearDynamicTable() -> a
    int evictToRecoverBytes(int) -> b
    void insertIntoDynamicTable(okhttp3.internal.http2.Header) -> a
    void writeHeaders(java.util.List) -> a
    void writeInt(int,int,int) -> a
    void writeByteString(okio.ByteString) -> a
    void setHeaderTableSizeSetting(int) -> a
    void adjustDynamicTableByteCount() -> b
okhttp3.internal.http2.Http2 -> a.a.e.g:
    okio.ByteString CONNECTION_PREFACE -> a
    java.lang.String[] FRAME_NAMES -> d
    java.lang.String[] FLAGS -> b
    java.lang.String[] BINARY -> c
    java.lang.IllegalArgumentException illegalArgument(java.lang.String,java.lang.Object[]) -> a
    java.io.IOException ioException(java.lang.String,java.lang.Object[]) -> b
    java.lang.String frameLog(boolean,int,int,byte,byte) -> a
    java.lang.String formatFlags(byte,byte) -> a
okhttp3.internal.http2.Http2Codec -> a.a.e.h:
    okio.ByteString CONNECTION -> b
    okio.ByteString HOST -> c
    okio.ByteString KEEP_ALIVE -> d
    okio.ByteString PROXY_CONNECTION -> e
    okio.ByteString TRANSFER_ENCODING -> f
    okio.ByteString TE -> g
    okio.ByteString ENCODING -> h
    okio.ByteString UPGRADE -> i
    java.util.List HTTP_2_SKIPPED_REQUEST_HEADERS -> j
    java.util.List HTTP_2_SKIPPED_RESPONSE_HEADERS -> k
    okhttp3.OkHttpClient client -> l
    okhttp3.Interceptor$Chain chain -> m
    okhttp3.internal.connection.StreamAllocation streamAllocation -> a
    okhttp3.internal.http2.Http2Connection connection -> n
    okhttp3.internal.http2.Http2Stream stream -> o
    okio.Sink createRequestBody(okhttp3.Request,long) -> a
    void writeRequestHeaders(okhttp3.Request) -> a
    void flushRequest() -> a
    void finishRequest() -> b
    okhttp3.Response$Builder readResponseHeaders(boolean) -> a
    java.util.List http2HeadersList(okhttp3.Request) -> b
    okhttp3.Response$Builder readHttp2HeadersList(java.util.List) -> a
    okhttp3.ResponseBody openResponseBody(okhttp3.Response) -> a
okhttp3.internal.http2.Http2Codec$StreamFinishingSource -> a.a.e.i:
    boolean completed -> a
    long bytesRead -> b
    okhttp3.internal.http2.Http2Codec this$0 -> c
    long read(okio.Buffer,long) -> a
    void close() -> close
    void endOfInput(java.io.IOException) -> a
okhttp3.internal.http2.Http2Connection -> a.a.e.j:
    java.util.concurrent.ExecutorService executor -> a
    boolean client -> b
    okhttp3.internal.http2.Http2Connection$Listener listener -> c
    java.util.Map streams -> d
    java.lang.String hostname -> e
    int lastGoodStreamId -> f
    int nextStreamId -> g
    boolean shutdown -> h
    java.util.concurrent.ExecutorService pushExecutor -> t
    java.util.Map pings -> u
    okhttp3.internal.http2.PushObserver pushObserver -> i
    int nextPingId -> v
    long unacknowledgedBytesRead -> j
    long bytesLeftInWriteWindow -> k
    okhttp3.internal.http2.Settings okHttpSettings -> l
    okhttp3.internal.http2.Settings peerSettings -> m
    boolean receivedInitialPeerSettings -> n
    java.net.Socket socket -> o
    okhttp3.internal.http2.Http2Writer writer -> p
    okhttp3.internal.http2.Http2Connection$ReaderRunnable readerRunnable -> q
    java.util.Set currentPushRequests -> r
    boolean $assertionsDisabled -> s
    okhttp3.internal.http2.Http2Stream getStream(int) -> a
    okhttp3.internal.http2.Http2Stream removeStream(int) -> b
    int maxConcurrentStreams() -> a
    okhttp3.internal.http2.Http2Stream newStream(java.util.List,boolean) -> a
    okhttp3.internal.http2.Http2Stream newStream(int,java.util.List,boolean) -> b
    void writeData(int,boolean,okio.Buffer,long) -> a
    void addBytesToWriteWindow(long) -> a
    void writeSynResetLater(int,okhttp3.internal.http2.ErrorCode) -> a
    void writeSynReset(int,okhttp3.internal.http2.ErrorCode) -> b
    void writeWindowUpdateLater(int,long) -> a
    void writePingLater(boolean,int,int,okhttp3.internal.http2.Ping) -> a
    void writePing(boolean,int,int,okhttp3.internal.http2.Ping) -> b
    okhttp3.internal.http2.Ping removePing(int) -> c
    void flush() -> b
    void shutdown(okhttp3.internal.http2.ErrorCode) -> a
    void close() -> close
    void close(okhttp3.internal.http2.ErrorCode,okhttp3.internal.http2.ErrorCode) -> a
    void start() -> c
    void start(boolean) -> a
    boolean isShutdown() -> d
    boolean pushedStream(int) -> d
    void pushRequestLater(int,java.util.List) -> a
    void pushHeadersLater(int,java.util.List,boolean) -> a
    void pushDataLater(int,okio.BufferedSource,int,boolean) -> a
    void pushResetLater(int,okhttp3.internal.http2.ErrorCode) -> c
okhttp3.internal.http2.Http2Connection$1 -> a.a.e.k:
    int val$streamId -> a
    okhttp3.internal.http2.ErrorCode val$errorCode -> c
    okhttp3.internal.http2.Http2Connection this$0 -> d
    void execute() -> b
okhttp3.internal.http2.Http2Connection$2 -> a.a.e.l:
    int val$streamId -> a
    long val$unacknowledgedBytesRead -> c
    okhttp3.internal.http2.Http2Connection this$0 -> d
    void execute() -> b
okhttp3.internal.http2.Http2Connection$3 -> a.a.e.m:
    boolean val$reply -> a
    int val$payload1 -> c
    int val$payload2 -> d
    okhttp3.internal.http2.Ping val$ping -> e
    okhttp3.internal.http2.Http2Connection this$0 -> f
    void execute() -> b
okhttp3.internal.http2.Http2Connection$4 -> a.a.e.n:
    int val$streamId -> a
    java.util.List val$requestHeaders -> c
    okhttp3.internal.http2.Http2Connection this$0 -> d
    void execute() -> b
okhttp3.internal.http2.Http2Connection$5 -> a.a.e.o:
    int val$streamId -> a
    java.util.List val$requestHeaders -> c
    boolean val$inFinished -> d
    okhttp3.internal.http2.Http2Connection this$0 -> e
    void execute() -> b
okhttp3.internal.http2.Http2Connection$6 -> a.a.e.p:
    int val$streamId -> a
    okio.Buffer val$buffer -> c
    int val$byteCount -> d
    boolean val$inFinished -> e
    okhttp3.internal.http2.Http2Connection this$0 -> f
    void execute() -> b
okhttp3.internal.http2.Http2Connection$7 -> a.a.e.q:
    int val$streamId -> a
    okhttp3.internal.http2.ErrorCode val$errorCode -> c
    okhttp3.internal.http2.Http2Connection this$0 -> d
    void execute() -> b
okhttp3.internal.http2.Http2Connection$Builder -> a.a.e.r:
    java.net.Socket socket -> a
    java.lang.String hostname -> b
    okio.BufferedSource source -> c
    okio.BufferedSink sink -> d
    okhttp3.internal.http2.Http2Connection$Listener listener -> e
    okhttp3.internal.http2.PushObserver pushObserver -> f
    boolean client -> g
    okhttp3.internal.http2.Http2Connection$Builder socket(java.net.Socket,java.lang.String,okio.BufferedSource,okio.BufferedSink) -> a
    okhttp3.internal.http2.Http2Connection$Builder listener(okhttp3.internal.http2.Http2Connection$Listener) -> a
    okhttp3.internal.http2.Http2Connection build() -> a
okhttp3.internal.http2.Http2Connection$Listener -> a.a.e.s:
    okhttp3.internal.http2.Http2Connection$Listener REFUSE_INCOMING_STREAMS -> f
    void onStream(okhttp3.internal.http2.Http2Stream) -> a
    void onSettings(okhttp3.internal.http2.Http2Connection) -> a
okhttp3.internal.http2.Http2Connection$Listener$1 -> a.a.e.t:
    void onStream(okhttp3.internal.http2.Http2Stream) -> a
okhttp3.internal.http2.Http2Connection$ReaderRunnable -> a.a.e.u:
    okhttp3.internal.http2.Http2Reader reader -> a
    okhttp3.internal.http2.Http2Connection this$0 -> c
    void execute() -> b
    void data(boolean,int,okio.BufferedSource,int) -> a
    void headers(boolean,int,int,java.util.List) -> a
    void rstStream(int,okhttp3.internal.http2.ErrorCode) -> a
    void settings(boolean,okhttp3.internal.http2.Settings) -> a
    void applyAndAckSettings(okhttp3.internal.http2.Settings) -> a
    void ackSettings() -> a
    void ping(boolean,int,int) -> a
    void goAway(int,okhttp3.internal.http2.ErrorCode,okio.ByteString) -> a
    void windowUpdate(int,long) -> a
    void priority(int,int,int,boolean) -> a
    void pushPromise(int,int,java.util.List) -> a
okhttp3.internal.http2.Http2Connection$ReaderRunnable$1 -> a.a.e.v:
    okhttp3.internal.http2.Http2Stream val$newStream -> a
    okhttp3.internal.http2.Http2Connection$ReaderRunnable this$1 -> c
    void execute() -> b
okhttp3.internal.http2.Http2Connection$ReaderRunnable$2 -> a.a.e.w:
    okhttp3.internal.http2.Http2Connection$ReaderRunnable this$1 -> a
    void execute() -> b
okhttp3.internal.http2.Http2Connection$ReaderRunnable$3 -> a.a.e.x:
    okhttp3.internal.http2.Settings val$peerSettings -> a
    okhttp3.internal.http2.Http2Connection$ReaderRunnable this$1 -> c
    void execute() -> b
okhttp3.internal.http2.Http2Reader -> a.a.e.y:
    java.util.logging.Logger logger -> a
    okio.BufferedSource source -> c
    okhttp3.internal.http2.Http2Reader$ContinuationSource continuation -> d
    boolean client -> e
    okhttp3.internal.http2.Hpack$Reader hpackReader -> b
    void readConnectionPreface(okhttp3.internal.http2.Http2Reader$Handler) -> a
    boolean nextFrame(boolean,okhttp3.internal.http2.Http2Reader$Handler) -> a
    void readHeaders(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int) -> a
    java.util.List readHeaderBlock(int,short,byte,int) -> a
    void readData(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int) -> b
    void readPriority(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int) -> c
    void readPriority(okhttp3.internal.http2.Http2Reader$Handler,int) -> a
    void readRstStream(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int) -> d
    void readSettings(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int) -> e
    void readPushPromise(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int) -> f
    void readPing(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int) -> g
    void readGoAway(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int) -> h
    void readWindowUpdate(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int) -> i
    void close() -> close
    int readMedium(okio.BufferedSource) -> a
    int lengthWithoutPadding(int,byte,short) -> a
okhttp3.internal.http2.Http2Reader$ContinuationSource -> a.a.e.z:
    okio.BufferedSource source -> f
    int length -> a
    byte flags -> b
    int streamId -> c
    int left -> d
    short padding -> e
    long read(okio.Buffer,long) -> a
    okio.Timeout timeout() -> a
    void close() -> close
    void readContinuationHeader() -> b
okhttp3.internal.http2.Http2Reader$Handler -> a.a.e.aa:
    void data(boolean,int,okio.BufferedSource,int) -> a
    void headers(boolean,int,int,java.util.List) -> a
    void rstStream(int,okhttp3.internal.http2.ErrorCode) -> a
    void settings(boolean,okhttp3.internal.http2.Settings) -> a
    void ackSettings() -> a
    void ping(boolean,int,int) -> a
    void goAway(int,okhttp3.internal.http2.ErrorCode,okio.ByteString) -> a
    void windowUpdate(int,long) -> a
    void priority(int,int,int,boolean) -> a
    void pushPromise(int,int,java.util.List) -> a
okhttp3.internal.http2.Http2Stream -> a.a.e.ab:
    long unacknowledgedBytesRead -> a
    long bytesLeftInWriteWindow -> b
    int id -> c
    okhttp3.internal.http2.Http2Connection connection -> d
    java.util.List requestHeaders -> j
    java.util.List responseHeaders -> k
    boolean hasResponseHeaders -> l
    okhttp3.internal.http2.Http2Stream$FramingSource source -> m
    okhttp3.internal.http2.Http2Stream$FramingSink sink -> e
    okhttp3.internal.http2.Http2Stream$StreamTimeout readTimeout -> f
    okhttp3.internal.http2.Http2Stream$StreamTimeout writeTimeout -> g
    okhttp3.internal.http2.ErrorCode errorCode -> h
    boolean $assertionsDisabled -> i
    int getId() -> a
    boolean isOpen() -> b
    boolean isLocallyInitiated() -> c
    java.util.List takeResponseHeaders() -> d
    okio.Timeout readTimeout() -> e
    okio.Timeout writeTimeout() -> f
    okio.Source getSource() -> g
    okio.Sink getSink() -> h
    void close(okhttp3.internal.http2.ErrorCode) -> a
    void closeLater(okhttp3.internal.http2.ErrorCode) -> b
    boolean closeInternal(okhttp3.internal.http2.ErrorCode) -> d
    void receiveHeaders(java.util.List) -> a
    void receiveData(okio.BufferedSource,int) -> a
    void receiveFin() -> i
    void receiveRstStream(okhttp3.internal.http2.ErrorCode) -> c
    void cancelStreamIfNecessary() -> j
    void addBytesToWriteWindow(long) -> a
    void checkOutNotClosed() -> k
    void waitForIo() -> l
okhttp3.internal.http2.Http2Stream$FramingSink -> a.a.e.ac:
    okio.Buffer sendBuffer -> e
    boolean closed -> a
    boolean finished -> b
    boolean $assertionsDisabled -> c
    okhttp3.internal.http2.Http2Stream this$0 -> d
    void write(okio.Buffer,long) -> a_
    void emitFrame(boolean) -> a
    void flush() -> flush
    okio.Timeout timeout() -> a
    void close() -> close
okhttp3.internal.http2.Http2Stream$FramingSource -> a.a.e.ad:
    okio.Buffer receiveBuffer -> e
    okio.Buffer readBuffer -> f
    long maxByteCount -> g
    boolean closed -> a
    boolean finished -> b
    boolean $assertionsDisabled -> c
    okhttp3.internal.http2.Http2Stream this$0 -> d
    long read(okio.Buffer,long) -> a
    void waitUntilReadable() -> b
    void receive(okio.BufferedSource,long) -> a
    okio.Timeout timeout() -> a
    void close() -> close
    void checkNotClosed() -> c
okhttp3.internal.http2.Http2Stream$StreamTimeout -> a.a.e.ae:
    okhttp3.internal.http2.Http2Stream this$0 -> a
    void timedOut() -> a
    java.io.IOException newTimeoutException(java.io.IOException) -> a
    void exitAndThrowIfTimedOut() -> b
okhttp3.internal.http2.Http2Writer -> a.a.e.af:
    java.util.logging.Logger logger -> b
    okio.BufferedSink sink -> c
    boolean client -> d
    okio.Buffer hpackBuffer -> e
    int maxFrameSize -> f
    boolean closed -> g
    okhttp3.internal.http2.Hpack$Writer hpackWriter -> a
    void connectionPreface() -> a
    void applyAndAckSettings(okhttp3.internal.http2.Settings) -> a
    void pushPromise(int,int,java.util.List) -> a
    void flush() -> b
    void synStream(boolean,int,int,java.util.List) -> a
    void rstStream(int,okhttp3.internal.http2.ErrorCode) -> a
    int maxDataLength() -> c
    void data(boolean,int,okio.Buffer,int) -> a
    void dataFrame(int,byte,okio.Buffer,int) -> a
    void settings(okhttp3.internal.http2.Settings) -> b
    void ping(boolean,int,int) -> a
    void goAway(int,okhttp3.internal.http2.ErrorCode,byte[]) -> a
    void windowUpdate(int,long) -> a
    void frameHeader(int,int,byte,byte) -> a
    void close() -> close
    void writeMedium(okio.BufferedSink,int) -> a
    void writeContinuationFrames(int,long) -> b
    void headers(boolean,int,java.util.List) -> a
okhttp3.internal.http2.Huffman -> a.a.e.ag:
    int[] CODES -> a
    byte[] CODE_LENGTHS -> b
    okhttp3.internal.http2.Huffman INSTANCE -> c
    okhttp3.internal.http2.Huffman$Node root -> d
    okhttp3.internal.http2.Huffman get() -> a
    void encode(okio.ByteString,okio.BufferedSink) -> a
    int encodedLength(okio.ByteString) -> a
    byte[] decode(byte[]) -> a
    void buildTree() -> b
    void addCode(int,int,byte) -> a
okhttp3.internal.http2.Huffman$Node -> a.a.e.ah:
    okhttp3.internal.http2.Huffman$Node[] children -> a
    int symbol -> b
    int terminalBits -> c
okhttp3.internal.http2.Ping -> a.a.e.ai:
    java.util.concurrent.CountDownLatch latch -> a
    long sent -> b
    long received -> c
    void send() -> a
    void receive() -> b
    void cancel() -> c
okhttp3.internal.http2.PushObserver -> a.a.e.aj:
    okhttp3.internal.http2.PushObserver CANCEL -> a
    boolean onRequest(int,java.util.List) -> a
    boolean onHeaders(int,java.util.List,boolean) -> a
    boolean onData(int,okio.BufferedSource,int,boolean) -> a
    void onReset(int,okhttp3.internal.http2.ErrorCode) -> a
okhttp3.internal.http2.PushObserver$1 -> a.a.e.ak:
    boolean onRequest(int,java.util.List) -> a
    boolean onHeaders(int,java.util.List,boolean) -> a
    boolean onData(int,okio.BufferedSource,int,boolean) -> a
    void onReset(int,okhttp3.internal.http2.ErrorCode) -> a
okhttp3.internal.http2.Settings -> a.a.e.al:
    int set -> a
    int[] values -> b
    void clear() -> a
    okhttp3.internal.http2.Settings set(int,int) -> a
    boolean isSet(int) -> a
    int get(int) -> b
    int size() -> b
    int getHeaderTableSize() -> c
    int getMaxConcurrentStreams(int) -> c
    int getMaxFrameSize(int) -> d
    int getInitialWindowSize() -> d
    void merge(okhttp3.internal.http2.Settings) -> a
okhttp3.internal.http2.StreamResetException -> a.a.e.am:
    okhttp3.internal.http2.ErrorCode errorCode -> a
okhttp3.internal.io.FileSystem -> a.a.f.a:
    okhttp3.internal.io.FileSystem SYSTEM -> a
    void delete(java.io.File) -> a
    boolean exists(java.io.File) -> b
    long size(java.io.File) -> c
    void rename(java.io.File,java.io.File) -> a
okhttp3.internal.io.FileSystem$1 -> a.a.f.b:
    void delete(java.io.File) -> a
    boolean exists(java.io.File) -> b
    long size(java.io.File) -> c
    void rename(java.io.File,java.io.File) -> a
okhttp3.internal.platform.AndroidPlatform -> a.a.g.a:
    java.lang.Class sslParametersClass -> a
    okhttp3.internal.platform.OptionalMethod setUseSessionTickets -> b
    okhttp3.internal.platform.OptionalMethod setHostname -> c
    okhttp3.internal.platform.OptionalMethod getAlpnSelectedProtocol -> d
    okhttp3.internal.platform.OptionalMethod setAlpnProtocols -> e
    okhttp3.internal.platform.AndroidPlatform$CloseGuard closeGuard -> f
    void connectSocket(java.net.Socket,java.net.InetSocketAddress,int) -> a
    void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> a
    java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket) -> a
    void log(int,java.lang.String,java.lang.Throwable) -> a
    java.lang.Object getStackTraceForCloseable(java.lang.String) -> a
    void logCloseableLeak(java.lang.String,java.lang.Object) -> a
    boolean isCleartextTrafficPermitted(java.lang.String) -> b
    boolean api24IsCleartextTrafficPermitted(java.lang.String,java.lang.Class,java.lang.Object) -> a
    boolean api23IsCleartextTrafficPermitted(java.lang.String,java.lang.Class,java.lang.Object) -> b
    boolean supportsAlpn() -> c
    okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager) -> a
    okhttp3.internal.platform.Platform buildIfSupported() -> a
    okhttp3.internal.tls.TrustRootIndex buildTrustRootIndex(javax.net.ssl.X509TrustManager) -> b
okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner -> a.a.g.b:
    java.lang.Object x509TrustManagerExtensions -> a
    java.lang.reflect.Method checkServerTrusted -> b
    java.util.List clean(java.util.List,java.lang.String) -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
okhttp3.internal.platform.AndroidPlatform$AndroidTrustRootIndex -> a.a.g.c:
    javax.net.ssl.X509TrustManager trustManager -> a
    java.lang.reflect.Method findByIssuerAndSignatureMethod -> b
    java.security.cert.X509Certificate findByIssuerAndSignature(java.security.cert.X509Certificate) -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
okhttp3.internal.platform.AndroidPlatform$CloseGuard -> a.a.g.d:
    java.lang.reflect.Method getMethod -> a
    java.lang.reflect.Method openMethod -> b
    java.lang.reflect.Method warnIfOpenMethod -> c
    java.lang.Object createAndOpen(java.lang.String) -> a
    boolean warnIfOpen(java.lang.Object) -> a
    okhttp3.internal.platform.AndroidPlatform$CloseGuard get() -> a
okhttp3.internal.platform.Jdk9Platform -> a.a.g.e:
    java.lang.reflect.Method setProtocolMethod -> a
    java.lang.reflect.Method getProtocolMethod -> b
    void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> a
    java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket) -> a
    okhttp3.internal.platform.Jdk9Platform buildIfSupported() -> a
okhttp3.internal.platform.JdkWithJettyBootPlatform -> a.a.g.f:
    java.lang.reflect.Method putMethod -> a
    java.lang.reflect.Method getMethod -> b
    java.lang.reflect.Method removeMethod -> c
    java.lang.Class clientProviderClass -> d
    java.lang.Class serverProviderClass -> e
    void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> a
    void afterHandshake(javax.net.ssl.SSLSocket) -> b
    java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket) -> a
    okhttp3.internal.platform.Platform buildIfSupported() -> a
okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider -> a.a.g.g:
    java.util.List protocols -> c
    boolean unsupported -> a
    java.lang.String selected -> b
    java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
okhttp3.internal.platform.OptionalMethod -> a.a.g.h:
    java.lang.Class returnType -> a
    java.lang.String methodName -> b
    java.lang.Class[] methodParams -> c
    boolean isSupported(java.lang.Object) -> a
    java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[]) -> a
    java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[]) -> b
    java.lang.Object invoke(java.lang.Object,java.lang.Object[]) -> c
    java.lang.Object invokeWithoutCheckedException(java.lang.Object,java.lang.Object[]) -> d
    java.lang.reflect.Method getMethod(java.lang.Class) -> a
    java.lang.reflect.Method getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[]) -> a
okhttp3.internal.platform.Platform -> a.a.g.i:
    okhttp3.internal.platform.Platform PLATFORM -> a
    java.util.logging.Logger logger -> b
    okhttp3.internal.platform.Platform get() -> b
    void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> a
    void afterHandshake(javax.net.ssl.SSLSocket) -> b
    java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket) -> a
    void connectSocket(java.net.Socket,java.net.InetSocketAddress,int) -> a
    void log(int,java.lang.String,java.lang.Throwable) -> a
    boolean isCleartextTrafficPermitted(java.lang.String) -> b
    java.lang.Object getStackTraceForCloseable(java.lang.String) -> a
    void logCloseableLeak(java.lang.String,java.lang.Object) -> a
    java.util.List alpnProtocolNames(java.util.List) -> a
    okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager) -> a
    okhttp3.internal.platform.Platform findPlatform() -> a
    byte[] concatLengthPrefixed(java.util.List) -> b
    okhttp3.internal.tls.TrustRootIndex buildTrustRootIndex(javax.net.ssl.X509TrustManager) -> b
okhttp3.internal.publicsuffix.PublicSuffixDatabase -> a.a.h.a:
    byte[] WILDCARD_LABEL -> a
    java.lang.String[] EMPTY_RULE -> b
    java.lang.String[] PREVAILING_RULE -> c
    okhttp3.internal.publicsuffix.PublicSuffixDatabase instance -> d
    java.util.concurrent.atomic.AtomicBoolean listRead -> e
    java.util.concurrent.CountDownLatch readCompleteLatch -> f
    byte[] publicSuffixListBytes -> g
    byte[] publicSuffixExceptionListBytes -> h
    okhttp3.internal.publicsuffix.PublicSuffixDatabase get() -> a
    java.lang.String getEffectiveTldPlusOne(java.lang.String) -> a
    java.lang.String[] findMatchingRule(java.lang.String[]) -> a
    java.lang.String binarySearchBytes(byte[],byte[][],int) -> a
    void readTheListUninterruptibly() -> b
    void readTheList() -> c
okhttp3.internal.tls.BasicCertificateChainCleaner -> a.a.i.a:
    okhttp3.internal.tls.TrustRootIndex trustRootIndex -> a
    java.util.List clean(java.util.List,java.lang.String) -> a
    boolean verifySignature(java.security.cert.X509Certificate,java.security.cert.X509Certificate) -> a
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
okhttp3.internal.tls.BasicTrustRootIndex -> a.a.i.b:
    java.util.Map subjectToCaCerts -> a
    java.security.cert.X509Certificate findByIssuerAndSignature(java.security.cert.X509Certificate) -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
okhttp3.internal.tls.CertificateChainCleaner -> a.a.i.c:
    java.util.List clean(java.util.List,java.lang.String) -> a
    okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager) -> a
okhttp3.internal.tls.DistinguishedNameParser -> a.a.i.d:
    java.lang.String dn -> a
    int length -> b
    int pos -> c
    int beg -> d
    int end -> e
    int cur -> f
    char[] chars -> g
    java.lang.String nextAT() -> a
    java.lang.String quotedAV() -> b
    java.lang.String hexAV() -> c
    java.lang.String escapedAV() -> d
    char getEscaped() -> e
    char getUTF8() -> f
    int getByte(int) -> a
    java.lang.String findMostSpecific(java.lang.String) -> a
okhttp3.internal.tls.OkHostnameVerifier -> a.a.i.e:
    okhttp3.internal.tls.OkHostnameVerifier INSTANCE -> a
    boolean verify(java.lang.String,javax.net.ssl.SSLSession) -> verify
    boolean verify(java.lang.String,java.security.cert.X509Certificate) -> a
    boolean verifyIpAddress(java.lang.String,java.security.cert.X509Certificate) -> b
    boolean verifyHostname(java.lang.String,java.security.cert.X509Certificate) -> c
    java.util.List allSubjectAltNames(java.security.cert.X509Certificate) -> a
    java.util.List getSubjectAltNames(java.security.cert.X509Certificate,int) -> a
    boolean verifyHostname(java.lang.String,java.lang.String) -> a
okhttp3.internal.tls.TrustRootIndex -> a.a.i.f:
    java.security.cert.X509Certificate findByIssuerAndSignature(java.security.cert.X509Certificate) -> a
okio.AsyncTimeout -> b.a:
    long IDLE_TIMEOUT_MILLIS -> a
    long IDLE_TIMEOUT_NANOS -> d
    okio.AsyncTimeout head -> b
    boolean inQueue -> e
    okio.AsyncTimeout next -> f
    long timeoutAt -> g
    void enter() -> c
    void scheduleTimeout(okio.AsyncTimeout,long,boolean) -> a
    boolean exit() -> a_
    boolean cancelScheduledTimeout(okio.AsyncTimeout) -> a
    long remainingNanos(long) -> b
    void timedOut() -> a
    okio.Sink sink(okio.Sink) -> a
    okio.Source source(okio.Source) -> a
    void exit(boolean) -> a
    java.io.IOException exit(java.io.IOException) -> b
    java.io.IOException newTimeoutException(java.io.IOException) -> a
    okio.AsyncTimeout awaitTimeout() -> e
okio.AsyncTimeout$1 -> b.b:
    okio.Sink val$sink -> a
    okio.AsyncTimeout this$0 -> b
    void write(okio.Buffer,long) -> a_
    void flush() -> flush
    void close() -> close
    okio.Timeout timeout() -> a
    java.lang.String toString() -> toString
okio.AsyncTimeout$2 -> b.c:
    okio.Source val$source -> a
    okio.AsyncTimeout this$0 -> b
    long read(okio.Buffer,long) -> a
    void close() -> close
    okio.Timeout timeout() -> a
    java.lang.String toString() -> toString
okio.AsyncTimeout$Watchdog -> b.d:
    void run() -> run
okio.Base64 -> b.e:
    byte[] MAP -> a
    byte[] URL_MAP -> b
    java.lang.String encode(byte[]) -> a
    java.lang.String encode(byte[],byte[]) -> a
okio.Buffer -> b.f:
    byte[] DIGITS -> c
    okio.Segment head -> a
    long size -> b
    long size() -> b
    okio.Buffer buffer() -> c
    okio.Buffer emitCompleteSegments() -> d
    boolean exhausted() -> e
    void require(long) -> a
    okio.Buffer copyTo(okio.Buffer,long,long) -> a
    long completeSegmentByteCount() -> f
    byte readByte() -> g
    byte getByte(long) -> b
    short readShort() -> h
    int readInt() -> i
    short readShortLe() -> j
    int readIntLe() -> k
    long readHexadecimalUnsignedLong() -> l
    okio.ByteString readByteString() -> m
    okio.ByteString readByteString(long) -> c
    java.lang.String readUtf8() -> n
    java.lang.String readUtf8(long) -> d
    java.lang.String readString(java.nio.charset.Charset) -> a
    java.lang.String readString(long,java.nio.charset.Charset) -> a
    java.lang.String readUtf8LineStrict() -> o
    java.lang.String readUtf8LineStrict(long) -> e
    java.lang.String readUtf8Line(long) -> f
    byte[] readByteArray() -> p
    byte[] readByteArray(long) -> g
    void readFully(byte[]) -> a
    int read(byte[],int,int) -> a
    void clear() -> q
    void skip(long) -> h
    okio.Buffer write(okio.ByteString) -> a
    okio.Buffer writeUtf8(java.lang.String) -> a
    okio.Buffer writeUtf8(java.lang.String,int,int) -> a
    okio.Buffer writeUtf8CodePoint(int) -> a
    okio.Buffer writeString(java.lang.String,int,int,java.nio.charset.Charset) -> a
    okio.Buffer write(byte[]) -> b
    okio.Buffer write(byte[],int,int) -> b
    long writeAll(okio.Source) -> a
    okio.Buffer writeByte(int) -> b
    okio.Buffer writeShort(int) -> c
    okio.Buffer writeInt(int) -> d
    okio.Buffer writeDecimalLong(long) -> i
    okio.Buffer writeHexadecimalUnsignedLong(long) -> j
    okio.Segment writableSegment(int) -> e
    void write(okio.Buffer,long) -> a_
    long read(okio.Buffer,long) -> a
    long indexOf(byte) -> a
    long indexOf(byte,long,long) -> a
    boolean rangeEquals(long,okio.ByteString) -> a
    boolean rangeEquals(long,okio.ByteString,int,int) -> a
    void flush() -> flush
    void close() -> close
    okio.Timeout timeout() -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    okio.Buffer clone() -> r
    okio.ByteString snapshot() -> s
    okio.ByteString snapshot(int) -> f
    java.lang.Object clone() -> clone
    okio.BufferedSink emitCompleteSegments() -> t
    okio.BufferedSink writeHexadecimalUnsignedLong(long) -> k
    okio.BufferedSink writeDecimalLong(long) -> l
    okio.BufferedSink writeInt(int) -> g
    okio.BufferedSink writeShort(int) -> h
    okio.BufferedSink writeByte(int) -> i
    okio.BufferedSink writeUtf8(java.lang.String) -> b
    okio.BufferedSink write(byte[],int,int) -> c
    okio.BufferedSink write(byte[]) -> c
okio.BufferedSink -> b.g:
    okio.Buffer buffer() -> c
    okio.BufferedSink write(byte[]) -> c
    okio.BufferedSink write(byte[],int,int) -> c
    okio.BufferedSink writeUtf8(java.lang.String) -> b
    okio.BufferedSink writeByte(int) -> i
    okio.BufferedSink writeShort(int) -> h
    okio.BufferedSink writeInt(int) -> g
    okio.BufferedSink writeDecimalLong(long) -> l
    okio.BufferedSink writeHexadecimalUnsignedLong(long) -> k
    void flush() -> flush
    okio.BufferedSink emitCompleteSegments() -> t
okio.BufferedSource -> b.h:
    okio.Buffer buffer() -> c
    boolean exhausted() -> e
    void require(long) -> a
    byte readByte() -> g
    short readShort() -> h
    short readShortLe() -> j
    int readInt() -> i
    int readIntLe() -> k
    long readHexadecimalUnsignedLong() -> l
    void skip(long) -> h
    okio.ByteString readByteString(long) -> c
    byte[] readByteArray(long) -> g
    void readFully(byte[]) -> a
    java.lang.String readUtf8LineStrict() -> o
    java.lang.String readUtf8LineStrict(long) -> e
    java.lang.String readString(java.nio.charset.Charset) -> a
    long indexOf(byte) -> a
    boolean rangeEquals(long,okio.ByteString) -> a
okio.ByteString -> b.i:
    char[] HEX_DIGITS -> a
    okio.ByteString EMPTY -> b
    byte[] data -> c
    int hashCode -> d
    java.lang.String utf8 -> e
    okio.ByteString of(byte[]) -> a
    okio.ByteString encodeUtf8(java.lang.String) -> a
    java.lang.String utf8() -> a
    java.lang.String base64() -> b
    okio.ByteString sha1() -> c
    okio.ByteString sha256() -> d
    okio.ByteString digest(java.lang.String) -> c
    java.lang.String hex() -> e
    okio.ByteString decodeHex(java.lang.String) -> b
    int decodeHexDigit(char) -> a
    okio.ByteString toAsciiLowercase() -> f
    okio.ByteString substring(int,int) -> a
    byte getByte(int) -> a
    int size() -> g
    byte[] toByteArray() -> h
    void write(okio.Buffer) -> a
    boolean rangeEquals(int,okio.ByteString,int,int) -> a
    boolean rangeEquals(int,byte[],int,int) -> a
    boolean startsWith(okio.ByteString) -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int compareTo(okio.ByteString) -> b
    java.lang.String toString() -> toString
    int codePointIndexToCharIndex(java.lang.String,int) -> a
    int compareTo(java.lang.Object) -> compareTo
okio.ForwardingSink -> b.j:
    okio.Sink delegate -> a
    void write(okio.Buffer,long) -> a_
    void flush() -> flush
    okio.Timeout timeout() -> a
    void close() -> close
    java.lang.String toString() -> toString
okio.ForwardingSource -> b.k:
    okio.Source delegate -> a
    okio.Source delegate() -> b
    long read(okio.Buffer,long) -> a
    okio.Timeout timeout() -> a
    void close() -> close
    java.lang.String toString() -> toString
okio.ForwardingTimeout -> b.l:
    okio.Timeout delegate -> a
    okio.Timeout delegate() -> a
    okio.ForwardingTimeout setDelegate(okio.Timeout) -> a
    okio.Timeout timeout(long,java.util.concurrent.TimeUnit) -> a
    long timeoutNanos() -> b_
    boolean hasDeadline() -> c_
    long deadlineNanoTime() -> d
    okio.Timeout deadlineNanoTime(long) -> a
    okio.Timeout clearTimeout() -> d_
    okio.Timeout clearDeadline() -> f
    void throwIfReached() -> g
okio.GzipSource -> b.m:
    int section -> a
    okio.BufferedSource source -> b
    java.util.zip.Inflater inflater -> c
    okio.InflaterSource inflaterSource -> d
    java.util.zip.CRC32 crc -> e
    long read(okio.Buffer,long) -> a
    void consumeHeader() -> b
    void consumeTrailer() -> c
    okio.Timeout timeout() -> a
    void close() -> close
    void updateCrc(okio.Buffer,long,long) -> a
    void checkEqual(java.lang.String,int,int) -> a
okio.InflaterSource -> b.n:
    okio.BufferedSource source -> a
    java.util.zip.Inflater inflater -> b
    int bufferBytesHeldByInflater -> c
    boolean closed -> d
    long read(okio.Buffer,long) -> a
    boolean refill() -> b
    void releaseInflatedBytes() -> c
    okio.Timeout timeout() -> a
    void close() -> close
okio.Okio -> b.o:
    java.util.logging.Logger logger -> a
    okio.BufferedSource buffer(okio.Source) -> a
    okio.BufferedSink buffer(okio.Sink) -> a
    okio.Sink sink(java.io.OutputStream,okio.Timeout) -> a
    okio.Sink sink(java.net.Socket) -> a
    okio.Source source(java.io.InputStream) -> a
    okio.Source source(java.io.InputStream,okio.Timeout) -> a
    okio.Source source(java.net.Socket) -> b
    okio.AsyncTimeout timeout(java.net.Socket) -> c
    boolean isAndroidGetsocknameError(java.lang.AssertionError) -> a
okio.Okio$1 -> b.p:
    okio.Timeout val$timeout -> a
    java.io.OutputStream val$out -> b
    void write(okio.Buffer,long) -> a_
    void flush() -> flush
    void close() -> close
    okio.Timeout timeout() -> a
    java.lang.String toString() -> toString
okio.Okio$2 -> b.q:
    okio.Timeout val$timeout -> a
    java.io.InputStream val$in -> b
    long read(okio.Buffer,long) -> a
    void close() -> close
    okio.Timeout timeout() -> a
    java.lang.String toString() -> toString
okio.Okio$4 -> b.r:
    java.net.Socket val$socket -> a
    java.io.IOException newTimeoutException(java.io.IOException) -> a
    void timedOut() -> a
okio.RealBufferedSink -> b.s:
    okio.Buffer buffer -> a
    okio.Sink sink -> b
    boolean closed -> c
    okio.Buffer buffer() -> c
    void write(okio.Buffer,long) -> a_
    okio.BufferedSink writeUtf8(java.lang.String) -> b
    okio.BufferedSink write(byte[]) -> c
    okio.BufferedSink write(byte[],int,int) -> c
    okio.BufferedSink writeByte(int) -> i
    okio.BufferedSink writeShort(int) -> h
    okio.BufferedSink writeInt(int) -> g
    okio.BufferedSink writeDecimalLong(long) -> l
    okio.BufferedSink writeHexadecimalUnsignedLong(long) -> k
    okio.BufferedSink emitCompleteSegments() -> t
    void flush() -> flush
    void close() -> close
    okio.Timeout timeout() -> a
    java.lang.String toString() -> toString
okio.RealBufferedSource -> b.t:
    okio.Buffer buffer -> a
    okio.Source source -> b
    boolean closed -> c
    okio.Buffer buffer() -> c
    long read(okio.Buffer,long) -> a
    boolean exhausted() -> e
    void require(long) -> a
    boolean request(long) -> b
    byte readByte() -> g
    okio.ByteString readByteString(long) -> c
    byte[] readByteArray(long) -> g
    void readFully(byte[]) -> a
    java.lang.String readString(java.nio.charset.Charset) -> a
    java.lang.String readUtf8LineStrict() -> o
    java.lang.String readUtf8LineStrict(long) -> e
    short readShort() -> h
    short readShortLe() -> j
    int readInt() -> i
    int readIntLe() -> k
    long readHexadecimalUnsignedLong() -> l
    void skip(long) -> h
    long indexOf(byte) -> a
    long indexOf(byte,long,long) -> a
    boolean rangeEquals(long,okio.ByteString) -> a
    boolean rangeEquals(long,okio.ByteString,int,int) -> a
    void close() -> close
    okio.Timeout timeout() -> a
    java.lang.String toString() -> toString
okio.Segment -> b.u:
    byte[] data -> a
    int pos -> b
    int limit -> c
    boolean shared -> d
    boolean owner -> e
    okio.Segment next -> f
    okio.Segment prev -> g
    okio.Segment pop() -> a
    okio.Segment push(okio.Segment) -> a
    okio.Segment split(int) -> a
    void compact() -> b
    void writeTo(okio.Segment,int) -> a
okio.SegmentPool -> b.v:
    okio.Segment next -> a
    long byteCount -> b
    okio.Segment take() -> a
    void recycle(okio.Segment) -> a
okio.SegmentedByteString -> b.w:
    byte[][] segments -> f
    int[] directory -> g
    java.lang.String utf8() -> a
    java.lang.String base64() -> b
    java.lang.String hex() -> e
    okio.ByteString toAsciiLowercase() -> f
    okio.ByteString sha1() -> c
    okio.ByteString sha256() -> d
    okio.ByteString substring(int,int) -> a
    byte getByte(int) -> a
    int segment(int) -> b
    int size() -> g
    byte[] toByteArray() -> h
    void write(okio.Buffer) -> a
    boolean rangeEquals(int,okio.ByteString,int,int) -> a
    boolean rangeEquals(int,byte[],int,int) -> a
    okio.ByteString toByteString() -> i
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
okio.Sink -> b.x:
    void write(okio.Buffer,long) -> a_
    void flush() -> flush
    okio.Timeout timeout() -> a
    void close() -> close
okio.Source -> b.y:
    long read(okio.Buffer,long) -> a
    okio.Timeout timeout() -> a
    void close() -> close
okio.Timeout -> b.z:
    okio.Timeout NONE -> c
    boolean hasDeadline -> a
    long deadlineNanoTime -> b
    long timeoutNanos -> d
    okio.Timeout timeout(long,java.util.concurrent.TimeUnit) -> a
    long timeoutNanos() -> b_
    boolean hasDeadline() -> c_
    long deadlineNanoTime() -> d
    okio.Timeout deadlineNanoTime(long) -> a
    okio.Timeout clearTimeout() -> d_
    okio.Timeout clearDeadline() -> f
    void throwIfReached() -> g
okio.Timeout$1 -> b.aa:
    okio.Timeout timeout(long,java.util.concurrent.TimeUnit) -> a
    okio.Timeout deadlineNanoTime(long) -> a
    void throwIfReached() -> g
okio.Util -> b.ab:
    java.nio.charset.Charset UTF_8 -> a
    void checkOffsetAndCount(long,long,long) -> a
    short reverseBytesShort(short) -> a
    int reverseBytesInt(int) -> a
    void sneakyRethrow(java.lang.Throwable) -> a
    void sneakyThrow2(java.lang.Throwable) -> b
    boolean arrayRangeEquals(byte[],int,byte[],int,int) -> a
org.slf4j.ILoggerFactory -> org.slf4j.ILoggerFactory:
    org.slf4j.Logger getLogger(java.lang.String) -> getLogger
org.slf4j.IMarkerFactory -> org.slf4j.IMarkerFactory:
    org.slf4j.Marker getMarker(java.lang.String) -> getMarker
    boolean exists(java.lang.String) -> exists
    boolean detachMarker(java.lang.String) -> detachMarker
    org.slf4j.Marker getDetachedMarker(java.lang.String) -> getDetachedMarker
org.slf4j.Logger -> org.slf4j.Logger:
    java.lang.String ROOT_LOGGER_NAME -> ROOT_LOGGER_NAME
    java.lang.String getName() -> getName
    boolean isTraceEnabled() -> isTraceEnabled
    void trace(java.lang.String) -> trace
    void trace(java.lang.String,java.lang.Object) -> trace
    void trace(java.lang.String,java.lang.Object,java.lang.Object) -> trace
    void trace(java.lang.String,java.lang.Object[]) -> trace
    void trace(java.lang.String,java.lang.Throwable) -> trace
    boolean isTraceEnabled(org.slf4j.Marker) -> isTraceEnabled
    void trace(org.slf4j.Marker,java.lang.String) -> trace
    void trace(org.slf4j.Marker,java.lang.String,java.lang.Object) -> trace
    void trace(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object) -> trace
    void trace(org.slf4j.Marker,java.lang.String,java.lang.Object[]) -> trace
    void trace(org.slf4j.Marker,java.lang.String,java.lang.Throwable) -> trace
    boolean isDebugEnabled() -> isDebugEnabled
    void debug(java.lang.String) -> debug
    void debug(java.lang.String,java.lang.Object) -> debug
    void debug(java.lang.String,java.lang.Object,java.lang.Object) -> debug
    void debug(java.lang.String,java.lang.Object[]) -> debug
    void debug(java.lang.String,java.lang.Throwable) -> debug
    boolean isDebugEnabled(org.slf4j.Marker) -> isDebugEnabled
    void debug(org.slf4j.Marker,java.lang.String) -> debug
    void debug(org.slf4j.Marker,java.lang.String,java.lang.Object) -> debug
    void debug(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object) -> debug
    void debug(org.slf4j.Marker,java.lang.String,java.lang.Object[]) -> debug
    void debug(org.slf4j.Marker,java.lang.String,java.lang.Throwable) -> debug
    boolean isInfoEnabled() -> isInfoEnabled
    void info(java.lang.String) -> info
    void info(java.lang.String,java.lang.Object) -> info
    void info(java.lang.String,java.lang.Object,java.lang.Object) -> info
    void info(java.lang.String,java.lang.Object[]) -> info
    void info(java.lang.String,java.lang.Throwable) -> info
    boolean isInfoEnabled(org.slf4j.Marker) -> isInfoEnabled
    void info(org.slf4j.Marker,java.lang.String) -> info
    void info(org.slf4j.Marker,java.lang.String,java.lang.Object) -> info
    void info(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object) -> info
    void info(org.slf4j.Marker,java.lang.String,java.lang.Object[]) -> info
    void info(org.slf4j.Marker,java.lang.String,java.lang.Throwable) -> info
    boolean isWarnEnabled() -> isWarnEnabled
    void warn(java.lang.String) -> warn
    void warn(java.lang.String,java.lang.Object) -> warn
    void warn(java.lang.String,java.lang.Object[]) -> warn
    void warn(java.lang.String,java.lang.Object,java.lang.Object) -> warn
    void warn(java.lang.String,java.lang.Throwable) -> warn
    boolean isWarnEnabled(org.slf4j.Marker) -> isWarnEnabled
    void warn(org.slf4j.Marker,java.lang.String) -> warn
    void warn(org.slf4j.Marker,java.lang.String,java.lang.Object) -> warn
    void warn(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object) -> warn
    void warn(org.slf4j.Marker,java.lang.String,java.lang.Object[]) -> warn
    void warn(org.slf4j.Marker,java.lang.String,java.lang.Throwable) -> warn
    boolean isErrorEnabled() -> isErrorEnabled
    void error(java.lang.String) -> error
    void error(java.lang.String,java.lang.Object) -> error
    void error(java.lang.String,java.lang.Object,java.lang.Object) -> error
    void error(java.lang.String,java.lang.Object[]) -> error
    void error(java.lang.String,java.lang.Throwable) -> error
    boolean isErrorEnabled(org.slf4j.Marker) -> isErrorEnabled
    void error(org.slf4j.Marker,java.lang.String) -> error
    void error(org.slf4j.Marker,java.lang.String,java.lang.Object) -> error
    void error(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object) -> error
    void error(org.slf4j.Marker,java.lang.String,java.lang.Object[]) -> error
    void error(org.slf4j.Marker,java.lang.String,java.lang.Throwable) -> error
org.slf4j.LoggerFactory -> org.slf4j.LoggerFactory:
    java.lang.String CODES_PREFIX -> CODES_PREFIX
    java.lang.String NO_STATICLOGGERBINDER_URL -> NO_STATICLOGGERBINDER_URL
    java.lang.String MULTIPLE_BINDINGS_URL -> MULTIPLE_BINDINGS_URL
    java.lang.String NULL_LF_URL -> NULL_LF_URL
    java.lang.String VERSION_MISMATCH -> VERSION_MISMATCH
    java.lang.String SUBSTITUTE_LOGGER_URL -> SUBSTITUTE_LOGGER_URL
    java.lang.String LOGGER_NAME_MISMATCH_URL -> LOGGER_NAME_MISMATCH_URL
    java.lang.String REPLAY_URL -> REPLAY_URL
    java.lang.String UNSUCCESSFUL_INIT_URL -> UNSUCCESSFUL_INIT_URL
    java.lang.String UNSUCCESSFUL_INIT_MSG -> UNSUCCESSFUL_INIT_MSG
    int UNINITIALIZED -> UNINITIALIZED
    int ONGOING_INITIALIZATION -> ONGOING_INITIALIZATION
    int FAILED_INITIALIZATION -> FAILED_INITIALIZATION
    int SUCCESSFUL_INITIALIZATION -> SUCCESSFUL_INITIALIZATION
    int NOP_FALLBACK_INITIALIZATION -> NOP_FALLBACK_INITIALIZATION
    int INITIALIZATION_STATE -> INITIALIZATION_STATE
    org.slf4j.helpers.SubstituteLoggerFactory SUBST_FACTORY -> SUBST_FACTORY
    org.slf4j.helpers.NOPLoggerFactory NOP_FALLBACK_FACTORY -> NOP_FALLBACK_FACTORY
    java.lang.String DETECT_LOGGER_NAME_MISMATCH_PROPERTY -> DETECT_LOGGER_NAME_MISMATCH_PROPERTY
    java.lang.String JAVA_VENDOR_PROPERTY -> JAVA_VENDOR_PROPERTY
    boolean DETECT_LOGGER_NAME_MISMATCH -> DETECT_LOGGER_NAME_MISMATCH
    java.lang.String[] API_COMPATIBILITY_LIST -> API_COMPATIBILITY_LIST
    java.lang.String STATIC_LOGGER_BINDER_PATH -> STATIC_LOGGER_BINDER_PATH
    void reset() -> reset
    void performInitialization() -> performInitialization
    boolean messageContainsOrgSlf4jImplStaticLoggerBinder(java.lang.String) -> messageContainsOrgSlf4jImplStaticLoggerBinder
    void bind() -> bind
    void fixSubstituteLoggers() -> fixSubstituteLoggers
    void failedBinding(java.lang.Throwable) -> failedBinding
    void replayEvents() -> replayEvents
    void emitReplayOrSubstituionWarning(org.slf4j.event.SubstituteLoggingEvent,int) -> emitReplayOrSubstituionWarning
    void replaySingleEvent(org.slf4j.event.SubstituteLoggingEvent) -> replaySingleEvent
    void emitSubstitutionWarning() -> emitSubstitutionWarning
    void emitReplayWarning(int) -> emitReplayWarning
    void versionSanityCheck() -> versionSanityCheck
    java.util.Set findPossibleStaticLoggerBinderPathSet() -> findPossibleStaticLoggerBinderPathSet
    boolean isAmbiguousStaticLoggerBinderPathSet(java.util.Set) -> isAmbiguousStaticLoggerBinderPathSet
    void reportMultipleBindingAmbiguity(java.util.Set) -> reportMultipleBindingAmbiguity
    boolean isAndroid() -> isAndroid
    void reportActualBinding(java.util.Set) -> reportActualBinding
    org.slf4j.Logger getLogger(java.lang.String) -> getLogger
    org.slf4j.Logger getLogger(java.lang.Class) -> getLogger
    boolean nonMatchingClasses(java.lang.Class,java.lang.Class) -> nonMatchingClasses
    org.slf4j.ILoggerFactory getILoggerFactory() -> getILoggerFactory
org.slf4j.MDC -> org.slf4j.MDC:
    java.lang.String NULL_MDCA_URL -> NULL_MDCA_URL
    java.lang.String NO_STATIC_MDC_BINDER_URL -> NO_STATIC_MDC_BINDER_URL
    org.slf4j.spi.MDCAdapter mdcAdapter -> mdcAdapter
    org.slf4j.spi.MDCAdapter bwCompatibleGetMDCAdapterFromBinder() -> bwCompatibleGetMDCAdapterFromBinder
    void put(java.lang.String,java.lang.String) -> put
    org.slf4j.MDC$MDCCloseable putCloseable(java.lang.String,java.lang.String) -> putCloseable
    java.lang.String get(java.lang.String) -> get
    void remove(java.lang.String) -> remove
    void clear() -> clear
    java.util.Map getCopyOfContextMap() -> getCopyOfContextMap
    void setContextMap(java.util.Map) -> setContextMap
    org.slf4j.spi.MDCAdapter getMDCAdapter() -> getMDCAdapter
org.slf4j.MDC$1 -> org.slf4j.a:
org.slf4j.MDC$MDCCloseable -> org.slf4j.MDC$MDCCloseable:
    java.lang.String key -> key
    void close() -> close
org.slf4j.Marker -> org.slf4j.Marker:
    java.lang.String ANY_MARKER -> ANY_MARKER
    java.lang.String ANY_NON_NULL_MARKER -> ANY_NON_NULL_MARKER
    java.lang.String getName() -> getName
    void add(org.slf4j.Marker) -> add
    boolean remove(org.slf4j.Marker) -> remove
    boolean hasChildren() -> hasChildren
    boolean hasReferences() -> hasReferences
    java.util.Iterator iterator() -> iterator
    boolean contains(org.slf4j.Marker) -> contains
    boolean contains(java.lang.String) -> contains
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.slf4j.MarkerFactory -> org.slf4j.MarkerFactory:
    org.slf4j.IMarkerFactory MARKER_FACTORY -> MARKER_FACTORY
    org.slf4j.IMarkerFactory bwCompatibleGetMarkerFactoryFromBinder() -> bwCompatibleGetMarkerFactoryFromBinder
    org.slf4j.Marker getMarker(java.lang.String) -> getMarker
    org.slf4j.Marker getDetachedMarker(java.lang.String) -> getDetachedMarker
    org.slf4j.IMarkerFactory getIMarkerFactory() -> getIMarkerFactory
org.slf4j.event.EventConstants -> org.slf4j.event.EventConstants:
    int ERROR_INT -> ERROR_INT
    int WARN_INT -> WARN_INT
    int INFO_INT -> INFO_INT
    int DEBUG_INT -> DEBUG_INT
    int TRACE_INT -> TRACE_INT
    java.lang.String NA_SUBST -> NA_SUBST
org.slf4j.event.EventRecodingLogger -> org.slf4j.event.EventRecodingLogger:
    java.lang.String name -> name
    org.slf4j.helpers.SubstituteLogger logger -> logger
    java.util.Queue eventQueue -> eventQueue
    java.lang.String getName() -> getName
    void recordEvent(org.slf4j.event.Level,java.lang.String,java.lang.Object[],java.lang.Throwable) -> recordEvent
    void recordEvent(org.slf4j.event.Level,org.slf4j.Marker,java.lang.String,java.lang.Object[],java.lang.Throwable) -> recordEvent
    boolean isTraceEnabled() -> isTraceEnabled
    void trace(java.lang.String) -> trace
    void trace(java.lang.String,java.lang.Object) -> trace
    void trace(java.lang.String,java.lang.Object,java.lang.Object) -> trace
    void trace(java.lang.String,java.lang.Object[]) -> trace
    void trace(java.lang.String,java.lang.Throwable) -> trace
    boolean isTraceEnabled(org.slf4j.Marker) -> isTraceEnabled
    void trace(org.slf4j.Marker,java.lang.String) -> trace
    void trace(org.slf4j.Marker,java.lang.String,java.lang.Object) -> trace
    void trace(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object) -> trace
    void trace(org.slf4j.Marker,java.lang.String,java.lang.Object[]) -> trace
    void trace(org.slf4j.Marker,java.lang.String,java.lang.Throwable) -> trace
    boolean isDebugEnabled() -> isDebugEnabled
    void debug(java.lang.String) -> debug
    void debug(java.lang.String,java.lang.Object) -> debug
    void debug(java.lang.String,java.lang.Object,java.lang.Object) -> debug
    void debug(java.lang.String,java.lang.Object[]) -> debug
    void debug(java.lang.String,java.lang.Throwable) -> debug
    boolean isDebugEnabled(org.slf4j.Marker) -> isDebugEnabled
    void debug(org.slf4j.Marker,java.lang.String) -> debug
    void debug(org.slf4j.Marker,java.lang.String,java.lang.Object) -> debug
    void debug(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object) -> debug
    void debug(org.slf4j.Marker,java.lang.String,java.lang.Object[]) -> debug
    void debug(org.slf4j.Marker,java.lang.String,java.lang.Throwable) -> debug
    boolean isInfoEnabled() -> isInfoEnabled
    void info(java.lang.String) -> info
    void info(java.lang.String,java.lang.Object) -> info
    void info(java.lang.String,java.lang.Object,java.lang.Object) -> info
    void info(java.lang.String,java.lang.Object[]) -> info
    void info(java.lang.String,java.lang.Throwable) -> info
    boolean isInfoEnabled(org.slf4j.Marker) -> isInfoEnabled
    void info(org.slf4j.Marker,java.lang.String) -> info
    void info(org.slf4j.Marker,java.lang.String,java.lang.Object) -> info
    void info(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object) -> info
    void info(org.slf4j.Marker,java.lang.String,java.lang.Object[]) -> info
    void info(org.slf4j.Marker,java.lang.String,java.lang.Throwable) -> info
    boolean isWarnEnabled() -> isWarnEnabled
    void warn(java.lang.String) -> warn
    void warn(java.lang.String,java.lang.Object) -> warn
    void warn(java.lang.String,java.lang.Object,java.lang.Object) -> warn
    void warn(java.lang.String,java.lang.Object[]) -> warn
    void warn(java.lang.String,java.lang.Throwable) -> warn
    boolean isWarnEnabled(org.slf4j.Marker) -> isWarnEnabled
    void warn(org.slf4j.Marker,java.lang.String) -> warn
    void warn(org.slf4j.Marker,java.lang.String,java.lang.Object) -> warn
    void warn(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object) -> warn
    void warn(org.slf4j.Marker,java.lang.String,java.lang.Object[]) -> warn
    void warn(org.slf4j.Marker,java.lang.String,java.lang.Throwable) -> warn
    boolean isErrorEnabled() -> isErrorEnabled
    void error(java.lang.String) -> error
    void error(java.lang.String,java.lang.Object) -> error
    void error(java.lang.String,java.lang.Object,java.lang.Object) -> error
    void error(java.lang.String,java.lang.Object[]) -> error
    void error(java.lang.String,java.lang.Throwable) -> error
    boolean isErrorEnabled(org.slf4j.Marker) -> isErrorEnabled
    void error(org.slf4j.Marker,java.lang.String) -> error
    void error(org.slf4j.Marker,java.lang.String,java.lang.Object) -> error
    void error(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object) -> error
    void error(org.slf4j.Marker,java.lang.String,java.lang.Object[]) -> error
    void error(org.slf4j.Marker,java.lang.String,java.lang.Throwable) -> error
org.slf4j.event.Level -> org.slf4j.event.Level:
    org.slf4j.event.Level ERROR -> ERROR
    org.slf4j.event.Level WARN -> WARN
    org.slf4j.event.Level INFO -> INFO
    org.slf4j.event.Level DEBUG -> DEBUG
    org.slf4j.event.Level TRACE -> TRACE
    int levelInt -> levelInt
    java.lang.String levelStr -> levelStr
    org.slf4j.event.Level[] $VALUES -> $VALUES
    org.slf4j.event.Level[] values() -> values
    org.slf4j.event.Level valueOf(java.lang.String) -> valueOf
    int toInt() -> toInt
    java.lang.String toString() -> toString
org.slf4j.event.LoggingEvent -> org.slf4j.event.LoggingEvent:
    org.slf4j.event.Level getLevel() -> getLevel
    org.slf4j.Marker getMarker() -> getMarker
    java.lang.String getLoggerName() -> getLoggerName
    java.lang.String getMessage() -> getMessage
    java.lang.String getThreadName() -> getThreadName
    java.lang.Object[] getArgumentArray() -> getArgumentArray
    long getTimeStamp() -> getTimeStamp
    java.lang.Throwable getThrowable() -> getThrowable
org.slf4j.event.SubstituteLoggingEvent -> org.slf4j.event.SubstituteLoggingEvent:
    org.slf4j.event.Level level -> level
    org.slf4j.Marker marker -> marker
    java.lang.String loggerName -> loggerName
    org.slf4j.helpers.SubstituteLogger logger -> logger
    java.lang.String threadName -> threadName
    java.lang.String message -> message
    java.lang.Object[] argArray -> argArray
    long timeStamp -> timeStamp
    java.lang.Throwable throwable -> throwable
    org.slf4j.event.Level getLevel() -> getLevel
    void setLevel(org.slf4j.event.Level) -> setLevel
    org.slf4j.Marker getMarker() -> getMarker
    void setMarker(org.slf4j.Marker) -> setMarker
    java.lang.String getLoggerName() -> getLoggerName
    void setLoggerName(java.lang.String) -> setLoggerName
    org.slf4j.helpers.SubstituteLogger getLogger() -> getLogger
    void setLogger(org.slf4j.helpers.SubstituteLogger) -> setLogger
    java.lang.String getMessage() -> getMessage
    void setMessage(java.lang.String) -> setMessage
    java.lang.Object[] getArgumentArray() -> getArgumentArray
    void setArgumentArray(java.lang.Object[]) -> setArgumentArray
    long getTimeStamp() -> getTimeStamp
    void setTimeStamp(long) -> setTimeStamp
    java.lang.String getThreadName() -> getThreadName
    void setThreadName(java.lang.String) -> setThreadName
    java.lang.Throwable getThrowable() -> getThrowable
    void setThrowable(java.lang.Throwable) -> setThrowable
org.slf4j.helpers.BasicMDCAdapter -> org.slf4j.helpers.BasicMDCAdapter:
    java.lang.InheritableThreadLocal inheritableThreadLocal -> inheritableThreadLocal
    void put(java.lang.String,java.lang.String) -> put
    java.lang.String get(java.lang.String) -> get
    void remove(java.lang.String) -> remove
    void clear() -> clear
    java.util.Set getKeys() -> getKeys
    java.util.Map getCopyOfContextMap() -> getCopyOfContextMap
    void setContextMap(java.util.Map) -> setContextMap
org.slf4j.helpers.BasicMDCAdapter$1 -> org.slf4j.helpers.a:
    org.slf4j.helpers.BasicMDCAdapter this$0 -> a
    java.util.Map childValue(java.util.Map) -> a
    java.lang.Object childValue(java.lang.Object) -> childValue
org.slf4j.helpers.BasicMarker -> org.slf4j.helpers.BasicMarker:
    long serialVersionUID -> serialVersionUID
    java.lang.String name -> name
    java.util.List referenceList -> referenceList
    java.lang.String OPEN -> OPEN
    java.lang.String CLOSE -> CLOSE
    java.lang.String SEP -> SEP
    java.lang.String getName() -> getName
    void add(org.slf4j.Marker) -> add
    boolean hasReferences() -> hasReferences
    boolean hasChildren() -> hasChildren
    java.util.Iterator iterator() -> iterator
    boolean remove(org.slf4j.Marker) -> remove
    boolean contains(org.slf4j.Marker) -> contains
    boolean contains(java.lang.String) -> contains
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
org.slf4j.helpers.BasicMarkerFactory -> org.slf4j.helpers.BasicMarkerFactory:
    java.util.concurrent.ConcurrentMap markerMap -> markerMap
    org.slf4j.Marker getMarker(java.lang.String) -> getMarker
    boolean exists(java.lang.String) -> exists
    boolean detachMarker(java.lang.String) -> detachMarker
    org.slf4j.Marker getDetachedMarker(java.lang.String) -> getDetachedMarker
org.slf4j.helpers.FormattingTuple -> org.slf4j.helpers.FormattingTuple:
    org.slf4j.helpers.FormattingTuple NULL -> NULL
    java.lang.String message -> message
    java.lang.Throwable throwable -> throwable
    java.lang.Object[] argArray -> argArray
    java.lang.String getMessage() -> getMessage
    java.lang.Object[] getArgArray() -> getArgArray
    java.lang.Throwable getThrowable() -> getThrowable
org.slf4j.helpers.MarkerIgnoringBase -> org.slf4j.helpers.MarkerIgnoringBase:
    long serialVersionUID -> serialVersionUID
    boolean isTraceEnabled(org.slf4j.Marker) -> isTraceEnabled
    void trace(org.slf4j.Marker,java.lang.String) -> trace
    void trace(org.slf4j.Marker,java.lang.String,java.lang.Object) -> trace
    void trace(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object) -> trace
    void trace(org.slf4j.Marker,java.lang.String,java.lang.Object[]) -> trace
    void trace(org.slf4j.Marker,java.lang.String,java.lang.Throwable) -> trace
    boolean isDebugEnabled(org.slf4j.Marker) -> isDebugEnabled
    void debug(org.slf4j.Marker,java.lang.String) -> debug
    void debug(org.slf4j.Marker,java.lang.String,java.lang.Object) -> debug
    void debug(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object) -> debug
    void debug(org.slf4j.Marker,java.lang.String,java.lang.Object[]) -> debug
    void debug(org.slf4j.Marker,java.lang.String,java.lang.Throwable) -> debug
    boolean isInfoEnabled(org.slf4j.Marker) -> isInfoEnabled
    void info(org.slf4j.Marker,java.lang.String) -> info
    void info(org.slf4j.Marker,java.lang.String,java.lang.Object) -> info
    void info(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object) -> info
    void info(org.slf4j.Marker,java.lang.String,java.lang.Object[]) -> info
    void info(org.slf4j.Marker,java.lang.String,java.lang.Throwable) -> info
    boolean isWarnEnabled(org.slf4j.Marker) -> isWarnEnabled
    void warn(org.slf4j.Marker,java.lang.String) -> warn
    void warn(org.slf4j.Marker,java.lang.String,java.lang.Object) -> warn
    void warn(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object) -> warn
    void warn(org.slf4j.Marker,java.lang.String,java.lang.Object[]) -> warn
    void warn(org.slf4j.Marker,java.lang.String,java.lang.Throwable) -> warn
    boolean isErrorEnabled(org.slf4j.Marker) -> isErrorEnabled
    void error(org.slf4j.Marker,java.lang.String) -> error
    void error(org.slf4j.Marker,java.lang.String,java.lang.Object) -> error
    void error(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object) -> error
    void error(org.slf4j.Marker,java.lang.String,java.lang.Object[]) -> error
    void error(org.slf4j.Marker,java.lang.String,java.lang.Throwable) -> error
    java.lang.String toString() -> toString
    java.lang.String getName() -> getName
org.slf4j.helpers.MessageFormatter -> org.slf4j.helpers.MessageFormatter:
    char DELIM_START -> DELIM_START
    char DELIM_STOP -> DELIM_STOP
    java.lang.String DELIM_STR -> DELIM_STR
    char ESCAPE_CHAR -> ESCAPE_CHAR
    org.slf4j.helpers.FormattingTuple format(java.lang.String,java.lang.Object) -> format
    org.slf4j.helpers.FormattingTuple format(java.lang.String,java.lang.Object,java.lang.Object) -> format
    java.lang.Throwable getThrowableCandidate(java.lang.Object[]) -> getThrowableCandidate
    org.slf4j.helpers.FormattingTuple arrayFormat(java.lang.String,java.lang.Object[]) -> arrayFormat
    java.lang.Object[] trimmedCopy(java.lang.Object[]) -> trimmedCopy
    org.slf4j.helpers.FormattingTuple arrayFormat(java.lang.String,java.lang.Object[],java.lang.Throwable) -> arrayFormat
    boolean isEscapedDelimeter(java.lang.String,int) -> isEscapedDelimeter
    boolean isDoubleEscaped(java.lang.String,int) -> isDoubleEscaped
    void deeplyAppendParameter(java.lang.StringBuilder,java.lang.Object,java.util.Map) -> deeplyAppendParameter
    void safeObjectAppend(java.lang.StringBuilder,java.lang.Object) -> safeObjectAppend
    void objectArrayAppend(java.lang.StringBuilder,java.lang.Object[],java.util.Map) -> objectArrayAppend
    void booleanArrayAppend(java.lang.StringBuilder,boolean[]) -> booleanArrayAppend
    void byteArrayAppend(java.lang.StringBuilder,byte[]) -> byteArrayAppend
    void charArrayAppend(java.lang.StringBuilder,char[]) -> charArrayAppend
    void shortArrayAppend(java.lang.StringBuilder,short[]) -> shortArrayAppend
    void intArrayAppend(java.lang.StringBuilder,int[]) -> intArrayAppend
    void longArrayAppend(java.lang.StringBuilder,long[]) -> longArrayAppend
    void floatArrayAppend(java.lang.StringBuilder,float[]) -> floatArrayAppend
    void doubleArrayAppend(java.lang.StringBuilder,double[]) -> doubleArrayAppend
org.slf4j.helpers.NOPLogger -> org.slf4j.helpers.NOPLogger:
    long serialVersionUID -> serialVersionUID
    org.slf4j.helpers.NOPLogger NOP_LOGGER -> NOP_LOGGER
    java.lang.String getName() -> getName
    boolean isTraceEnabled() -> isTraceEnabled
    void trace(java.lang.String) -> trace
    void trace(java.lang.String,java.lang.Object) -> trace
    void trace(java.lang.String,java.lang.Object,java.lang.Object) -> trace
    void trace(java.lang.String,java.lang.Object[]) -> trace
    void trace(java.lang.String,java.lang.Throwable) -> trace
    boolean isDebugEnabled() -> isDebugEnabled
    void debug(java.lang.String) -> debug
    void debug(java.lang.String,java.lang.Object) -> debug
    void debug(java.lang.String,java.lang.Object,java.lang.Object) -> debug
    void debug(java.lang.String,java.lang.Object[]) -> debug
    void debug(java.lang.String,java.lang.Throwable) -> debug
    boolean isInfoEnabled() -> isInfoEnabled
    void info(java.lang.String) -> info
    void info(java.lang.String,java.lang.Object) -> info
    void info(java.lang.String,java.lang.Object,java.lang.Object) -> info
    void info(java.lang.String,java.lang.Object[]) -> info
    void info(java.lang.String,java.lang.Throwable) -> info
    boolean isWarnEnabled() -> isWarnEnabled
    void warn(java.lang.String) -> warn
    void warn(java.lang.String,java.lang.Object) -> warn
    void warn(java.lang.String,java.lang.Object,java.lang.Object) -> warn
    void warn(java.lang.String,java.lang.Object[]) -> warn
    void warn(java.lang.String,java.lang.Throwable) -> warn
    boolean isErrorEnabled() -> isErrorEnabled
    void error(java.lang.String) -> error
    void error(java.lang.String,java.lang.Object) -> error
    void error(java.lang.String,java.lang.Object,java.lang.Object) -> error
    void error(java.lang.String,java.lang.Object[]) -> error
    void error(java.lang.String,java.lang.Throwable) -> error
org.slf4j.helpers.NOPLoggerFactory -> org.slf4j.helpers.NOPLoggerFactory:
    org.slf4j.Logger getLogger(java.lang.String) -> getLogger
org.slf4j.helpers.NOPMDCAdapter -> org.slf4j.helpers.NOPMDCAdapter:
    void clear() -> clear
    java.lang.String get(java.lang.String) -> get
    void put(java.lang.String,java.lang.String) -> put
    void remove(java.lang.String) -> remove
    java.util.Map getCopyOfContextMap() -> getCopyOfContextMap
    void setContextMap(java.util.Map) -> setContextMap
org.slf4j.helpers.NamedLoggerBase -> org.slf4j.helpers.b:
    long serialVersionUID -> serialVersionUID
    java.lang.String name -> name
    java.lang.String getName() -> getName
    java.lang.Object readResolve() -> readResolve
org.slf4j.helpers.SubstituteLogger -> org.slf4j.helpers.SubstituteLogger:
    java.lang.String name -> name
    org.slf4j.Logger _delegate -> _delegate
    java.lang.Boolean delegateEventAware -> delegateEventAware
    java.lang.reflect.Method logMethodCache -> logMethodCache
    org.slf4j.event.EventRecodingLogger eventRecodingLogger -> eventRecodingLogger
    java.util.Queue eventQueue -> eventQueue
    boolean createdPostInitialization -> createdPostInitialization
    java.lang.String getName() -> getName
    boolean isTraceEnabled() -> isTraceEnabled
    void trace(java.lang.String) -> trace
    void trace(java.lang.String,java.lang.Object) -> trace
    void trace(java.lang.String,java.lang.Object,java.lang.Object) -> trace
    void trace(java.lang.String,java.lang.Object[]) -> trace
    void trace(java.lang.String,java.lang.Throwable) -> trace
    boolean isTraceEnabled(org.slf4j.Marker) -> isTraceEnabled
    void trace(org.slf4j.Marker,java.lang.String) -> trace
    void trace(org.slf4j.Marker,java.lang.String,java.lang.Object) -> trace
    void trace(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object) -> trace
    void trace(org.slf4j.Marker,java.lang.String,java.lang.Object[]) -> trace
    void trace(org.slf4j.Marker,java.lang.String,java.lang.Throwable) -> trace
    boolean isDebugEnabled() -> isDebugEnabled
    void debug(java.lang.String) -> debug
    void debug(java.lang.String,java.lang.Object) -> debug
    void debug(java.lang.String,java.lang.Object,java.lang.Object) -> debug
    void debug(java.lang.String,java.lang.Object[]) -> debug
    void debug(java.lang.String,java.lang.Throwable) -> debug
    boolean isDebugEnabled(org.slf4j.Marker) -> isDebugEnabled
    void debug(org.slf4j.Marker,java.lang.String) -> debug
    void debug(org.slf4j.Marker,java.lang.String,java.lang.Object) -> debug
    void debug(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object) -> debug
    void debug(org.slf4j.Marker,java.lang.String,java.lang.Object[]) -> debug
    void debug(org.slf4j.Marker,java.lang.String,java.lang.Throwable) -> debug
    boolean isInfoEnabled() -> isInfoEnabled
    void info(java.lang.String) -> info
    void info(java.lang.String,java.lang.Object) -> info
    void info(java.lang.String,java.lang.Object,java.lang.Object) -> info
    void info(java.lang.String,java.lang.Object[]) -> info
    void info(java.lang.String,java.lang.Throwable) -> info
    boolean isInfoEnabled(org.slf4j.Marker) -> isInfoEnabled
    void info(org.slf4j.Marker,java.lang.String) -> info
    void info(org.slf4j.Marker,java.lang.String,java.lang.Object) -> info
    void info(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object) -> info
    void info(org.slf4j.Marker,java.lang.String,java.lang.Object[]) -> info
    void info(org.slf4j.Marker,java.lang.String,java.lang.Throwable) -> info
    boolean isWarnEnabled() -> isWarnEnabled
    void warn(java.lang.String) -> warn
    void warn(java.lang.String,java.lang.Object) -> warn
    void warn(java.lang.String,java.lang.Object,java.lang.Object) -> warn
    void warn(java.lang.String,java.lang.Object[]) -> warn
    void warn(java.lang.String,java.lang.Throwable) -> warn
    boolean isWarnEnabled(org.slf4j.Marker) -> isWarnEnabled
    void warn(org.slf4j.Marker,java.lang.String) -> warn
    void warn(org.slf4j.Marker,java.lang.String,java.lang.Object) -> warn
    void warn(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object) -> warn
    void warn(org.slf4j.Marker,java.lang.String,java.lang.Object[]) -> warn
    void warn(org.slf4j.Marker,java.lang.String,java.lang.Throwable) -> warn
    boolean isErrorEnabled() -> isErrorEnabled
    void error(java.lang.String) -> error
    void error(java.lang.String,java.lang.Object) -> error
    void error(java.lang.String,java.lang.Object,java.lang.Object) -> error
    void error(java.lang.String,java.lang.Object[]) -> error
    void error(java.lang.String,java.lang.Throwable) -> error
    boolean isErrorEnabled(org.slf4j.Marker) -> isErrorEnabled
    void error(org.slf4j.Marker,java.lang.String) -> error
    void error(org.slf4j.Marker,java.lang.String,java.lang.Object) -> error
    void error(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object) -> error
    void error(org.slf4j.Marker,java.lang.String,java.lang.Object[]) -> error
    void error(org.slf4j.Marker,java.lang.String,java.lang.Throwable) -> error
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    org.slf4j.Logger delegate() -> delegate
    org.slf4j.Logger getEventRecordingLogger() -> getEventRecordingLogger
    void setDelegate(org.slf4j.Logger) -> setDelegate
    boolean isDelegateEventAware() -> isDelegateEventAware
    void log(org.slf4j.event.LoggingEvent) -> log
    boolean isDelegateNull() -> isDelegateNull
    boolean isDelegateNOP() -> isDelegateNOP
org.slf4j.helpers.SubstituteLoggerFactory -> org.slf4j.helpers.SubstituteLoggerFactory:
    boolean postInitialization -> postInitialization
    java.util.Map loggers -> loggers
    java.util.concurrent.LinkedBlockingQueue eventQueue -> eventQueue
    org.slf4j.Logger getLogger(java.lang.String) -> getLogger
    java.util.List getLoggerNames() -> getLoggerNames
    java.util.List getLoggers() -> getLoggers
    java.util.concurrent.LinkedBlockingQueue getEventQueue() -> getEventQueue
    void postInitialization() -> postInitialization
    void clear() -> clear
org.slf4j.helpers.Util -> org.slf4j.helpers.Util:
    org.slf4j.helpers.Util$ClassContextSecurityManager SECURITY_MANAGER -> SECURITY_MANAGER
    boolean SECURITY_MANAGER_CREATION_ALREADY_ATTEMPTED -> SECURITY_MANAGER_CREATION_ALREADY_ATTEMPTED
    java.lang.String safeGetSystemProperty(java.lang.String) -> safeGetSystemProperty
    boolean safeGetBooleanSystemProperty(java.lang.String) -> safeGetBooleanSystemProperty
    org.slf4j.helpers.Util$ClassContextSecurityManager getSecurityManager() -> getSecurityManager
    org.slf4j.helpers.Util$ClassContextSecurityManager safeCreateSecurityManager() -> safeCreateSecurityManager
    java.lang.Class getCallingClass() -> getCallingClass
    void report(java.lang.String,java.lang.Throwable) -> report
    void report(java.lang.String) -> report
org.slf4j.helpers.Util$1 -> org.slf4j.helpers.c:
org.slf4j.helpers.Util$ClassContextSecurityManager -> org.slf4j.helpers.d:
    java.lang.Class[] getClassContext() -> getClassContext
org.slf4j.impl.StaticLoggerBinder -> org.slf4j.impl.StaticLoggerBinder:
    java.lang.String REQUESTED_API_VERSION -> REQUESTED_API_VERSION
    java.lang.String NULL_CS_URL -> NULL_CS_URL
    org.slf4j.impl.StaticLoggerBinder SINGLETON -> SINGLETON
    java.lang.Object KEY -> KEY
    boolean initialized -> initialized
    ch.qos.logback.classic.LoggerContext defaultLoggerContext -> defaultLoggerContext
    ch.qos.logback.classic.util.ContextSelectorStaticBinder contextSelectorBinder -> contextSelectorBinder
    org.slf4j.impl.StaticLoggerBinder getSingleton() -> getSingleton
    void reset() -> reset
    void init() -> init
    org.slf4j.ILoggerFactory getLoggerFactory() -> getLoggerFactory
    java.lang.String getLoggerFactoryClassStr() -> getLoggerFactoryClassStr
org.slf4j.impl.StaticMDCBinder -> org.slf4j.impl.StaticMDCBinder:
    org.slf4j.impl.StaticMDCBinder SINGLETON -> SINGLETON
    org.slf4j.impl.StaticMDCBinder getSingleton() -> getSingleton
    org.slf4j.spi.MDCAdapter getMDCA() -> getMDCA
    java.lang.String getMDCAdapterClassStr() -> getMDCAdapterClassStr
org.slf4j.impl.StaticMarkerBinder -> org.slf4j.impl.StaticMarkerBinder:
    org.slf4j.impl.StaticMarkerBinder SINGLETON -> SINGLETON
    org.slf4j.IMarkerFactory markerFactory -> markerFactory
    org.slf4j.impl.StaticMarkerBinder getSingleton() -> getSingleton
    org.slf4j.IMarkerFactory getMarkerFactory() -> getMarkerFactory
    java.lang.String getMarkerFactoryClassStr() -> getMarkerFactoryClassStr
org.slf4j.spi.LocationAwareLogger -> org.slf4j.spi.LocationAwareLogger:
    int TRACE_INT -> TRACE_INT
    int DEBUG_INT -> DEBUG_INT
    int INFO_INT -> INFO_INT
    int WARN_INT -> WARN_INT
    int ERROR_INT -> ERROR_INT
    void log(org.slf4j.Marker,java.lang.String,int,java.lang.String,java.lang.Object[],java.lang.Throwable) -> log
org.slf4j.spi.LoggerFactoryBinder -> org.slf4j.spi.LoggerFactoryBinder:
    org.slf4j.ILoggerFactory getLoggerFactory() -> getLoggerFactory
    java.lang.String getLoggerFactoryClassStr() -> getLoggerFactoryClassStr
org.slf4j.spi.MDCAdapter -> org.slf4j.spi.MDCAdapter:
    void put(java.lang.String,java.lang.String) -> put
    java.lang.String get(java.lang.String) -> get
    void remove(java.lang.String) -> remove
    void clear() -> clear
    java.util.Map getCopyOfContextMap() -> getCopyOfContextMap
    void setContextMap(java.util.Map) -> setContextMap
org.slf4j.spi.MarkerFactoryBinder -> org.slf4j.spi.MarkerFactoryBinder:
    org.slf4j.IMarkerFactory getMarkerFactory() -> getMarkerFactory
    java.lang.String getMarkerFactoryClassStr() -> getMarkerFactoryClassStr
